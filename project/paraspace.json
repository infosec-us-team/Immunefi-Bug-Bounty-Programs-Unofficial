{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "paraspace",
      "slug": "paraspace",
      "project": "ParaSpace",
      "maxBounty": 200000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1lywUam7nqxh9l4cT2YUhP/4b060056d526c585d83d1e151f459b9d/Logo_Mark_Black.svg",
      "launchDate": "2023-01-09T09:30-05:00",
      "updatedDate": "2023-09-19T15:00:27.151Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $200,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $3,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "oBsk0eUS5R9TDIth0ZJgO",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/misc/flashclaim/AirdropFlashClaimReceiver.sol",
          "description": "misc/flashclaim/AirdropFlashClaimReceiver"
        },
        {
          "id": "mxPYwrV7cNknhrkIlj7pT",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/misc/flashclaim/UserFlashclaimRegistry.sol",
          "description": "misc/flashclaim/UserFlashclaimRegistry"
        },
        {
          "id": "4TvRsAsKVXBXuSuAbQ4HiY",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/misc/marketplaces/LooksRareAdapter.sol",
          "description": "misc/marketplaces/LooksRareAdapter"
        },
        {
          "id": "4loyESF1kpy6XYybMLXP6I",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/misc/marketplaces/SeaportAdapter.sol",
          "description": "misc/marketplaces/SeaportAdapter"
        },
        {
          "id": "2Xdsvfjz7stDOUXAR2FI8S",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/misc/marketplaces/X2Y2Adapter.sol",
          "description": "misc/marketplaces/X2Y2Adapter"
        },
        {
          "id": "21BbQS85snyL5TMjE6jZjB",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/misc/ERC721OracleWrapper.sol",
          "description": "misc/ERC721OracleWrapper"
        },
        {
          "id": "28zjZhg5Aw4OmM7K8xf6Cl",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/misc/NFTFloorOracle.sol",
          "description": "misc/NFTFloorOracle"
        },
        {
          "id": "F8iHKwV7o9wmf7GPIvrwq",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/misc/ParaSpaceOracle.sol",
          "description": "misc/ParaSpaceOracle"
        },
        {
          "id": "fcV6CFER1d3sk6ZQJiWsy",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/misc/ProtocolDataProvider.sol",
          "description": "misc/ProtocolDataProvider"
        },
        {
          "id": "5MuP69fgV1kiFIImGUKdGV",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/misc/UniswapV3OracleWrapper.sol",
          "description": "misc/UniswapV3OracleWrapper"
        },
        {
          "id": "4og65rvbm0FSWMz20OJTXa",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/configuration/ACLManager.sol",
          "description": "protocol/configuration/ACLManager"
        },
        {
          "id": "2HLRQtfhzt6xZBaX2aag9K",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/configuration/PoolAddressesProvider.sol",
          "description": "protocol/configuration/PoolAddressesProvider"
        },
        {
          "id": "1vwWRw356VDODWtsmm2XJ1",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol",
          "description": "protocol/configuration/PoolAddressesProviderRegistry"
        },
        {
          "id": "5tGndNnSkkCul5UW8Pl6NZ",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/configuration/ReserveConfiguration.sol",
          "description": "protocol/libraries/configuration/ReserveConfiguration"
        },
        {
          "id": "6jjBv1wPanZ3zxWSclHgx9",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/configuration/UserConfiguration.sol",
          "description": "protocol/libraries/configuration/UserConfiguration"
        },
        {
          "id": "5p77LeBXz2y72uefDk2BSf",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/AuctionLogic.sol",
          "description": "protocol/libraries/logic/AuctionLogic"
        },
        {
          "id": "2XBApEZ63e275l3KFchx7I",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/BorrowLogic.sol",
          "description": "protocol/libraries/logic/BorrowLogic"
        },
        {
          "id": "30tyPz9GL81tN3hPoEW7HD",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/ConfiguratorLogic.sol",
          "description": "protocol/libraries/logic/ConfiguratorLogic"
        },
        {
          "id": "1kDtkCm8GZTNSVOShfKCTF",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/FlashClaimLogic.sol",
          "description": "protocol/libraries/logic/FlashClaimLogic"
        },
        {
          "id": "5THaMz0y46xxghv6qapflw",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/GenericLogic.sol",
          "description": "protocol/libraries/logic/GenericLogic"
        },
        {
          "id": "4HFVANRAzRtG9Ci77Vm7Sy",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/LiquidationLogic.sol",
          "description": "protocol/libraries/logic/LiquidationLogic"
        },
        {
          "id": "6j1mqAyOwHFTE8u9VBtCUm",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/MarketplaceLogic.sol",
          "description": "protocol/libraries/logic/MarketplaceLogic"
        },
        {
          "id": "rCrsTvx3WllW4Vafnjv0L",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/PoolLogic.sol",
          "description": "protocol/libraries/logic/PoolLogic"
        },
        {
          "id": "64JX52NPKsOzcYZ2nsasrE",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/ReserveLogic.sol",
          "description": "protocol/libraries/logic/ReserveLogic"
        },
        {
          "id": "4MogGngHnJMJHtrXZjtcqK",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/SupplyLogic.sol",
          "description": "protocol/libraries/logic/SupplyLogic"
        },
        {
          "id": "15cwA5fNQBO9DM9L16D1K3",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/libraries/logic/ValidationLogic.sol",
          "description": "protocol/libraries/logic/ValidationLogic"
        },
        {
          "id": "5TYH7Z6b95mrqSmIZ4iikk",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/pool/DefaultReserveAuctionStrategy.sol",
          "description": "protocol/pool/DefaultReserveAuctionStrategy"
        },
        {
          "id": "1xzv1zPy6SVAZqDITpgzDX",
          "type": "smart_contract",
          "url": "http://defaultreserveinterestratestrategy.sol",
          "description": "protocol/pool/DefaultReserveInterestRateStrategy"
        },
        {
          "id": "66Cxx2HXPwD8DyvpqwY48y",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/pool/PoolApeStaking.sol",
          "description": "protocol/pool/PoolApeStaking"
        },
        {
          "id": "6LTdDeXqlA95tIpHES0mvb",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/pool/PoolConfigurator.sol",
          "description": "protocol/pool/PoolConfigurator"
        },
        {
          "id": "6kLYz3wtJeZL4Jfc3snntb",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/pool/PoolCore.sol",
          "description": "protocol/pool/PoolCore"
        },
        {
          "id": "6LsvgaNfuZE9hQQXBjGPAi",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/pool/PoolMarketplace.sol",
          "description": "protocol/pool/PoolMarketplace"
        },
        {
          "id": "DWIvxhHZOjTuYNgFnayzy",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/pool/PoolParameters.sol",
          "description": "protocol/pool/PoolParameters"
        },
        {
          "id": "6wPVDxxHj8yH8YBzZmj23o",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/pool/PoolStorage.sol",
          "description": "protocol/pool/PoolStorage"
        },
        {
          "id": "33mwZLdWEOjEtZqLh31dR2",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/tokenization/base/MintableIncentivizedERC721.sol",
          "description": "protocol/tokenization/base/MintableIncentivizedERC721"
        },
        {
          "id": "19NoOo9lII90oT1de4wlIA",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/tokenization/NToken.sol",
          "description": "protocol/tokenization/NToken"
        },
        {
          "id": "6dZKppYivnKzkJMNTxGdCv",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/tokenization/NTokenApeStaking.sol",
          "description": "protocol/tokenization/NTokenApeStaking"
        },
        {
          "id": "ngCXJVALFbq5llxcr3nXk",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/tokenization/NTokenBAYC.sol",
          "description": "protocol/tokenization/NTokenBAYC"
        },
        {
          "id": "66aP5vp3UmsafybD3JONNa",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/tokenization/NTokenMAYC.sol",
          "description": "protocol/tokenization/NTokenMAYC"
        },
        {
          "id": "3LATP3mIpoowndIrBJXzOG",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/tokenization/NTokenMoonBirds.sol",
          "description": "protocol/tokenization/NTokenMoonBirds"
        },
        {
          "id": "31lp9pTdbKOICubuOZiYjQ",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/tokenization/NTokenUniswapV3.sol",
          "description": "protocol/tokenization/NTokenUniswapV3"
        },
        {
          "id": "4e9cXYDO9wyjxyox6AzCui",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/tokenization/libraries/MintableERC721Logic.sol",
          "description": "protocol/tokenization/libraries/MintableERC721Logic"
        },
        {
          "id": "UkriLKf5aw4hGo3AzIdyO",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/protocol/tokenization/libraries/ApeStakingLogic.sol",
          "description": "protocol/tokenization/libraries/ApeStakingLogic"
        },
        {
          "id": "4Oh8B8dIWCirEUZCsBCHe0",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/ui/WETHGateway.sol",
          "description": "protocol/ui/WETHGateway"
        },
        {
          "id": "3832EHAEOtJWOcoJJlbDSk",
          "type": "smart_contract",
          "url": "https://github.com/para-space/paraspace-core/blob/main/contracts/ui/WPunkGateway.sol",
          "description": "protocol/ui/WPunkGateway"
        }
      ],
      "impacts": [
        {
          "id": "6czy3kxnVJW05jtfaFFtVa",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1UXVjKgsFt7UuzKpkET78Z",
          "title": "Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5JeoMa7V8IOB0NujNqrbcb",
          "title": "Permanent freezing of user funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2pljfoL7JGvDEejGU5TO95",
          "title": "Permanent freezing of user NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3IT5fdZEb6wVMGLTQPEGop",
          "title": "Unauthorized minting of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7zjd1Iu6Ov7W5K046qB6wD",
          "title": "Unintended alteration of what the NFT represents (e.g. token URI, payload, artistic content)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "67gB80XwHAIqWSUEiDOafF",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "514xnfZw92qRdrH60gokIE",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1xVFOs5ttCXGqVN6Ibgh5V",
          "title": "Theft of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2lpO914i798Suq7sWrG5sZ",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "57BaoWpyZ4OTQdEEhFy5Vq",
          "title": "Permanent freezing of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5hJ2e5GsNmmiYMDGSeqwXE",
          "title": "Temporary freezing of funds for at least 24 hours",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4zDVRv00IkgzmGkn0xw9rq",
          "title": "Temporary freezing NFTs for at least 24 hours",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7jCe9C0zt41ofXFG8rzbeo",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3udF8U38NXT7usEQGGD55H",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3MjM3hVwRkFlwPUGfriWzV",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3Z9RyCVezXbYhMxwO1p9B5",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4SQZ2Zjbel88VEFa2Go1wZ",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Para Space is a decentralized protocol with a foundation of providing lending and borrowing services for various assets on the Ethereum blockchain. Users can lend their NFTs and ERC-20 tokens to earn income in the form of interest, as well as use their lended assets as collateral for borrowing assets. One of the main entry bars for retail users into the NFT market is the high price of NFT items, especially blue-chip NFTs, therefore, ParaSpace introduces its Marketplace, allowing users to access NFTs through leveraged buy and leveraged bid, using the purchased item as collateral for the outstanding loan.\n\nThe Para Space protocol aims to provide users access to cash and profits without selling their assets. Para Space uses a pool-based money market model whereby users supply their assets to a pool to earn interest and instantly borrow from the pool when collateralizing their asset.\n\nFor more information about Para Space, please visit [https://para.space/](https://para.space/). \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, all bug reports must come with a suggestion for a fix in order to be considered for a reward. \n\nKnown issues highlighted in the following audit reports are considered out of scope: \n- [Certik Audit](https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FTrzK55XEvu2r3uBZANDN%2FREP-final-20221025T060830Z.pdf?alt=media&token=0a582b33-f05c-4e6e-b66e-f3da32b0cb4c)\n- [Secure3](https://github.com/Secure3Audit/Secure3Academy/tree/main/audit_reports/ParaSpace)\n- [Trail of Bits](https://github.com/trailofbits/publications/blob/master/reviews/ParallelFinance2FixReview.pdf)\n- [Trail of Bits](https://github.com/trailofbits/publications/blob/master/reviews/ParallelFinance3.pdf)\n- [0xQuit](https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2F68ZQDO2ooO08WQzgSfwi%2FParaSpace%20Contract%20Audit.pdf?alt=media&token=24b5b3c3-ae8e-4c5a-92c3-17b5dd3edd92)\n- [Veridise](https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FfF8ZVrmygSWIz8tY6n0x%2FVAR_Parallel2.pdf?alt=media&token=72e49c1e-2c00-408e-8a89-437543e404ad)\n- [0xQuit](https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FJBp3r0NvwTBshjgbZSDr%2FParaSpace%20Autocompounding%20Ape%20Review.pdf?alt=media&token=c9bd379d-880b-4c96-a818-3e1cd878ca1b)\n- [Secure3](https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FZLVihMsHpqmJFhnm0kZi%2FParaSpaceApeYield_final_Secure3_Audit_Report.pdf?alt=media&token=937eba50-b975-4753-b034-90c175b42073)\n- [Secure3](https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FcmfaiYVL3O1Qq4KyVIJJ%2FParaSpaceV1.4P1_final_Secure3_Audit_Report.pdf?alt=media&token=4b74a271-c549-41e7-b3ee-4d065ce87d8d)\n- [Secure3](https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FLimRSLp0Erz0egxrW2fS%2FParaSpaceV1.4P2_final_Secure3_Audit_Report.pdf?alt=media&token=20115def-6481-496f-8fed-78264c4ed073)\n- [Secure3](https://docs.google.com/document/d/14rBCh8Iofg1UrpAUinycj-uAdATCR5CcmWgtmcw_lUg/edit)\n\nTo be eligible for a reward under this Program, you must:\n\n- Discover a previously unreported, non-public vulnerability within the scope of this Program. Vulnerabilities must be distinct from the issues covered in the previously conducted publicly available audits.\n- Be the first to disclose the unique vulnerability to the Team by the disclosure requirements below. If similar vulnerabilities are reported, the first submission shall be rewarded (if determined valid and otherwise in the scope of this Program).\n- Possess sufficient technical knowledge and provide sufficient information necessary to reproduce and fix the vulnerability.\n- Not engage in any unlawful conduct when disclosing the bug, including through threats, demands, or any other coercive tactics.\n- Not exploit the vulnerability in any way, including by making it public or obtaining a profit (other than a reward under this Program). Any publicity in any way, whether direct or indirect, relating to any bug or vulnerability will automatically disqualify it and you from the Program.\n- Make a good faith effort to avoid privacy violations, data destruction, interruption or degradation of ParaSpace.\n- Submit only one vulnerability per submission unless you need to chain vulnerabilities to impact any vulnerabilities. If you want to add more information to a provided issue, create a new submission referencing the initial one.\n- Not submit a separate vulnerability caused by an underlying issue that is the same as an issue on which a reward has been paid under this Program. However, if a vulnerability is found that bypasses a previous fix that was deployed, it will still be considered within the scope of this program.\n\nPayouts are handled by the __Para Space__ team directly and are denominated in __USD__. However, payouts are conducted in __USDC__. Future payouts may be done in our own protocol token, at the discretion of the team. \n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Vulnerabilities related to domains, DNS or servers of websites\n- Any already-reported bugs\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Vulnerabilities already reported and/or discovered in contracts built by third parties on ParaSpace\n- Bugs in any third party contract or platform that interacts with ParaSpace\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All smart contracts of Para Space can be found at [https://github.com/para-space/paraspace-core](https://github.com/para-space/paraspace-core) and the deployed commit is d455db2eceafaec46988867c17126600e46f1ae2. However, only the contracts listed in the Assets in Scope table are considered as in-scope of the bug bounty program.",
      "impactsBody": null,
      "immunefiStandard": null,
      "tags": {
        "productType": [
          "Lending"
        ],
        "projectType": [
          "NFT"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $200,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $3,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Para Space is a decentralized protocol with a foundation of providing lending and borrowing services for various assets on the Ethereum blockchain. Users can lend their NFTs and ERC-20 tokens to earn income in the form of interest, as well as use their lended assets as collateral for borrowing assets. One of the main entry bars for retail users into the NFT market is the high price of NFT items, especially blue-chip NFTs, therefore, ParaSpace introduces its Marketplace, allowing users to access NFTs through leveraged buy and leveraged bid, using the purchased item as collateral for the outstanding loan.\"), mdx(\"p\", null, \"The Para Space protocol aims to provide users access to cash and profits without selling their assets. Para Space uses a pool-based money market model whereby users supply their assets to a pool to earn interest and instantly borrow from the pool when collateralizing their asset.\"), mdx(\"p\", null, \"For more information about Para Space, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://para.space/\"\n  }, \"https://para.space/\"), \". \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Para Space is a decentralized protocol with a foundation of providing lending and borrowing services for various assets on the Ethereum blockchain. Users can lend their NFTs and ERC-20 tokens to earn income in the form of interest, as well as use their lended assets as collateral for borrowing assets. One of the main entry bars for retail users into the NFT market is the high price of NFT items, especially blue-chip NFTs, therefore, ParaSpace introduces its Marketplace, allowing users to access NFTs through leveraged buy and leveraged bid, using the purchased item as collateral for the outstanding loan.</p><p>The Para Space protocol aims to provide users access to cash and profits without selling their assets. Para Space uses a pool-based money market model whereby users supply their assets to a pool to earn interest and instantly borrow from the pool when collateralizing their asset.</p><p>For more information about Para Space, please visit <a href=\"https://para.space/\">https://para.space/</a>. </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, all bug reports must come with a suggestion for a fix in order to be considered for a reward. \"), mdx(\"p\", null, \"Known issues highlighted in the following audit reports are considered out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FTrzK55XEvu2r3uBZANDN%2FREP-final-20221025T060830Z.pdf?alt=media&token=0a582b33-f05c-4e6e-b66e-f3da32b0cb4c\"\n  }, \"Certik Audit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/Secure3Audit/Secure3Academy/tree/main/audit_reports/ParaSpace\"\n  }, \"Secure3\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/trailofbits/publications/blob/master/reviews/ParallelFinance2FixReview.pdf\"\n  }, \"Trail of Bits\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/trailofbits/publications/blob/master/reviews/ParallelFinance3.pdf\"\n  }, \"Trail of Bits\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2F68ZQDO2ooO08WQzgSfwi%2FParaSpace%20Contract%20Audit.pdf?alt=media&token=24b5b3c3-ae8e-4c5a-92c3-17b5dd3edd92\"\n  }, \"0xQuit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FfF8ZVrmygSWIz8tY6n0x%2FVAR_Parallel2.pdf?alt=media&token=72e49c1e-2c00-408e-8a89-437543e404ad\"\n  }, \"Veridise\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FJBp3r0NvwTBshjgbZSDr%2FParaSpace%20Autocompounding%20Ape%20Review.pdf?alt=media&token=c9bd379d-880b-4c96-a818-3e1cd878ca1b\"\n  }, \"0xQuit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FZLVihMsHpqmJFhnm0kZi%2FParaSpaceApeYield_final_Secure3_Audit_Report.pdf?alt=media&token=937eba50-b975-4753-b034-90c175b42073\"\n  }, \"Secure3\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FcmfaiYVL3O1Qq4KyVIJJ%2FParaSpaceV1.4P1_final_Secure3_Audit_Report.pdf?alt=media&token=4b74a271-c549-41e7-b3ee-4d065ce87d8d\"\n  }, \"Secure3\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FLimRSLp0Erz0egxrW2fS%2FParaSpaceV1.4P2_final_Secure3_Audit_Report.pdf?alt=media&token=20115def-6481-496f-8fed-78264c4ed073\"\n  }, \"Secure3\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.google.com/document/d/14rBCh8Iofg1UrpAUinycj-uAdATCR5CcmWgtmcw_lUg/edit\"\n  }, \"Secure3\"))), mdx(\"p\", null, \"To be eligible for a reward under this Program, you must:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discover a previously unreported, non-public vulnerability within the scope of this Program. Vulnerabilities must be distinct from the issues covered in the previously conducted publicly available audits.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Be the first to disclose the unique vulnerability to the Team by the disclosure requirements below. If similar vulnerabilities are reported, the first submission shall be rewarded (if determined valid and otherwise in the scope of this Program).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Possess sufficient technical knowledge and provide sufficient information necessary to reproduce and fix the vulnerability.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not engage in any unlawful conduct when disclosing the bug, including through threats, demands, or any other coercive tactics.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not exploit the vulnerability in any way, including by making it public or obtaining a profit (other than a reward under this Program). Any publicity in any way, whether direct or indirect, relating to any bug or vulnerability will automatically disqualify it and you from the Program.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make a good faith effort to avoid privacy violations, data destruction, interruption or degradation of ParaSpace.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submit only one vulnerability per submission unless you need to chain vulnerabilities to impact any vulnerabilities. If you want to add more information to a provided issue, create a new submission referencing the initial one.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not submit a separate vulnerability caused by an underlying issue that is the same as an issue on which a reward has been paid under this Program. However, if a vulnerability is found that bypasses a previous fix that was deployed, it will still be considered within the scope of this program.\")), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Para Space\"), \" team directly and are denominated in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD\"), \". However, payouts are conducted in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \". Future payouts may be done in our own protocol token, at the discretion of the team. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. </p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, all bug reports must come with a suggestion for a fix in order to be considered for a reward. </p><p>Known issues highlighted in the following audit reports are considered out of scope: </p><ul><li><a href=\"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FTrzK55XEvu2r3uBZANDN%2FREP-final-20221025T060830Z.pdf?alt=media&amp;token=0a582b33-f05c-4e6e-b66e-f3da32b0cb4c\">Certik Audit</a></li><li><a href=\"https://github.com/Secure3Audit/Secure3Academy/tree/main/audit_reports/ParaSpace\">Secure3</a></li><li><a href=\"https://github.com/trailofbits/publications/blob/master/reviews/ParallelFinance2FixReview.pdf\">Trail of Bits</a></li><li><a href=\"https://github.com/trailofbits/publications/blob/master/reviews/ParallelFinance3.pdf\">Trail of Bits</a></li><li><a href=\"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2F68ZQDO2ooO08WQzgSfwi%2FParaSpace%20Contract%20Audit.pdf?alt=media&amp;token=24b5b3c3-ae8e-4c5a-92c3-17b5dd3edd92\">0xQuit</a></li><li><a href=\"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FfF8ZVrmygSWIz8tY6n0x%2FVAR_Parallel2.pdf?alt=media&amp;token=72e49c1e-2c00-408e-8a89-437543e404ad\">Veridise</a></li><li><a href=\"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FJBp3r0NvwTBshjgbZSDr%2FParaSpace%20Autocompounding%20Ape%20Review.pdf?alt=media&amp;token=c9bd379d-880b-4c96-a818-3e1cd878ca1b\">0xQuit</a></li><li><a href=\"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FZLVihMsHpqmJFhnm0kZi%2FParaSpaceApeYield_final_Secure3_Audit_Report.pdf?alt=media&amp;token=937eba50-b975-4753-b034-90c175b42073\">Secure3</a></li><li><a href=\"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FcmfaiYVL3O1Qq4KyVIJJ%2FParaSpaceV1.4P1_final_Secure3_Audit_Report.pdf?alt=media&amp;token=4b74a271-c549-41e7-b3ee-4d065ce87d8d\">Secure3</a></li><li><a href=\"https://625248360-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FSkcQFPKbtOmfoFkTbdbO%2Fuploads%2FLimRSLp0Erz0egxrW2fS%2FParaSpaceV1.4P2_final_Secure3_Audit_Report.pdf?alt=media&amp;token=20115def-6481-496f-8fed-78264c4ed073\">Secure3</a></li><li><a href=\"https://docs.google.com/document/d/14rBCh8Iofg1UrpAUinycj-uAdATCR5CcmWgtmcw_lUg/edit\">Secure3</a></li></ul><p>To be eligible for a reward under this Program, you must:</p><ul><li>Discover a previously unreported, non-public vulnerability within the scope of this Program. Vulnerabilities must be distinct from the issues covered in the previously conducted publicly available audits.</li><li>Be the first to disclose the unique vulnerability to the Team by the disclosure requirements below. If similar vulnerabilities are reported, the first submission shall be rewarded (if determined valid and otherwise in the scope of this Program).</li><li>Possess sufficient technical knowledge and provide sufficient information necessary to reproduce and fix the vulnerability.</li><li>Not engage in any unlawful conduct when disclosing the bug, including through threats, demands, or any other coercive tactics.</li><li>Not exploit the vulnerability in any way, including by making it public or obtaining a profit (other than a reward under this Program). Any publicity in any way, whether direct or indirect, relating to any bug or vulnerability will automatically disqualify it and you from the Program.</li><li>Make a good faith effort to avoid privacy violations, data destruction, interruption or degradation of ParaSpace.</li><li>Submit only one vulnerability per submission unless you need to chain vulnerabilities to impact any vulnerabilities. If you want to add more information to a provided issue, create a new submission referencing the initial one.</li><li>Not submit a separate vulnerability caused by an underlying issue that is the same as an issue on which a reward has been paid under this Program. However, if a vulnerability is found that bypasses a previous fix that was deployed, it will still be considered within the scope of this program.</li></ul><p>Payouts are handled by the <strong>Para Space</strong> team directly and are denominated in <strong>USD</strong>. However, payouts are conducted in <strong>USDC</strong>. Future payouts may be done in our own protocol token, at the discretion of the team. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities related to domains, DNS or servers of websites\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any already-reported bugs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities already reported and/or discovered in contracts built by third parties on ParaSpace\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bugs in any third party contract or platform that interacts with ParaSpace\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Vulnerabilities related to domains, DNS or servers of websites</li><li>Any already-reported bugs</li><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Vulnerabilities already reported and/or discovered in contracts built by third parties on ParaSpace</li><li>Bugs in any third party contract or platform that interacts with ParaSpace</li><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Para Space can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/para-space/paraspace-core\"\n  }, \"https://github.com/para-space/paraspace-core\"), \" and the deployed commit is d455db2eceafaec46988867c17126600e46f1ae2. However, only the contracts listed in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Para Space can be found at <a href=\"https://github.com/para-space/paraspace-core\">https://github.com/para-space/paraspace-core</a> and the deployed commit is d455db2eceafaec46988867c17126600e46f1ae2. However, only the contracts listed in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
