{
  "pageProps": {
    "isAttackathon": false,
    "academyContent": null,
    "ethereumAttackathonSponsors": null,
    "project": {
      "features": [
        "Boost",
        "Vault",
        "Managed Triage: Signal Booster"
      ],
      "premiumTriaging": true,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "bounty": {
      "contentfulId": "6ggCg3klXKErudNSLMhug3",
      "id": "folks-sc-library",
      "slug": "folks-sc-library",
      "project": "Audit Comp | Folks Smart Contract Library",
      "maxBounty": 30000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3dSmZSceT3gQBxUK58GG4y/e40e55bfc2c284e8c2ea1a11c89b837f/Folks-logo-icon-white__1_.png",
      "launchDate": "2025-07-07T10:00:00.000Z",
      "endDate": "2025-07-21T10:00:00.000Z",
      "updatedDate": "2025-08-28T11:53:09.945Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Portion of Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Portion of Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Portion of Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "Portion of Reward Pool",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "jznTibbce9aRB5FvyawRM",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/algorand-smart-contract-library/blob/main/contracts/library/AccessControl.py",
          "description": "AccessControl - Contract module that allows children to implement role-based access control mechanisms.",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-07-07T10:00:00.000Z"
        },
        {
          "id": "73p0FZJrl4Nqd6H4lEold9",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/algorand-smart-contract-library/blob/main/contracts/library/Initialisable.py",
          "description": "Initialisable - Contract that allows children to be initialisable",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-07-07T10:00:00.000Z"
        },
        {
          "id": "7miv1A4tS1D6SPehkjwNHX",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/algorand-smart-contract-library/blob/main/contracts/library/extensions/InitialisableWithCreator.py",
          "description": "InitialisableWithCreator - Extension to Initialisable Contract which ensures caller of \"initialise\" method is contract creator.",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-07-07T10:00:00.000Z"
        },
        {
          "id": "2BmQKrmaKD05oSzJnFGeN",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/algorand-smart-contract-library/blob/main/contracts/library/Upgradeable.py",
          "description": "Upgradeable - Contract module that allows children to implement scheduled upgrade mechanisms.",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-07-07T10:00:00.000Z"
        },
        {
          "id": "17wtx0IMIoxsAas9Ybs0sG",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/algorand-smart-contract-library/blob/main/contracts/library/RateLimiter.py",
          "description": "RateLimiter - Contract module that allows children to implement rate limiting mechanisms.",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-07-07T10:00:00.000Z"
        },
        {
          "id": "Pw6JrDTl18kiQDBfroQOR",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/algorand-smart-contract-library/blob/main/contracts/library/UInt64SetLib.py",
          "description": "UInt64SetLib - Subroutines to mimic the behaviour of a “set” data structure for uint64 values.",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-07-07T10:00:00.000Z"
        }
      ],
      "impacts": [
        {
          "id": 34,
          "type": "smart_contract",
          "severity": "low",
          "title": "Contract fails to deliver promised returns, but doesn't lose value"
        },
        {
          "id": 5629,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Unauthorized escalation of privileged roles which deviate from the original permissions"
        },
        {
          "id": 5623,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Bypass of the address permissions during an upgrade"
        },
        {
          "id": 5624,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Bypass of the rate limit beyond set parameters"
        },
        {
          "id": 5625,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent denial of service of a smart contract functionality"
        },
        {
          "id": 5626,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Temporary denial of service for more than one block"
        },
        {
          "id": 5627,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Impacts caused by griefing with no economic damage other than transaction fees where fix requires a change or a pause of a smart contract"
        },
        {
          "id": 5628,
          "type": "smart_contract",
          "severity": "low",
          "title": "Temporary denial of service (smart contract is made unable to operate for one block, functionality is restored in the next block)"
        }
      ],
      "programOverview": "Folks Finance is a leading DeFi platform providing innovative tools for lending, borrowing, trading and managing digital assets, all in one place.\n\nThe Folks Smart Contract Library is a curated, modular collection of audited, reusable smart contracts designed to accelerate development on the Algorand blockchain. The library allows you to focus on your business logic by abstracting away common patterns and security mechanisms.\n\nFor more information about Folks Finance and their existing products, please visit https://folks.finance.",
      "prioritizedVulnerabilities": "_blank_",
      "rewardsBody": "__Audit Competition Flat Reward Pool__\n\nThe following reward terms are a summary. For the full details read our [Standardized Competition Reward Terms](https://immunefisupport.zendesk.com/hc/en-us/articles/31657285001873-Standardized-Competition-Reward-Terms) and includes All Star Pool and Podium Pool reserved for [All Star Program](https://immunefi.com/allstars/) participants\n\nThe reward pool is **$30,000 USD** if any bug is found. That means that even if 1 Low severity bug is found, the whole reward pool is unlocked and has to be fully distributed between security researchers. \n\nIf not a single bug is found (Insights do not count as bugs) the reward pool is $4,500 USD.\n\nPrivate known issues, meaning known issues that were not publicly disclosed, are valid and unlock the corresponding reward pool.\n\nDuplicates and private known issues are valid for a reward.\n\nRewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.3](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/).\n\nRewards will be distributed all at once based on Immunefi’s distribution formula after the event has concluded and the final bug reports have been resolved.\n\n__Insight Rewards Payment Terms__\n\n*Insight Rewards*: Portion of the Rewards Pool\n\n*The \"Insight\" severity was introduced on Boost (Audit Competitions) & Attackathon programs to recognize contributions that extend beyond identifying immediate vulnerabilities. \"Insights\" underscores our commitment to valuing all types of contributions that contribute to a more secure environment. [View more information about Insights](https://immunefisupport.zendesk.com/hc/en-us/articles/13333032674961-Severity-Classification-System?utm_source=immunefi)\n\n**Duplicates of Insight reports are not eligible for a reward.**\n\n__Proof of Concept (PoC) Requirements__\n\nFor this program, runnable PoC code is not required. Whitehats are instead required to write a step-by-step explanation of the PoC and impact.\nFor unclear reports or to resolve disputes Immunefi may still require a runnable PoC.Read more about it in [Audit Competition Proof-of-Concept Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/33260632501777-Audit-Competition-Proof-of-Concept-Rules)",
      "outOfScopeAndRules": "To be determined",
      "assetsBodyV2": "__Asset Accuracy Assurance__\n\n- Bugs found on assets incorrectly listed in-scope will be considered valid and be rewarded.\n\n__Private Known Issues Reward Policy__\n\n- Private known issues, meaning known issues that were not publicly disclosed, are valid for a reward.\n\n__Primacy of Impact vs Primacy of Rules__\n\n- Folks Finance adheres to the Primacy of Rules, which means that the whole Audit Competition program is run strictly under the terms and conditions stated within this page.\n\n__KYC Requirement__\n\n- No KYC is required for the Folks Smart Contract Library Audit Competition\n\n__Eligibility Criteria__\n\n- Security researchers who wish to participate must adhere to the rules of engagement set forth in this program and cannot be:\n   - On OFACs SDN list \n   - Official contributor, both past or present\n   - Employees and/or individuals closely associated with the project \n   - Security auditors that directly or indirectly participated in the audit review\n\n__Responsible Publication__\n\n- Whitehats may publish their bug reports after they have been fixed & paid, or closed as invalid, with the following exceptions:\n   - Bug reports in mediation may not be published until mediation has concluded and the bug report is resolved.\n\n- Immunefi may publish bug reports submitted to this Audit Competition and a leaderboard of the participants and their earnings.\n\n__Feasibility Limitations__\n\n- When there is uncertainty about how feasible an attack is Immunefi will use our feasibility limitation standards to determine the severity of the report.\n\n__Immunefi Standard Badge__\n\n- By adhering to Immunefi’s best practice recommendations, Folks Finance has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209-The-Immunefi-Standard-Badge).",
      "impactsBody": "**Build commands, Test commands, and instructions on how to run them:**\n\nFollow the setup instructions in the project README.\n\n- To generate the TEAL code and ARC56 specs for the contracts, run the command: npm run pre-build\n\n- To build the TS clients to interact with the contracts, run the command: npm run build\n\n- Start an Algorand localnet with AlgoKit and Docker using: algokit localnet start\n\n- Run all tests from root directory using: npm run test\n\n- Or single test file using: PYTHONPATH=\"./contracts\" npx jest <PATH_TO_TEST_FILE>\n\n\n**Where might Security Researchers confuse out-of-scope code to be in-scope?**\n\n- All the smart contracts in “contracts/library/test” are out of scope and only included to facilitate the unit testing. \n\n\n**Where do you suspect there may be bugs and/or what attack vectors are you most concerned about?**\n\n- Ensuring addresses only operate within their assigned privileges. Also checking the logic of the smart contracts is sound. \n\n\n**Which chains and/or networks will the code in scope be deployed to?**\n\n- Algorand\n\n\n**What external dependencies are there?**\n\n- Algorand Python Compiler \n\n**What are the most valuable educational resources already available?**\n\n- Folks Smart Contract Library [Documentation](https://docs.google.com/document/d/1asxwEYzNtG2cTTvuTwBszMmEUKMtkL8s7bBROeD1LlU/edit?usp=sharing.)\n- Details of [Unit testing](https://github.com/Folks-Finance/algorand-smart-contract-library/tree/main/tests) which may help in understanding how the smart contracts are intended to be called and operate. \n- Algorand Python [Language Guide](https://algorandfoundation.github.io/puya/language-guide.html)\n\n\n**Previous Audits**\n\n- Folks Finance Smart Contract Library has no audit report as of 7 July 2025.",
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Not Required",
          "Step-by-step PoC Required"
        ],
        "productType": [],
        "projectType": [],
        "ecosystem": [
          "Algorand"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Python"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Portion of Reward Pool"
          },
          {
            "level": "High",
            "payout": "Portion of Reward Pool"
          },
          {
            "level": "Medium",
            "payout": "Portion of Reward Pool"
          },
          {
            "level": "Low",
            "payout": "Portion of Reward Pool"
          }
        ],
        "web_rewards": []
      },
      "evaluationEndDate": "2025-09-05T10:00:00.000Z",
      "boostedIntroStartingIn": "### **$30,000 USD** in flat rewards available for finding bugs on the Folks Smart Contract Library. \n\n- Rewards are distributed among SRs according to [Immunefi’s Standardized Competition Reward Terms](https://immunefisupport.zendesk.com/hc/en-us/articles/31657285001873-Standardized-Competition-Reward-Terms) and includes **All Star Pool** and **Podium Pool** reserved for [All Star Program](https://immunefi.com/allstars/) participants. \n\n- Rewards are denominated in USD and distributed in USDC on Algorand.\n\n- KYC is not required.\n\nFor more information, please visit [Folks Finance](https://folks.finance/)",
      "boostedIntroLive": "### **$30,000 USD** in flat rewards available for finding bugs on the Folks Smart Contract Library. \n\n- Rewards are distributed among SRs according to [Immunefi’s Standardized Competition Reward Terms](https://immunefisupport.zendesk.com/hc/en-us/articles/31657285001873-Standardized-Competition-Reward-Terms) and includes **All Star Pool** and **Podium Pool** reserved for [All Star Program](https://immunefi.com/allstars/) participants. \n\n- Rewards are denominated in USD and distributed in USDC on Algorand.\n\n- KYC is not required.\n\nAny technical questions can be asked directly to the Folks Finance technical team on [Immunefi's Discord](https://discord.com/invite/immunefi) in the **folks-sc-library-audit-comp** channel.\n\nWhen the Audit Competition has ended, Immunefi will publish an event-specific leaderboard and bug reports from the event.\n\nFor more information, please visit [Folks Finance](https://folks.finance/)",
      "boostedIntroEvaluating": "### **Thank You to All Participating Security Researchers!**\n\nThe audit competition has now concluded and is currently in the evaluation phase. During this period, all submitted reports are being carefully reviewed by the Immunefi triage team and the project team.",
      "boostedIntroFinished": "",
      "rewardsToken": "USDC",
      "rewardsPool": 30000,
      "primaryPool": 21000,
      "allStarsPool": 6000,
      "podiumPool": 3000,
      "sourceLinesOfCode": 440,
      "boostedSummaryReport": null,
      "inviteOnly": false,
      "hideAssetsInScope": null,
      "boostedLeaderboard": [],
      "features": [
        "Boost",
        "Vault",
        "Managed Triage: Signal Booster"
      ],
      "academyStartDate": null,
      "websiteUrl": "https://folks.finance/",
      "description": "Folks Finance is a leading DeFi platform providing innovative tools for lending, borrowing, trading and managing digital assets, all in one place. The Folks Smart Contract Library is a curated, modular collection of audited, reusable smart contracts designed to accelerate development on the Algorand blockchain. The library allows you to focus on your business logic by abstracting away common patterns and security mechanisms.\n\n",
      "githubUrl": null,
      "feasibilityLimitations": null,
      "prohibitedActivites": null,
      "responsiblePublicationCategory": null,
      "knownIssues": [
        {
          "id": 62,
          "description": "Funds used for the minimum balance of a smart contract account are implicitly required and not refunded",
          "link": "https://docs.google.com/document/d/1asxwEYzNtG2cTTvuTwBszMmEUKMtkL8s7bBROeD1LlU/edit?tab=t.0",
          "lastUpdatedAt": "2025-07-01T00:00:00.000Z",
          "relatedImpactInScope": "smart_contract"
        }
      ],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": null,
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": null,
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": null,
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Algorand",
      "eligibilityCriteria": [],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [],
      "programDocumentations": [
        {
          "id": 260,
          "title": "Folks Smart Contract Library",
          "description": "Documentation",
          "url": "https://docs.google.com/document/d/1asxwEYzNtG2cTTvuTwBszMmEUKMtkL8s7bBROeD1LlU/edit?usp=sharing"
        },
        {
          "id": 261,
          "title": "Unit Testing",
          "description": "Unit testing which may help in understanding how the smart contracts are intended to be called and operate.",
          "url": "https://github.com/Folks-Finance/algorand-smart-contract-library/tree/main/tests"
        },
        {
          "id": 263,
          "title": "Algorand Python",
          "description": "Coding language information",
          "url": "https://algorandfoundation.github.io/puya/language-guide.html"
        },
        {
          "id": 265,
          "title": "Technical Walkthrough",
          "description": "Deep dive into the Folks Finance Smart Contract Library, led by Gidon from the Folks Finance team",
          "url": "https://www.youtube.com/watch?v=LsDVSV2W_bU"
        }
      ],
      "primacy": "primacy_of_rules",
      "newProgramRewardsEnabled": false,
      "findingsUrl": null,
      "premiumTriaging": true
    },
    "layoutProps": {
      "headerMarginBottom": "mb-12 lg:mb-16"
    },
    "metaData": {
      "title": "Audit Comp | Folks Smart Contract Library Bug Bounties",
      "description": "Find bugs and vulnerabilities on Audit Comp | Folks Smart Contract Library and get paid up to $30,000.",
      "url": "https://immunefi.com/audit-competition/folks-sc-library/",
      "ogImg": "/api/bounty/og-image/?project=Audit+Comp+%7C+Folks+Smart+Contract+Library&slug=folks-sc-library"
    }
  },
  "__N_SSG": true
}
