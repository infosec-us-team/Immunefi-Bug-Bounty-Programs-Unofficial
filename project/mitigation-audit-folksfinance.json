{
  "pageProps": {
    "isAttackathon": false,
    "academyContent": null,
    "ethereumAttackathonSponsors": null,
    "project": {
      "premiumTriaging": true,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "bounty": {
      "contentfulId": "RXgAq3lU2mTohOMVZtPFU",
      "id": "mitigation-audit-folksfinance",
      "slug": "mitigation-audit-folksfinance",
      "project": "Mitigation Audit | Folks Finance",
      "maxBounty": 25000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1am7TbpqOJP8hBh1WulSGF/23beae2bc95f2c93764fbdb5eaa49ab1/Folks_Finance_logo.png",
      "launchDate": "2024-08-27T11:00:00.000Z",
      "endDate": "2024-09-05T11:00:00.000Z",
      "updatedDate": "2024-10-01T13:33:13.857Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Portion of the $25,000 USD Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Portion of the $25,000 USD Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Portion of the $25,000 USD Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "Portion of the $25,000 USD Reward Pool",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3gKTAQCE5z9fhVmx7VydoF",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/76",
          "description": "refactor: add extra checks to the math library",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "72GLGKm4s7eijXXKCMfQ4U",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/75",
          "description": "fix: check the available liquidity when withdrawing",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "5v5Ku5Bc5LncE9DmCDD0yl",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/74",
          "description": "fix: scale down the repay borrow amount by the liquidation bonus",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "8savxrSKfA25nnv5BmXIr",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/72",
          "description": "fix: stable borrow balance increases",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "JI1DJ6TMpkqhzhNOjWN2w",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/70",
          "description": "fix: reduce the loan type collateral used in by the liquidation fee",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "2Klj5hzO70qAxIIIqQWPkK",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/68",
          "description": "fix: cannot rebalance up to a lower stable rate",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "3jyJJXBtyPCGOKofE0208h",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/66",
          "description": "fix: cannot mix borrows when liquidating",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "11OFOjFpNu7EjtjR11qBum",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/64",
          "description": "fix: don’t use cached chainlink node decimals",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "8WvVipy55MTeXhHUzhThc",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/62",
          "description": "fix: hanlde PythNode exponent which is less than -18",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "25hkfWHfXZ40hcRuthwh5T",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/60",
          "description": "fix: outdated deposit interest rate",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "4UhLdeRdmAWdJ5ZgYADNJf",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/58",
          "description": "fix: check the loan is over-collateralised in the switch borrow type operation",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "7jduzdBWHD5ioG6AGsyQW4",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/56",
          "description": "fix: make retry and reverse message permissioned retry + can override the return message params",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "5FeWX6xWuotSKXbkb7AKaf",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/52",
          "description": "fix: remove unused same oracle node",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "MSJ9e8Z2LIrQjn3m4JHGI",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/50",
          "description": "fix: round in the protocol’s favour  when calculating the average stable rate",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "3rIJxpge3kCrIe00kJFtHb",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/48",
          "description": "fix: handle zero deposits and zero borrows",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "4F4zcTp8Qq08PbeMmL4hOS",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/45",
          "description": "fix: check available liquidity when borrowing",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "2Y6G292x4HD0MthLICLNGW",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/43",
          "description": "fix: delete collaterals and borrows mappings",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "52kULiOIQCluRY22quEdjF",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/40",
          "description": "fix: frontrun protection for the create account and create loan operations",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "6GGH87SvuGvuC7qSdogUTY",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/37",
          "description": "fix: make rebalance up and rebalance down a permissioned operation",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "6U9zOi6AcGdMAKwi6PvRCD",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/35",
          "description": "fix: various small fixes for price deviation (same oracle) node",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "1QD3DlhUfOGYKWqzdnO5a2",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/31",
          "description": "fix: check adapter address match to handle zero adapter id edge case",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "9yBUDKRkaA5qFLB2TUFIP",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/29",
          "description": "fix: cannot add zero address adapter",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "2M8zN2ZGfWIhGd366S7Pw",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/27",
          "description": "fix: cannot delete account",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "786opUrAqHi6nCaqMab7YL",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/25",
          "description": "feat: reduce gas consumption for failed messages",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "2pGCyItFguBVH2mUfmnagT",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/23",
          "description": "fix: handle case where Pyth publish time is newer than block timestamp",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "7pkiTYnfM2rJN6mfqt37ae",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/21",
          "description": "fix: round in the protocol’s favour when withdrawing and repaying with collateral",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "1TlJ54xQH4N9kDtxc7a3R",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/18",
          "description": "fix: consider Wormhole publish message fee",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "4IDISknev4C8nuRJ35nkjN",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/16",
          "description": "fix: don’t increase total deposits by the interest paid when repaying with collateral",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "7D9vDbw1iFF3vYnIV2pvAg",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/13",
          "description": "feat: can override existing invite if one exists",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "3LUDeENOKgNpz7j5PxBYQp",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/11",
          "description": "fix: use CCTP source domain in message keys",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "EfWQ2GAsdTuIAiiUdcUxB",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/9",
          "description": "fix: incorrect implementation of Chainlink TWAP",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "ghUF3n1KeonfNIe8Ei79J",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/5",
          "description": "fix: NodeManager didn’t follow EIP-165",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "4jUktPSHbxhJ4TWpXgebOI",
          "type": "smart_contract",
          "url": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/pull/4",
          "description": "fix: some oracle contracts used floating pragma",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-08-27T11:00:00.000Z"
        },
        {
          "id": "3f2Y03kwXiORssF1jhKvBj",
          "type": "smart_contract",
          "url": "https://immunefi.com/",
          "description": "Primacy of Impact",
          "isPrimacyOfImpact": true,
          "addedAt": "2024-08-27T11:00:00.000Z"
        }
      ],
      "impacts": [
        {
          "id": "AR7RmuzNEspVSzN7z9Joj",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6XAyk7BoMaII3mNPqLvuoh",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1GYHui60efiZzkOLw5Ot4k",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3h6wy927LyX4BU5D1TNHDj",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "51kx0J6F10YDZv0URV2k5i",
          "title": "Theft of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4XcNOUJOE4vi6XrzeoGF1n",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3NErOukErMMMdzLR0px8qf",
          "title": "Permanent freezing of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6k8hCzTZTpQC0SG10wyJtX",
          "title": "Temporary freezing of funds of at least 24h",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "WeZOgPESqpAx1wtyuyYFx",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1HrxZOOtqJfqNmNzA1GYsw",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3sEN6BhOlFugNK7p5QUJTe",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "18kYUFLEFgLuhMHwG34I4j",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "34Bx0Hr7xsTS6lG0Z9Es66",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Folks Finance is a leading DeFi platform providing innovative tools for lending, borrowing, trading and managing digital assets, all in one place.\n\nFolks Finance are expanding with a new cross-chain lending protocol using a hub and spoke model. The hub chain, Avalanche, contains the main logic and state of the lending protocol. The spoke chains, initially EVM, act as an entry point for a user to interact with the protocol.\n\nChainlink CCIP and Wormhole Messaging are used to communicate between the spoke chains and hub chain. Circle CCTP is used for native cross chain transfers of USDC.\n\nFor more information about Folks Finance and their existing products, please visit https://folks.finance. \nFolks Finance provides rewards in USDC, denominated in USD.",
      "prioritizedVulnerabilities": "The primary objectives of a Mitigation Audit include verifying whether the fix fully resolves the reported vulnerability by addressing its root cause. Additionally, SRs must ensure that the fix covers all potential attack vectors, preventing any partial fixes that leave other exploitation avenues open.\n\nAny vulnerabilities that are discovered in other sections of the code that were introduced by the mitigation of another bug i.e. fix introduces a new vulnerability in another part of the system, should be reported under that fix.\n\nBugs unrelated to any fixes found on any of these contracts https://github.com/Folks-Finance/folks-finance-xchain-contracts/tree/1eb10075d5ce2208cdf6e4560c2968eafa414327/contracts should be reported under the Primacy of Impact.",
      "rewardsBody": "The following reward terms are a summary, for the full details read our [Folks Finance Mitigation Audit Reward Terms](https://immunefisupport.zendesk.com/hc/en-us/articles/27853859981969-Mitigation-Audit-Folks-Finance-Reward-Terms)\n\nThe purpose of a Mitigation Audit is for whitehats to assess whether the set of fixes from the original [Folks Finance Boost](https://immunefi.com/boost/folksfinance-boost/information/) both fully resolve the reported vulnerabilities and do not introduce new ones. Hunting on a Mitigation Audit involves understanding the root cause of the issues and verifying that the patches or mitigations directly address the causes.\n\nThis is crucial to ensure that the vulnerabilities are fully fixed and do not leave other avenues open for exploitation.\n\nThe rewards pool is partly distributed with the following formula, and partly at Immunefi’s discretion. The main purpose of a Mitigation Audit is to reward vulnerabilities, exploiting the fixes of the original Boost. \n\nThe portion of the reward pool is to reward high-quality whitehat contributions, such as valuable but technically invalid bug reports which are called Insights. More information about Insight reports can be found in this Help Center article.\n\nThe reward pool size for Mitigation Audit | Folks Finance is $25,000 USD. If no bugs or only Insights are found, the reward pool will be - 10% of the largest reward pool ($2,500 USD). \n\nFor this Audit, duplicates are valid for a reward.",
      "outOfScopeAndRules": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "assetsBodyV2": "__Asset Accuracy Assurance__\n\nBugs found on assets incorrectly listed in-scope will be considered valid and be rewarded.\n\n__Primacy of Impact vs Primacy of Rules__\n\nFolks Finance adheres to the Primacy of Impact for all Impacts stated within this page.\n\nThe primary objectives of a Mitigation Audit include verifying whether the fix fully resolves the reported vulnerability by addressing its root cause. Additionally, SRs must ensure that the fix covers all potential attack vectors, preventing any partial fixes that leave other exploitation avenues open. Any vulnerabilities that are discovered in other sections of the code that were introduced by the mitigation of another bug i.e. fix introduces a new vulnerability in another part of the system, should be reported under that fix.\n\nBugs unrelated to any fixes found on any of these `contracts https://github.com/Folks-Finance/folks-finance-xchain-contracts/tree/1eb10075d5ce2208cdf6e4560c2968eafa414327/contracts` should be reported under the Primacy of Impact.\n\n\n__Eligibility Criteria__\n\nSecurity researchers who wish to participate must adhere to the rules of engagement set forth in this program and cannot be:\n- On OFACs SDN list \n- Official contributor, both past or present\n- Employees and/or individuals closely associated with the project \n- Security auditors that directly or indirectly participated in the audit review\n\n__Responsible Publication__\n\nWhitehats may publish their bug reports after they have been fixed & paid, or closed as invalid, with the following exceptions:\n- Bug reports in mediation may not be published until mediation has concluded and the bug report is resolved.\n\nImmunefi may publish bug reports submitted to this boosted bug bounty and a leaderboard of the participants and their earnings.\n\n__Feasibility Limitations__\n\nThe project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of [feasibility limitation standards](https://immunefisupport.zendesk.com/hc/en-us/articles/16913132495377-Feasibility-Limitation-Standards) which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n\n__Immunefi Standard Badge__\n\nBy adhering to Immunefi’s best practice recommendations, Folks Finance has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209-The-Immunefi-Standard-Badge).",
      "impactsBody": "__Proof of Concept (PoC) Requirements__\n\nA PoC, demonstrating the bug's impact, is required for this program and has to comply with the Immunefi PoC Guidelines and Rules.\n\n__Whitehat Educational Resources & Technical Info__\n\n1. Design Overview for Cross-chain Lending Protocol: [Link to Google Docs](https://docs.google.com/document/d/19HjdYSmSxoXf7b0RIjiv8cff7jwdGZ1lkFrjqRrogiE/edit?usp=sharing)\n\n2. Operation lifecycle in cross-chain lending protocol: [Link to Google Docs](https://docs.google.com/document/d/1UEV2JHpW23ChARUp_AcHJjuuq6A9T-n85T3FDYQTuGM/edit?usp=sharing)\n\n3. Formulae Used in Cross-chain Lending Protocol: [Link to Google Docs](https://docs.google.com/document/d/1UU-zhy-Ik6h-EhKS2TvcIsd0Q377H7HKF6MGP5WdwAk/edit?usp=sharing)\n\n4. Testnet for Cross-chain Lending Protocol:\n   [Link to Testnet](https://testnet.xapp.folks.finance/)\n\n5. Smart Contract README for Cross-chain Lending Protocol:\n   [Link to GitHub README](https://github.com/Folks-Finance/folks-finance-xchain-contracts/blob/main/README.md)\n\n6. Docs for Existing Folks Finance Products:\n   [Link to Folks Finance Docs](https://docs.folks.finance/)\n\n7. Medium Articles:\n   [Link to Medium Articles](https://folksfinance.medium.com/)\n\n__Is this an upgrade of an existing system? If so, which? And what are the main differences?__\n\nThis is a new cross chain lending protocol that follows a similar model to our existing Algorand lending protocol. The loans and economic structure are the same with the only difference being how liquidations work. All the cross chain infrastructure is new. \n\nThe cross chain lending protocol also uses an oracle design from Synthetix which takes up less than 5% of the total codebase. The codebase language is fully Solidity. \n\n\n__Where do you suspect there may be bugs? Useful aspects of this question are:__\n\nWhich parts of the code are you most concerned about?\nWhat attack vectors are you most concerned about?\nWhich part(s) of the system do you want whitehats to attempt to break the most?\nAre there any assumed invariants that you want whitehats to attempt to break?\n\nIn general all parts of the code should be checked and attack vectors explored. We write here some areas to look at in particular but this is not to discount any other areas.\n\nOne area to explore is the communication between chains. Messages are relayed between the spoke chain and the hub chain via Chainlink CCIP and Wormhole Messaging. In addition, Circle CCTP is used for USDC transfers. It is important to verify that we are using these protocols as intended and have correctly reasoned about the lifecycle of a message. \n\nWe have a contract named “HubAdapter” which mimics the behaviour of the Chainlink CCIP and Wormhole messaging, without actually relaying anything. Its purpose is to have a common interface for interacting with the protocol through the spoke contracts regardless of whether on the hub chain or not.\n\nWe also have a new process for liquidations which should be checked both economically and codewise. The oracle integration is also new and should be checked for resistance against tampering.\n\nOne invariant to ensure that there is sufficient funds such that if all borrowers repaid their loans, all depositors can withdraw their tokens. Not an invariant, but the average stable interest rate should be closely tracking the weighted average of all the stable borrows for a given pool.\n\n__What ERC20 / ERC721 / ERC777 / ERC1155 token standards are supported? Which are not?__\n\nERC20 and ERC777 are the only two supported. The modular design allows ERC1155 to be supported in the future too if needed.\n\n__What emergency actions may you want to use as a reason to invalidate or downgrade an otherwise valid bug report?__\n\nWe have rate limiting which sets the maximum amount which can be withdrawn or deposited. If the limit is consumed through a denial of service attack, we have the ability to temporarily boost the capacity.\n\nOther mitigating actions we can take involve removing/adding an adapter, lowering rate limits, lowering pool caps and deprecating a pool. If the bug report’s impact is small in the scope of the protocol as a whole, considering the possible mitigations, then that could be reason to invalidate or downgrade the severity.\n\n\n__What addresses would you consider any bug report requiring their involvement to be out of scope, as long as they operate within the privileges attributed to them?__\n\nE.g An ‘Operator’ address with the ability to pause smart contracts who could use their privileged functions to exploit a bug and steal funds\n\nAll admin and role addresses, as well as 3rd party infrastructure the project relies on. \n\n\n__What external dependencies are there?__\n\n- Chainlink Price Feeds\n- Pyth Price Feeds\n- Folks Finance Centralised Fallback Oracle\n- Wormhole’s Messaging\n- Chainlink’s CCIP\n- Circle’s CCTP\n\n__WWhat are some of the most significant changes to the protocol from the fixes made?__\n\nMost of the fixes were errors in the logic that don’t change the protocol intention. These should be checked to ensure they correctly fix the underlying issue. \n\nSome more significant changes were:\n- The retry and reverse message operations are permissioned so only the relevant user can call these. In addition, you can now override the return message parameters if need be.\n- The account id and loan id are generated on-chain for front-running protection. \n- We no longer save the entire failed message but rather a hash of the failed message, significantly reducing gas consumption.\n- In the account management, you can override an existing invite and no longer unregister all connected addresses.  \n\n\n\n__Where might whitehats confuse out-of-scope code to be in-scope?__\n\nThe external services such as the WormholeRelayer, Chainlink CCIP RouterClient and external oracle services. \n\nAre there any unusual points about your protocol that may confuse whitehats?\n\nWe have our own standard of sending and receiving messages. Certain operations require finality as they involve a value transfer while the others can be immediately relayed. There is the “HubAdapter” too which is mentioned above.\n\nWe split tokens into two categories in our lending protocol. The first are tokens which are not bridged and remain on the spoke chain e.g. ETH, Link. The second are tokens which are bridged and reside on the hub chain e.g. USDC.\n\nOur lending protocol also is different from others in that a user can have multiple loans, and that a loan can have multiple collaterals and borrows within it. We also define various loan types which have their own respective parameters. One of these is the “deposit” loan type which has borrow caps of zero for every token.\n\n\n__What is the test suite setup information?__\n\nIf this is already provided in Github, then linking that resource is enough.\n\nIt will be in the GitHub report with the rest of the code. \n\n__Public Disclosure of Known Issues__\n\nBug reports covering previously-discovered bugs (listed below) are not eligible for a reward within this program. This includes known issues that the project is aware of but has consciously decided not to “fix”, necessary code changes, or any implemented operational mitigating procedures that can lessen potential risk. \n\n- Griefing through consuming external rate limits of tokens e.g. Circle CCTP rate limits for USDC\n- Griefing through consuming internal rate limits where we have the ability to respond by temporarily boosting capacity\n- Dust positions not being liquidated because of gas fees\n- Manipulation of stable borrow rate to get cheaper borrow\n- Liquidation leading to bad debt when we are prioritising the certainty of a lesser amount of bad debt against the risk of incurring a larger amount of bad debt\n- LiquidationLogic::getMaxRepayBorrowValue can panic if privileged address sets certain parameters \n\n__Previous Audits__\n\n- Folks Finance’s completed audit reports can be found at https://github.com/Folks-Finance/audits/blob/13f8d8307902e8ff7018fe9b6df0b5668c638863/OtterSec%20-%20Audit%20of%20XChain%20Lending%20-%20May%202024.pdf. Any unfixed vulnerabilities mentioned in these reports are not eligible for a reward.\n\n- Folks Finance’s up to date codebase can be found at https://github.com/Folks-Finance/folks-finance-xchain-contracts. \n\n- Folks Finance’s link to full list of changes: https://github.com/Folks-Finance/folks-finance-xchain-contracts/pulls?q=is%3Apr+is%3Aclosed \n\n- Folks Finance’s link to full list of issues:\nhttps://github.com/Folks-Finance/folks-finance-xchain-contracts/issues?q=is%3Aissue+is%3Aclosed",
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Required",
          "Primacy of Impact"
        ],
        "productType": [],
        "projectType": [],
        "ecosystem": [],
        "programType": [
          "Smart Contract"
        ],
        "language": [],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Portion of the $25,000 USD Reward Pool"
          },
          {
            "level": "High",
            "payout": "Portion of the $25,000 USD Reward Pool"
          },
          {
            "level": "Medium",
            "payout": "Portion of the $25,000 USD Reward Pool"
          },
          {
            "level": "Low",
            "payout": "Portion of the $25,000 USD Reward Pool"
          }
        ],
        "web_rewards": []
      },
      "evaluationEndDate": "2024-09-18T08:00:00.000Z",
      "boostedIntroStartingIn": "$25,000 USD in rewards are available to assess whether the set of fixes from the original Folks Finance Boost both fully resolve the reported vulnerabilities and do not introduce new ones.\n\nHunting on a Mitigation Audit involves understanding the root cause of the issues and verifying that the patches or mitigations directly address the causes. This is crucial to ensure that the vulnerabilities are fully fixed and do not leave other avenues open for exploitation.\n\nFolks Finance is a leading DeFi platform providing innovative tools for lending, borrowing, trading and managing digital assets, all in one place.\n\nFolks Finance are expanding with a new cross-chain lending protocol using a hub and spoke model. The hub chain, Avalanche, contains the main logic and state of the lending protocol. The spoke chains, initially EVM, act as an entry point for a user to interact with the protocol.\n\nNo KYC is required.",
      "boostedIntroLive": "",
      "boostedIntroEvaluating": "",
      "boostedIntroFinished": "Boost cards for security researchers with paid reports are available [here](https://drive.google.com/drive/folders/1VGhOjtKqQbWdhcFd6PuY5AS-VSghecpG).\n\nAll paid bug reports are available in original format [here](https://github.com/immunefi-team/Bounty_Boosts/tree/main/Mitigation%20Audit%20%7C%20Folks%20Finance).",
      "rewardsToken": "USDC",
      "rewardsPool": 25000,
      "sourceLinesOfCode": 500,
      "boostedSummaryReport": "https://drive.google.com/file/d/1tbmiKRimI_BPPy-BIhHf7e9HVD2-JOlk/view?usp=sharing",
      "inviteOnly": false,
      "hideAssetsInScope": null,
      "boostedLeaderboard": [
        {
          "high": 0,
          "name": "A2Security",
          "critical": 1,
          "earnings": 22500,
          "insights": 0,
          "mediumLow": 0,
          "totalValidBugs": 1
        },
        {
          "high": 0,
          "name": "zarkk",
          "critical": 0,
          "earnings": 1563,
          "insights": 1,
          "mediumLow": 0,
          "totalValidBugs": 0
        },
        {
          "high": 0,
          "name": "Paludo0x",
          "critical": 0,
          "earnings": 938,
          "insights": 1,
          "mediumLow": 0,
          "totalValidBugs": 0
        }
      ],
      "features": [
        "Boost",
        "Managed Triage: Time Saver"
      ],
      "academyStartDate": null,
      "websiteUrl": "https://folks.finance/it",
      "description": "Folks Finance is a leading DeFi platform providing innovative tools for lending, borrowing, trading and managing digital assets, all in one place.\n\n\n",
      "githubUrl": "https://github.com/Folks-Finance/folks-finance-xchain-contracts/issues?q=is%3Aissue+is%3Aclosed",
      "feasibilityLimitations": null,
      "prohibitedActivites": null,
      "responsiblePublicationCategory": null,
      "knownIssues": [],
      "knownIssueAssurance": false,
      "outOfScopeBlockchain": null,
      "outOfScopeGeneral": null,
      "outOfScopeSmartContract": null,
      "outOfScopeWebAndApplications": null,
      "defaultOutOfScopeBlockchain": null,
      "defaultOutOfScopeSmartContract": null,
      "defaultOutOfScopeGeneral": null,
      "defaultOutOfScopeWebAndApplications": null,
      "defaultProhibitedActivities": null,
      "defaultFeasibilityLimitations": null,
      "customOutOfScopeInformation": null,
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum",
      "eligibilityCriteria": [],
      "eligibilityCriteriaAdditionalInformation": null,
      "premiumTriaging": true
    },
    "layoutProps": {
      "headerMarginBottom": "mb-12 lg:mb-16"
    },
    "metaData": {
      "title": "Mitigation Audit | Folks Finance Bug Bounties",
      "description": "Find bugs and vulnerabilities on Mitigation Audit | Folks Finance and get paid up to $25,000.",
      "url": "https://immunefi.com/boost/mitigation-audit-folksfinance",
      "ogImg": "/api/bounty/og-image?project=Mitigation+Audit+%7C+Folks+Finance"
    }
  },
  "__N_SSG": true
}
