{
  "pageProps": {
    "bounty": {
      "contentfulId": "uXpcEHhcTSiyub3rp9QZn",
      "id": "kinesis-bridge-on-kadena",
      "slug": "kinesis-bridge-on-kadena",
      "project": "Kinesis Bridge on Kadena",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3JbCmvAmy6mloa0cxuVBgw/f7f0dd0875dd7a275bf9393d73d3f6d1/Screenshot_2025-01-23_at_10.19.49.png",
      "launchDate": "2025-05-12T10:00:00.000Z",
      "endDate": null,
      "updatedDate": "2025-10-16T06:13:08.100Z",
      "kyc": true,
      "rewards": [
        {
          "id": 28574,
          "assetType": "smart_contract",
          "severity": "critical",
          "rewardModel": "range",
          "maxReward": 50000,
          "minReward": 25000,
          "rewardCalculationPercentage": 10
        },
        {
          "id": 28575,
          "assetType": "smart_contract",
          "severity": "high",
          "rewardModel": "range",
          "maxReward": 25000,
          "minReward": 10000
        },
        {
          "id": 28576,
          "assetType": "smart_contract",
          "severity": "medium",
          "rewardModel": "fixed",
          "fixedReward": 5000
        },
        {
          "id": 28577,
          "assetType": "smart_contract",
          "severity": "low",
          "rewardModel": "fixed",
          "fixedReward": 1000
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4S9kOd0dTHTC7ia5ZUECla",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/hyp-erc20-collateral/hyp-erc20-collateral.pact",
          "description": "ERC20 Token Contract",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "2eliFyUqGvNCpDDyui6tV2",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/hyp-erc20/hyp-erc20.pact",
          "description": "ERC20 Token Contract",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "fEG15vzrYgyEMgtAxJhrm",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/igp/igp.pact",
          "description": "Interchain Gas Paymaster",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "6jLprse7MzcayDPkjouNjH",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/ism/ism.pacthttps://github.com/Kadena-ISS/smart-contracts/blob/master/pact/ism/ism.pact",
          "description": "Security Module",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "7y6QoZJxMeC2DI6LzDIQPU",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/ism/merkle-tree-ism.pact",
          "description": "Security Module",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "AyMgFckHcrKQRddYumsOy",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/mailbox/mailbox.pact",
          "description": "Mailbox",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "3LMY0TCtpcU21HxnVM6wce",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/mailbox/empty-mailbox.pact",
          "description": "Mailbox",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "2PcNYirJN21t8MVcZHfHGN",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/merkle/merkle-tree-hook.pact",
          "description": "Utility",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "3CSkzXURxZMBgMGQRjmX8J",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/merkle/merkle.pact",
          "description": "Utility",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "3JU1xrSGyqNkXTNhgH5uvh",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/validator-announce/validator-announce.pact",
          "description": "Validator Announcement",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "1sJN6Z5xDaYA2AWvV2R8Op",
          "type": "smart_contract",
          "url": "https://github.com/Kadena-ISS/smart-contracts/blob/master/pact/gas-oracle/gas-oracle.pact",
          "description": "Gas Oracle",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-05-12T10:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "3LSqu1DHoTqs1fSVw9zeEx",
          "type": "smart_contract",
          "url": "https://kadscan.io/",
          "description": "Kadscan.io",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-10-16T06:13:03.573Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        }
      ],
      "impacts": [
        {
          "id": 30,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Block stuffing"
        },
        {
          "id": 27,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of funds"
        },
        {
          "id": 23,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed yield"
        },
        {
          "id": 29,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Smart contract unable to operate due to lack of token funds"
        },
        {
          "id": 31,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)"
        },
        {
          "id": 32,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Theft of gas"
        },
        {
          "id": 33,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Unbounded gas consumption"
        },
        {
          "id": 34,
          "type": "smart_contract",
          "severity": "low",
          "title": "Contract fails to deliver promised returns, but doesn't lose value"
        },
        {
          "id": 5316,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Network not being able to confirm new transactions (total network shutdown)"
        },
        {
          "id": 28,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of NFTs"
        },
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 26,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed royalties"
        },
        {
          "id": 5317,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Unintended permanent chain split requiring hard fork (network partition requiring hard fork)"
        },
        {
          "id": 5318,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds (fix requires hardfork)"
        }
      ],
      "programOverview": "This bug bounty program focuses on the Kinesis Bridge, a cross-chain bridge that leverages the Hyperlane protocol. The program primarily covers the bridge's smart contract implementation, cross-chain messaging and validation system, and verification mechanisms for secure asset transfers and bridging operations between supported networks. Use of the Kinesis Bridge is at each such user’s own risk, without recourse or liability to any of IdeaSoft, Kadena or any of their respective employees, officers, directors, agents or representatives. For a complete set of the Kinesis Bridge terms, please visit [https://www.kadena.io/](https://www.kadena.io/).\n\nKinesis Bridge is owned and operated by IdeaSoft for the Kadena ecosystem. Kadena is a fast, secure, and scalable Layer 1 blockchain using the Chainweb consensus protocol—a braided, parallelized Proof of Work consensus mechanism that improves throughput and scalability while maintaining the security and integrity found in Bitcoin. For more information about Kadena, please visit [https://www.kadena.io/](https://www.kadena.io/).\n\nKadena, LLC, a Connecticut limited liability company (“Kadena”), has issued this Bug Bounty Program (“Bug Bounty Program”) as of January 2025. The submission by any person or entity of any bug report in response to any bug bounty published by Kadena (each person or entity making such submission, a “Security Researcher”) shall be deemed an acceptance of the terms and conditions of this Bug Bounty Program (the “Kadena BBP Terms” or these “Terms”), including those terms included at the bottom of the page, and the Kadena BBP Terms shall govern, solely and exclusively, the terms and conditions of any agreement, engagement, transaction or other form of relationship between Kadena and any Security Researcher. Kadena may modify these Terms from time to time in its sole discretion.\n\n__Bug Reports and Research Fees__\n\nKadena shall determine, in its sole and absolute discretion, (i) whether any Bug Report submitted is sufficiently responsive to warrant approval or acceptance and trigger any obligation to pay a Research Fee to any Security Researcher, (ii) the security level and Research Fee payable for any Bug Report and (iii) timing and order of submission for competing valid Bug Reports.\n\n__KYC Requirement__\n\n- KYC information will be requested in order to pay for successful bug submissions. The following information will be required:\n- Government-issued photo ID (passport, national ID card, or driver's license)\n- Recent proof of address (either a redacted bank statement with your address or a recent utility bill with your name, address, and issuer of the bill)\n- Wallet address(es) for payment in KDA\n- W-8BEN or W-9 tax form as applicable based on residency\n\n__Eligibility Criteria__\n\nSecurity researchers who wish to participate must adhere to the rules of engagement set forth in this program and cannot be:\n\n- On OFACs SDN list \n- A citizen or resident of any Prohibited Jurisdiction (as hereinafter defined).  The term “Prohibited Jurisdiction” shall mean the State of New York, the People’s Republic of China, the Republic of Korea (South Korea), the Socialist Republic of Vietnam and any other jurisdiction where the offer, sale or delivery of KDA would be illegal or violate applicable laws or would require Kadena or any of its affiliates to obtain a license, permit, approval, registration, or other qualification that such member does not then possess.\n- Official contributor, as determined by Kadena in its sole discretion, both past or present\n-  Employees, consultants and/or individuals associated with the project\n- Security auditors that directly or indirectly participated in the audit review\n\n\n__Responsible Publication__\n\nKadena adheres to **category 3 - Approval Required**. This Policy determines what information researchers are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication](https://immunefi.com/responsible-publication/) page.\n\n__Primacy of Rules__\n\nKadena adheres to the Primacy of Rules.\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC, demonstrating the bug's impact, is required for this program and has to comply with the [Immunefi PoC Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules).\n\n__Feasibility Limitations__\n\nThe project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of [feasibility limitation standards](https://immunefisupport.zendesk.com/hc/en-us/articles/16913132495377-Feasibility-Limitation-Standards) which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n\n__Immunefi Standard Badge__\n\nBy adhering to Immunefi’s best practice recommendations, Kadena has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209).",
      "prioritizedVulnerabilities": "Vulnerabilities are prioritised according to impact and/or severity.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the Immunefi Vulnerability Severity Classification System V2.3. \nReward Calculation for Critical Level Reports\n\nFor critical smart contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD $50,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD $25,000 is to be rewarded in order to incentivize security researchers against withholding a critical bug report.\n\n__Repeatable Attack Limitations__\n\nIf the smart contract where the vulnerability exists can be upgraded or paused, only the initial attack will be considered for a reward. This is because the project can mitigate the risk of further exploitation by upgrading or pausing the component where the vulnerability exists. The reward amount will depend on the severity of the impact and the funds at risk. \n\nFor critical repeatable attacks on smart contracts that cannot be upgraded or paused, the project will consider the cumulative impact of the repeatable attacks for a reward. This is because the project cannot prevent the attacker from repeatedly exploiting the vulnerability until all funds are drained and/or other irreversible damage is done. Therefore, this warrants a reward equivalent to 10% of funds at risk, capped at the maximum critical reward. \n\n__Reward Calculation for High Level Reports__\n\nHigh vulnerabilities concerning theft/permanent freezing of unclaimed yield/royalties are rewarded within a range of $10,000 to $25,000 depending on the funds at risk, capped at the maximum high reward.  \n\nIn the event of temporary freezing, the reward doubles from the full frozen value for every additional 24h that the funds are temporarily frozen, up until a max cap of the high reward. This is because as the duration of the freezing lengthens, the potential for greater damage and subsequent reputational harm intensifies. Thus, by increasing the reward proportionally with the frozen duration, the project ensures stronger incentives for bug disclosure of this nature.\n\n__Reward Payment Terms__\n\nKadena will be issuing the payment of the bounties on behalf of the Ideasoft team, who owns and operates the Kinesis bridge\n\nThe calculation of the net amount rewarded is based on the average price between CoinMarketCap.com and CoinGecko.com at the time the bug report was submitted. No adjustments are made based on liquidity availability.\n\nKadena provides rewards in either the native tokens known as “Kadena” and that carry the trading symbol KDA (“KDA”), USDC, USDT or a combination thereof, as determined by Kadena in its discretion, for valid, approved and accepted Bug Reports for various projects within the Kadena public blockchain ecosystem (the “Ecosystem”). Payment of any Research Fee will be made, and any KDA, USDC or USDT delivered, within thirty (30) days of Kadena’s approval or acceptance of a Bug Report to a wallet that supports KDA, USDC or USDT and which corresponds to the public key that such Security Researcher provides to Kadena in writing. If the payment of an applicable Research Fee is satisfied in whole or in part by delivery of KDA, the USD equivalency of each KDA so delivered shall be equal to the closing price of KDA (denominated in KDA and as reported by CoinMarketCap) on the date on which the Security Researcher submits a Bug Report which is ultimately approved or accepted by Kadena. Each Security Researcher bears all market risk related to the volatility of KDA between the date of the Kadena’s receipt of such Security Researcher’s Bug Report and the actual date of delivery of KDA.  For more details about the payment process, please view the Rewards by Threat Level section further below.",
      "outOfScopeAndRules": null,
      "assetsBodyV2": null,
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Required",
          "PoC Required",
          "PoC Not Required"
        ],
        "productType": [
          "L1",
          "Bridge"
        ],
        "projectType": [
          "Infrastructure"
        ],
        "ecosystem": [
          "Kadena"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Go",
          "Rust"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [],
        "web_rewards": []
      },
      "websiteUrl": null,
      "description": "This bug bounty program focuses on the Kinesis Bridge, a cross-chain bridge that leverages the Hyperlane protocol. The program primarily covers the bridge's smart contract implementation, cross-chain messaging and validation system, and verification mechanisms for secure asset transfers and bridging operations between supported networks. ",
      "githubUrl": null,
      "feasibilityLimitations": null,
      "prohibitedActivites": null,
      "responsiblePublicationCategory": "category_3",
      "knownIssues": [],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": "- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n  - This does not exclude reflected HTML injection with or without JavaScript\n  - This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass)\n- SPF/DMARC misconfigured records)\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering",
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": "By submitting a Bug Report, as of the date of each such submission, each such Security Researcher hereby represents, warrants and confirms the following:\n1. Security Researcher has the legal right and authority to submit the Bug Report hereunder, and such submission does not, and will not, breach any agreement which Security Researcher is bound by or party to. The Bug Report is the original work of Security Researcher. Neither the Bug Report nor any element thereof will infringe upon or misappropriate any copyright, patent, trademark, trade secret, right of publicity or privacy, or any other proprietary right of any person, whether contractual, statutory or common law.\n2.  Security Researcher (a) is knowledgeable about, has carefully considered the risks of and performed his, her or their own diligence, analysis and investigation, including consulting with Security Researcher’s legal, tax, financial and other professional advisors, on the technology and other risks associated with the Ecosystem, KDA, and Kadena, and (b) has obtained sufficient information about Kadena and KDA to reach an informed and knowledgeable decision in deciding to accept KDA as payment hereunder.  Security Researcher is not relying upon any representation, warranty or agreement of Kadena, nor any of its subsidiaries or affiliates nor any other person. Security Researcher is able to bear all risk related to receiving KDA compensation, including fluctuations in the price of, and liquidity for, KDA. Security Researcher agrees to fully and strictly comply with all federal, state, local and foreign laws, rules and regulations applicable to the KDA received by Security Researcher hereunder, including any applicable securities laws governing any transfer of KDA or Security Researcher’s eligibility to receive KDA.\n \n__Miscellaneous Terms__\n\nAny KDA is provided on an \"as is\" basis, without warranties of any kind, either express or implied, including as to fitness for a particular purpose, value, or right or ability to use, trade, exchange or dispose of except in compliance with all applicable laws. Security Researcher’s relationship with Kadena is that of an independent contractor, and neither this Bug Bounty Program nor anything in these Kadena BBP Terms is intended to create, or should be construed as creating, any partnership, agency, joint venture or employment relationship between Kadena and any Security Researcher or any of Security Researcher’s employees, representatives or agents.  Security Researcher is solely responsible for, and will file, on a timely basis, all tax returns and payments required to be filed with, or made to, any federal, state or local tax authority with respect to the receipt of any Research Fee(s) under this Bug Bounty Program. No waiver shall be effective unless it is in writing and signed by an authorized representative of Kadena. Any waiver by Kadena of any provision of these Terms shall not be construed as a waiver of any other provision, nor shall such waiver be deemed to be a continuing waiver unless otherwise expressly stated in writing. These Terms are entered into solely between, and may be enforced only by, such Security Researcher and Kadena, and will not be deemed to create any rights in third parties, or to create any obligations of a party to any such third parties. The headings contained in these Terms are included for purposes of convenience only, and do not affect the meaning or interpretation of these Terms. Unless otherwise expressly specified in these Terms: (i) the word “or” is not exclusive and is deemed to have the meaning “and/or”; (ii) words using the singular or plural number shall also include the plural or singular number, respectively; and (iii) all references to “dollars” or “$” will be deemed references to the lawful money of the United States of America.",
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": null,
      "rewardsToken": null,
      "eligibilityCriteria": [
        "no_ofac_sdn",
        "no_official_contributor",
        "no_employee",
        "no_auditor"
      ],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [
        {
          "id": 334,
          "title": "Kinesis Bridge Codebase",
          "description": "Kinesis Bridge Codebase",
          "url": "https://github.com/Kadena-ISS"
        }
      ],
      "programDocumentations": [],
      "primacy": "primacy_of_rules",
      "newProgramRewardsEnabled": true,
      "findingsUrl": null,
      "premiumTriaging": false
    },
    "project": {
      "features": [],
      "premiumTriaging": false,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "Kinesis Bridge on Kadena Bug Bounties",
      "description": "Find bugs and vulnerabilities on Kinesis Bridge on Kadena and get paid up to $50,000.",
      "url": "https://immunefi.com/bug-bounty/kinesis-bridge-on-kadena/",
      "ogImg": "/api/bounty/og-image/?project=Kinesis+Bridge+on+Kadena&slug=kinesis-bridge-on-kadena"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
