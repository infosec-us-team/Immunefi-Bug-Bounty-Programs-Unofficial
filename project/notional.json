{
  "pageProps": {
    "bounty": {
      "contentfulId": "3wulPtcZiUgKI3fLjIp4q",
      "id": "notional",
      "slug": "notional",
      "project": "Notional",
      "maxBounty": 250000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4IWAL9hnVKo7ToHawJYKZ1/2b7d9aab624d0fe6646f17bb6171c9fe/Notional_Logo.jpeg",
      "launchDate": "2021-11-05T08:00:00.000Z",
      "endDate": null,
      "updatedDate": "2024-10-26T22:16:42.842Z",
      "kyc": true,
      "rewards": [
        {
          "id": 5220,
          "assetType": "smart_contract",
          "severity": "high",
          "rewardModel": "fixed",
          "fixedReward": 50000
        },
        {
          "id": 5221,
          "assetType": "smart_contract",
          "severity": "medium",
          "rewardModel": "fixed",
          "fixedReward": 5000
        },
        {
          "id": 5222,
          "assetType": "smart_contract",
          "severity": "low",
          "rewardModel": "fixed",
          "fixedReward": 1000
        },
        {
          "id": 8206,
          "assetType": "smart_contract",
          "severity": "critical",
          "rewardModel": "up_to",
          "maxReward": 250000
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4mlFNkf7YpJJEbrCqdPWbP",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1344A36A1B56144C3Bc62E7757377D288fDE0369",
          "description": "Mainnet Proxy",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2022-02-13T08:18:38.233Z"
        },
        {
          "id": "2LRka024hvX8aJbPRptwtZ",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x1344a36a1b56144c3bc62e7757377d288fde0369",
          "description": "Arbitrum Proxy",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2022-02-13T08:18:40.495Z"
        },
        {
          "id": "4s0PRp5W2pDWyfViyEwF3j",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xCFEAead4947f0705A14ec42aC3D44129E1Ef3eD5",
          "description": "NOTE ERC20 Proxy",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2022-02-13T08:18:43.154Z"
        }
      ],
      "impacts": [
        {
          "id": 34,
          "type": "smart_contract",
          "severity": "low",
          "title": "Contract fails to deliver promised returns, but doesn't lose value"
        },
        {
          "id": 1264,
          "type": "smart_contract",
          "severity": "low",
          "title": "Theft of gas"
        },
        {
          "id": 1265,
          "type": "smart_contract",
          "severity": "low",
          "title": "Unbounded gas consumption"
        },
        {
          "id": 23,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed yield"
        },
        {
          "id": 25,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed yield"
        },
        {
          "id": 29,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Smart contract unable to operate due to lack of token funds"
        },
        {
          "id": 1266,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Block stuffing for profit"
        },
        {
          "id": 31,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)"
        },
        {
          "id": 1267,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Temporary freezing of fund"
        },
        {
          "id": 1268,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Miner-extractable value (MEV)"
        },
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 17,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds"
        },
        {
          "id": 1269,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Any smart contract code resulting directly in protocol Insolvency"
        }
      ],
      "programOverview": "Notional is a protocol on Ethereum that facilitates fixed-rate, fixed-term crypto asset lending and borrowing through a novel financial instrument called fCash.\n\nfCash is a tokenized representation of a fCash flow. It represents the amount of tokens (i.e. Dai) that an account is either entitled to receive or obligated to pay at its designated maturity. For example, if an account holds +100 fCash tokens for a maturity on January 1, 2021, it is entitled to 100 Dai at any time greater than or equal to January 1, 2021. Similarly, -100 fCash tokens for the same maturity means that the account is obligated to pay 100 Dai at maturity.\n\nFor more information about Notional, please visit [https://notional.finance/](https://notional.finance/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing the following impacts:\n\n  - Loss of funds \n  - Voting manipulation\n  - Any function that is outside the intended behavior of the smart contracts\n  - Redirection of funds\n  - Injection of text",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.3](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nMedium and low smart contract bug reports must come with a PoC in order to be considered for a reward. \n\nCritical smart contract vulnerabilities are paid at 10% of economic damage, primarily based on funds at risk. The team may, at its discretion, take into consideration other aspects such as PR and branding effects. However, there is a minimum reward of __USD 50 000__.\n\n__KYC__\n\nNotional rewards both foreigners and USA nationals:\n  - Foreigners must complete the W-8BEN, which is IRS mandated \n  - USA nationals must complete the W9\n\nPayouts are handled by the __Notional__ team directly and are denominated in USD. However, payouts are done in __USDC__, __DAI__, __ETH__, __USDT__, or the project token, at the discretion of the team.",
      "outOfScopeAndRules": ".",
      "assetsBodyV2": "All smart contracts of Notional can be found at https://github.com/notional-finance/contracts-v2/. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. Any implementation contracts called by Upgradeable Proxies are considered under scope.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Required",
          "PoC Required",
          "PoC Not Required"
        ],
        "productType": [
          "Lending",
          "Staking",
          "Token"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Arbitrum",
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $250,000"
          },
          {
            "level": "High",
            "payout": "USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      },
      "websiteUrl": null,
      "description": "Notional is a protocol on Ethereum that facilitates fixed-rate, fixed-term crypto asset lending and borrowing through a novel financial instrument called fCash.",
      "githubUrl": null,
      "feasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)\n",
      "prohibitedActivites": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)\n",
      "responsiblePublicationCategory": null,
      "knownIssues": [],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": "- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n  - This does not exclude reflected HTML injection with or without JavaScript\n  - This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass)\n- SPF/DMARC misconfigured records)\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering",
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": "  - Best practice critiques",
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum",
      "rewardsToken": "USDC, USDT, ETH, DAI",
      "eligibilityCriteria": [],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [
        {
          "id": 79,
          "title": "Notional smart contracts",
          "description": "Program smart contracts",
          "url": "https://github.com/notional-finance/contracts-v2/"
        }
      ],
      "programDocumentations": [],
      "primacy": "primacy_of_rules",
      "newProgramRewardsEnabled": true,
      "findingsUrl": null,
      "premiumTriaging": false
    },
    "project": {
      "features": [],
      "premiumTriaging": false,
      "isSafeHarborActive": false,
      "performanceMetrics": {
        "medianResponseTimeInMinutes": 102
      }
    },
    "metaData": {
      "title": "Notional Bug Bounties",
      "description": "Find bugs and vulnerabilities on Notional and get paid up to $250,000.",
      "url": "https://immunefi.com/bug-bounty/notional/",
      "ogImg": "/api/bounty/og-image/?project=Notional&slug=notional"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
