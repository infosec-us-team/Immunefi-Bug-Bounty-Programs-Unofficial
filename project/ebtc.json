{
  "pageProps": {
    "bounty": {
      "contentfulId": "xwXB7AJUXSwJ6nweqDLy9",
      "id": "ebtc",
      "slug": "ebtc",
      "project": "eBTC",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/TXjTYWcKldzilwGzOUXdk/f325730c8503f87906011f80f2be0863/2024-03-26_17.25.08.png",
      "launchDate": "2024-03-25T02:28:00.000Z",
      "endDate": null,
      "updatedDate": "2024-03-26T14:26:21.705Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000 to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $25,000 to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "7fwb8l2s5Sa2r2KfSeXx7H",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6dBDB6D420c110290431E863A1A978AE53F69ebC#code",
          "description": "ActivePool.sol - 224 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:39:56.553Z"
        },
        {
          "id": "74LAIOEDCOQ6zoJMfCdvJl",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd366e016Ae0677CdCE93472e603b75051E022AD0#code",
          "description": "BorrowerOperations.sol - 754 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:41:25.050Z"
        },
        {
          "id": "4yO6ZdnAnNGpmEFvj9OjGm",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc4cbaE499bb4Ca41E78f52F07f5d98c375711774#code",
          "description": "CdpManager.sol - 588 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:41:47.066Z"
        },
        {
          "id": "3PWWviat7Z8GI7X6LHQ5co",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4Ae990C3b2F7C3961c51483eFba20760946a7681#code",
          "description": "LiquidationLibrary.sol - 710 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:42:11.345Z"
        },
        {
          "id": "4vH603k0S6wtTMnsnrv4Zh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x335982DaE827049d35f09D5ec927De2bc38df3De#code",
          "description": "CollSurplusPool.sol - 95 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:42:31.569Z"
        },
        {
          "id": "4PeZEIw6asqeN1LbOqePZW",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x661c70333AA1850CcDBAe82776Bb436A0fCfeEfB#code",
          "description": "EBTCToken.sol - 223 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:42:52.993Z"
        },
        {
          "id": "72Aol5hGI25n7M5H9MJkh1",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2A095d44831C26cFB6aCb806A6531AE3CA32DBc1#code",
          "description": "Governor.sol - 127 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:43:14.397Z"
        },
        {
          "id": "2CcUjb0OSSS71MZswy2WLN",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6a24ECc18224857BD73A7aa53c2a4Eb43c17D5A8#code",
          "description": "PriceFeed.sol - 496 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:43:33.764Z"
        },
        {
          "id": "3X23ZfZn66BabthI6l6ac6",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x591AcB5AE192c147948c12651a0a5f24f0529BE3#code",
          "description": "SortedCdps.sol - 399 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:43:54.675Z"
        },
        {
          "id": "UZ5DBd87LJdM8rMXEvnCX",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa9a65B1B1dDa8376527E89985b221B6bfCA1Dc9a#code",
          "description": "EbtcFeed.sol - 105 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:44:14.706Z"
        },
        {
          "id": "7elGCXGfYoNRXlsoKIghEl",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xE61EbC2B9Fd43bCA89E38c707aCb280907f447CB#code",
          "description": "ChainlinkAdapter.sol - 93 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:44:35.363Z"
        },
        {
          "id": "5LYg2cIaCi5Ia1cztmK5eU",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe71306c6353Bd8E282F77DbD3A06a357936b3BEC#code",
          "description": "FixedAdapter.sol - 48 nSLOC",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-03-25T14:44:59.231Z"
        },
        {
          "id": "7wYZ49EsVHwYfAnDpt5Yjt",
          "type": "smart_contract",
          "url": "https://immunefi.com/",
          "description": "Primacy of Impact",
          "isPrimacyOfImpact": true,
          "addedAt": "2024-03-25T14:45:30.900Z"
        }
      ],
      "impacts": [
        {
          "id": "7dUvb7Znw9eOz90pxzqQop",
          "title": "Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6r3Nkp3pgfjcHqxUQbXAt",
          "title": "Direct theft of at least 2 stETH worth of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5Xpu2F9y4b7hxvocTSb4KE",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4ClI7LTWzL9vFyaHykiB7k",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "77IlzrUXn1Zm3eulEdMX44",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "22kZhFJUlbsuJedMpVAkVm",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3NYb3yGHTpJ6awdyAGSuP2",
          "title": "Temporary freezing of funds for at least 15 minutes",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5tMESAvWhcg0oZHBHDuIVu",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7vRW0EJkRtcdk7Kww6ZjK3",
          "title": "Block stuffing",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7nRwV8U0ZWXiD3DB15TqcS",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3QkJdaJ9fdJDGBVSx5Os4t",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3A8pFawnGwNee5AqwTlOZR",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2VhpzXjMXUO6hXzNibm1Wd",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "eBTC is a collateralized crypto asset soft pegged to the price of Bitcoin and built on the Ethereum network. It is based on the Liquity protocol and backed exclusively by Staked Ether (stETH). The protocol is designed with an immutable core with minimized counterparty reliance and governance.\n\nIt’s designed to be the most decentralized synthetic BTC in DeFi and offers the ability for anyone in the world to borrow BTC at no cost.\n\nAfter locking up stETH as collateral and creating an individual position called a CDP, the user can get instant liquidity by minting eBTC. Each CDP is required to be collateralized at a fixed minimum ratio determined by the protocol.\n\nThe redemption and liquidation mechanisms help ensure that stability is maintained through economically-driven user interactions and arbitrage, rather than through active governance or monetary interventions.\n\neBTC is built by [BadgerDAO](https://badger.com/). For more information about eBTC, please visit [twitter](https://twitter.com/eBTCprotocol) and the [docs](https://docs.ebtc.finance/ebtc).\n\nBadgerDAO provides rewards in USDC on Ethereum, denominated in USD. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n\n__Responsible Publication__\n\nBadgerDAO adheres to category 2 - Notice Required. This Policy determines what information researchers are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication](https://immunefi.com/responsible-publication/) page.\n\n__Primacy of Impact vs Primacy of Rules__\n\nBadgerDAO adheres to the Primacy of Impact for all levels.\n\nPrimacy of Impact means that the impact is prioritized rather than a specific asset. This encourages security researchers to report on all bugs with an in-scope impact, even if the affected assets are not in scope. For more information, please see [Best Practices: Primacy of Impact ](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact)\n\nWhen submitting a report on Immunefi’s dashboard, the security researcher should select the Primacy of Impact asset placeholder. If the team behind this project has multiple programs, those other programs are not covered under Primacy of Impact for this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nIf the project has any testnet and/or mock files, those will not be covered under Primacy of Impact.\n\nAll other impacts are considered under the Primacy of Rules, which means that they are bound by the terms and conditions set within this program.\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC, demonstrating the bug's impact, is required for this program and has to comply with the [Immunefi PoC Guidelines and Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n\n__Known Issue Assurance__\n\nBadgerDAO commits to providing Known Issue Assurance to bug submissions through their program. This means that BadgerDAO will either disclose known issues publicly, or at the very least, privately via a self-reported bug submission. \n\nIn a potential scenario of a mediation, this allows for a more objective and streamlined process, in order to prove that an issue is known. Otherwise, assuming the bug report is valid, it would result in the report being considered as in-scope, and due a reward.\n\n__Public Disclosure of Known Issues__\n\nBug reports covering previously-discovered bugs (listed below) are not eligible for a reward within this program. This includes known issues that the project is aware of but has consciously decided not to “fix”, necessary code changes, or any implemented operational mitigating procedures that can lessen potential risk. \n\n- Account's stETH balance getting lower on 1 or 2 wei due to rounding down integer math: https://github.com/lidofinance/lido-dao/issues/442\n- Steal of shares using transferSharesFrom due to math rounding issues: https://github.com/lidofinance/lido-dao/issues/796\n- Redeem to change partial NICR in order to grief redemption, or, open a cdp that front-runs the redemption to grief the redemption: https://github.com/code-423n4/2023-10-badger-findings/issues/226\n- stETH upgrade risk is considered known\n- Unbounded gas is via poor hint selection\n- Chainlink misbehaviour and single privilege is considered known\n- End user risks tied to malicious PositionManagers are considered known\n- Known Rounding Behaviour: Debt Redistribution Precision Loss:\n   - Every time a Cdp updates with one or more pending debt redistribution events, it can possibly lose 1 wei of debt to rounding. This 1 wei of debt will still be accounted for in systemDebt. This is “rounding against the protocol” in the sense that the systemDebt will become 1 wei higher than the sum of all active\nCdp debt for each instance of this occuring. It’s unbounded. This leads to a theoretical maximum differential of 1 wei per Cdp per debt redistribution event between the sum of all active Cdp debt and the systemDebt.\n- Known Rounding Behaviour: Collateral Rebase Precision Loss:\n   - However, this rounding behavior also exists during collateral rebase events. In this case it “rounds against the user”. Each time a Cdp is updated with any pending rebases to apply, it can lose  wei of collateral versus what it would have mathematically speaking due to precision loss of division. The systemCollShares becomes 1 wei higher than the sum of all active Cdp collShares in this instance. This leads to a theoretical maximum differential of 1 wei per Cdp per rebase event between the systemCollShares and the sum of all active Cdp collShares.\n   - A Cdp can lose value due to precision loss of division versus the mathematically accurate expected result. Values up to a tolerance threshold of 1000 wei per Cdp update event will be considered known and acceptable. In addition the systemCollShares will become higher than the sum of all active Cdp collShares in this instance. This leads to a theoretical maximum differential of 1 wei per Cdp per rebase event between the systemCollShares and the sum of all active Cdp collShares.\n   - SortedCdps list can get out of order with debt redistribution. This is considered acceptable and does not affect liquidations, only redemption ordering.\n- Bugs tied to the system having a vast majority of CDPs being underwater\n   - Findings that are theoretical in nature should be downgraded or considered invalid\n   - As a general rule reports should assume that liquidators will prefer liquidations over redemptions as redemptions cause a monetary loss to the actor while liquidations cause a gain\n   - Also see known issues in the [eBTC Readme](https://github.com/ebtc-protocol/ebtc/tree/release-0.8?tab=readme-ov-file#known-issues-from-previous-audits) and [eBTC Cheatsheet](https://gist.github.com/GalloDaSballo/7b060bb97de09c539ec64c533dd352c6)\n\n__Previous Audits__\n\nBadgerDAO’s has provided these completed audit review reports for reference. Any unfixed vulnerabilities mentioned in these reports are not eligible for a reward.\n\n- RiskDAO: https://github.com/Risk-DAO/Reports/blob/main/eBTC.pdf\n- Trust: https://badger.com/images/uploads/trust-ebtc-audit-report.pdf\n- Spearbit: https://badger.com/images/uploads/ebtc-security-review-spearbit.pdf\n- Cantina: https://badger.com/images/uploads/ebtc-security-review-cantina.pdf\n- Code4rena: https://code4rena.com/reports/2023-10-badger\n- Shung: https://gist.github.com/Shungy/ebeb9366e970ecbf4da1eda296581e47\n\n__Feasibility Limitations__\n\nThe project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of [feasibility limitation standards ](https://immunefisupport.zendesk.com/hc/en-us/articles/16913132495377-Feasibility-Limitation-Standards) which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n\n__Immunefi Standard Badge__\n\nBy adhering to Immunefi’s best practice recommendations, BadgerDAO has satisfied the requirements for the [Immunefi Standard Badge.](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209)",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the[ Immunefi Vulnerability Severity Classification System V2.3. ](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/)\n\n__Reward Calculation for Critical Level Reports__\n\nFor critical smart contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 100 000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 50 000 is to be rewarded in order to incentivize security researchers against withholding a critical bug report.\n\n\n__Repeatable Attack Limitations__\n\nIf the smart contract where the vulnerability exists can be upgraded or paused, only the initial attack will be considered for a reward. This is because the project can mitigate the risk of further exploitation by upgrading or pausing the component where the vulnerability exists. The reward amount will depend on the severity of the impact and the funds at risk. \n\nFor critical repeatable attacks on smart contracts that cannot be upgraded or paused, the project will consider the cumulative impact of the repeatable attacks for a reward. This is because the project cannot prevent the attacker from repeatedly exploiting the vulnerability until all funds are drained and/or other irreversible damage is done. Therefore, this warrants a reward equivalent to 10% of funds at risk, capped at the maximum critical reward. \n\n__Reward Calculation for High Level Reports__\n\nHigh vulnerabilities concerning theft/permanent freezing of unclaimed yield/royalties are rewarded within a range of USD 25 000 to USD 50 000 depending on the funds at risk, capped at the maximum high reward.  \n\nIn the event of temporary freezing, the reward doubles from the full frozen value for every additional [24h] that the funds are temporarily frozen, up until a max cap of the high reward. This is because as the duration of the freezing lengthens, the potential for greater damage and subsequent reputational harm intensifies. Thus, by increasing the reward proportionally with the frozen duration, the project ensures stronger incentives for bug disclosure of this nature.\n\n\n__Reward Payment Terms__\n\nPayouts are handled by the BadgerDAO team directly and are denominated in USD. However, payments are done in USDC on Ethereum\n\nThe calculation of the net amount rewarded is based on the average price between CoinMarketCap.com and CoinGecko.com at the time the bug report was submitted. No adjustments are made based on liquidity availability.",
      "outOfScopeAndRules": "These impacts are out of scope for this bug bounty program. \n\n__All Categories:__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program.\n- If we’re running public tests, then we should not receive reports that are a direct copy of the result of our own testing. This includes information derived branches and PRs on the public repo. This is to prevent reports that are a front-run of our own internal due diligence.\n- Findings that share a root cause with properties broken by  a public fuzz suite run will be considered known at the time that the fuzzer broke the property.\n- Findings that become public knowledge are not considered valid vulnerabilities if the team was already aware of them.\n- Deadline based findings should be considered out of scope, attacks tied to MEV supply chain should not be viewed as valid, as they impact end users due to their actions and not the systems functionality.\n- Findings tied to stETH rebasing should not be accepted unless they deal with the math tied to PYS and end user appreciation\n- eBTC is not responsible to prevent losses in case of slashings\n- Impacts that are known, and or have been disputed via previous contests, bounties, etc..\n\n__Blockchain/DLT & Smart Contract Specific:__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks\n\n\n__Prohibited Activities:__\n\n- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "eBTC codebase can be found at https://github.com/ebtc-protocol. Documentation and further resources can be found on https://docs.ebtc.finance/ebtc.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Required",
          "Primacy of Impact"
        ],
        "productType": [
          "Staking"
        ],
        "projectType": [],
        "ecosystem": [],
        "programType": [
          "Smart Contract"
        ],
        "language": []
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 to USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000 to USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $10,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      },
      "websiteUrl": null,
      "description": null,
      "githubUrl": null,
      "defaultFeasibilityLimitations": null,
      "defaultProhibitedActivites": null,
      "premiumTriaging": false
    },
    "project": null,
    "metaData": {
      "title": "eBTC Bug Bounties | Immunefi",
      "description": "Find bugs and vulnerabilities on eBTC and get paid up to $100,000.",
      "url": "https://immunefi.com/bug-bounty/ebtc",
      "ogImg": "/api/bounty/og-image?project=eBTC"
    },
    "bbpPageV2Enabled": true,
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
