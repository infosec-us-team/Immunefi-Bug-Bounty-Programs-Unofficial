{
  "pageProps": {
    "bounty": {
      "contentfulId": "2oF5ZRoWcAvJCzrEn5ZCWx",
      "id": "babylon-labs",
      "slug": "babylon-labs",
      "project": "Babylon Labs",
      "maxBounty": 1000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1uFhvCOin4EEx5EMqnIkF9/cfa80e20b68ae47bd84d813d25b584bc/72515ec2-1bc5-4bdf-b788-354949253625.png",
      "launchDate": "2024-09-16T15:00:00.000Z",
      "endDate": null,
      "updatedDate": "2024-09-17T15:12:08.734Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $50,000 - USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $20,000 - USD $200,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $5,000 - USD $20,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "USD $1,000 - USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $10,000 - USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "6iWDisRaPJNH8L84SNpWto",
          "type": "blockchain_dlt",
          "url": "https://github.com/babylonlabs-io/babylon/tree/v0.9.x/btcstaking",
          "description": "Golang BTC Staking Library",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "1zajHNm2AHSkJaO3le2Nxm",
          "type": "blockchain_dlt",
          "url": "https://github.com/babylonlabs-io/btc-staking-ts/tree/v0.2.x",
          "description": "TypeScript BTC Staking Library",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "2LWWqS2AbqMwjJ3vUO1E4K",
          "type": "blockchain_dlt",
          "url": "https://github.com/babylonlabs-io/staking-indexer/tree/v0.2.x",
          "description": "Bitcoin Staking Indexer",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "7xQEB1ap4T5KH6vLE4p4C",
          "type": "blockchain_dlt",
          "url": "https://github.com/babylonlabs-io/staking-queue-client/tree/v0.4.x",
          "description": "Staking Queue Client",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "1djh2AHwlzyJYKRMNNuJEl",
          "type": "blockchain_dlt",
          "url": "https://github.com/babylonlabs-io/staking-expiry-checker/tree/v0.1.x",
          "description": "Staking Expiration Checker Micro-Service",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "3kLiVQst6UEzfOTy2m7gmf",
          "type": "blockchain_dlt",
          "url": "https://github.com/babylonlabs-io/covenant-signer/tree/v0.2.x",
          "description": "Covenant Emulator Signer Program",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "eb5Wp8akCro0JqQvThDNQ",
          "type": "blockchain_dlt",
          "url": "https://github.com/babylonlabs-io/cli-tools/blob/v0.2.x/",
          "description": "Unbonding Pipeline Process",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "2hBHxkVFioYAxYdv3z1OWE",
          "type": "blockchain_dlt",
          "url": "https://github.com/babylonlabs-io/btc-staker/tree/v0.5.x/cmd/stakercli/transaction",
          "description": "CLI Staking Program",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "zU49gS0UEfkSkZ2ZMdCvQ",
          "type": "blockchain_dlt",
          "url": "https://github.com/babylonlabs-io/finality-provider/tree/v0.4.x/eotsmanager",
          "description": "CLI EOTS Manager Program",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "1Go6VZyiK8pyhB3X3yZlGW",
          "type": "blockchain_dlt",
          "url": "https://github.com/babylonlabs-io/networks/tree/parameters/v0.2.3/parameters",
          "description": "Parameters Parser",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "45laDM8BLfK1lSGsBnP4kr",
          "type": "websites_and_applications",
          "url": "https://github.com/babylonlabs-io/staking-api-service/tree/v0.2.x",
          "description": "Staking API Service",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        },
        {
          "id": "1NhRTIhN0pqNUhO23IA11k",
          "type": "websites_and_applications",
          "url": "https://github.com/babylonlabs-io/simple-staking/tree/v0.2.x",
          "description": "Staking dApp",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-16T15:00:00.000Z"
        }
      ],
      "impacts": [
        {
          "id": "1gWyk6wgURjGbjRWhzJLGa",
          "title": "Direct loss of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4okFA7Ska6TwD6XWi02fnw",
          "title": "Permanent freezing of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "0wUlZ9BBEPZnUn1EOGAqm",
          "title": "Retrieve the private key of a covenant committee member",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "wux6YU6pcJCwxdXdZNYDa",
          "title": "Leakage of EOTS private keys without the holder double-signing",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4K8JRCX41zFU0G5By2AkgY",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3jNegqcuBaQKbXf5qc19BQ",
          "title": "Retrieve sensitive data/files from a running server, such as:  `/etc/shadow`, database passwords, blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3nPVhH1quLb1Pzl1ZEwqxM",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as:   Making trades",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "XkeEZBZIf6LFNVZoSyoKi",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5Yi0fSAdYTt7qT5SaKZkwz",
          "title": "Direct theft of user funds or causing their freezing",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2zYYiBoNHYW9Xy8NtawY6A",
          "title": "Malicious interactions with an already-connected wallet, such as: Modifying transaction arguments or parameters, Submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "32wh4vjNfsEuBs0lEoEP9Y",
          "title": "Generation of invalid  EOTS keys",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "4XRSGwgDSwoVclJpPJ9u58",
          "title": "Generation of invalid EOTS key signatures / Invalid verification of EOTS key signatures",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "7pcsUQBxaPRjn0UK3w4Iid",
          "title": "Inability for a non-malicious covenant signer to sign valid unbonding requests for more than 24h.",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "1WkxRhxJxvqvTp5LiSZm62",
          "title": "Generation of unbonding and withdrawal transactions that cannot be confirmed by the Bitcoin ledger",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "EyasaobPiUgMxJFDhZQUD",
          "title": "Temporary freezing of funds for more than the staking timelock for a staking transaction or more than the unbonding timelock for an unbonding transaction.",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "5l1f4o4uhBwh3GGjElg0v4",
          "title": "Staking backend recognising staking, unbonding, and withdrawal transactions as valid when they are invalid and vice verca.",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "Vb8zUaOXaQlu6W6FjDxf5",
          "title": "Causing the staking backend to process staking, unbonding, or withdrawal transactions that do not conform to the set parameters and protocol.",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "3Efw9mNDbCXdsloGa4ph8f",
          "title": "Staking backend incorrectly identifying the status of a stake",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "1a3JzCXWze86rlA9jHRTm5",
          "title": "Taking down the API/website",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2T7ybAveYG6GPHjPiMzPoe",
          "title": "API unable to process unbonding requests",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "nPKXxECHpn8JwCNZiuzTG",
          "title": "Injecting/modifying the static content on the target application without JavaScript (persistent), such as:  HTML injection without JavaScript, Replacing existing text with arbitrary text, Arbitrary file uploads etc",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "6N7CXllZ1alyHvZezBJAAh",
          "title": "Subdomain takeover without already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "3VGvWNy6FkFmT3mQ2WLToh",
          "title": "Causing a temporary (more than 1 hour) inability to process unbonding requests",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "5DV4UmMqV9Gzd6I4Z18Vhm",
          "title": "Generation of staking transactions that cannot be confirmed by the Bitcoin ledger",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "1x4RNbE05jYWqz9swGpjjw",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as their stored pending transactions.",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "2HXAdk1EC8UHgcJ5BczdZ4",
          "title": "Injecting/modifying the static content on the target application without JavaScript (reflected), such as:  Reflected HTML injection, Loading external site data",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "1uM3HNqXmudjnD05pMXCVw",
          "title": "Redirecting users to malicious websites (open redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "3HbSxqDeGBR3h2l2ZqmZiP",
          "title": "Program crash leading to the inability to process and present information about the current state of the system.",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "6AA9VKm8Lkz8qBwNMlwv3w",
          "title": "Invalid Calculation of TVL",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "2LGOdDk6AWqYqboiyLdKqF",
          "title": "Incorrectly identifying a staking/unbonding transaction as expired",
          "type": "blockchain_dlt",
          "severity": "low"
        },
        {
          "id": "69L1ZJMFovQc6ABPQ2QY0P",
          "title": "Changing details of users (including modifying browser local storage) without already-connected wallet interaction and with significant user interaction, such as: Iframing leading to modifying the backend/browser state (must demonstrate impact with PoC)",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "6P87Ye0yGvChNCV6w2ok4W",
          "title": "Taking over broken or expired outgoing links, such as:  Social media handles, etc.",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "5li7eb81plUPy58xIx2Cy9",
          "title": "Temporarily disabling user to access target site, such as: Locking up the victim from login, Cookie bombing etc.",
          "type": "websites_and_applications",
          "severity": "low"
        }
      ],
      "programOverview": "Babylon introduces a new major utility for Bitcoin: trustless and self-custodial staking. The Babylon Bitcoin staking protocol turns Bitcoin into a stakable and slashable asset for any Proof-of-Stake systems. This allows Bitcoin HODLERs to hold their Bitcoins while earning  staking rewards from the PoS systems for the slashable security they provide, in the same way as how native PoS token staking works.\n\nThis is a brand new significant protocol, and it is at its very early stage. Its success lies in its protection of the Bitcoin stakers. More specifically, as long as:\n\n- a Bitcoin staker manages its secret key properly, and\n- the Bitcoin staker or the delegatee of its PoS attestation power (called a finality provider)  does not act maliciously, then\n\nno one can steal or slash the staked Bitcoin, and the Bitcoin staker can safely unbond and/or withdraw the stake as per the protocol.\n\nAchieving such protection requires comprehensive security of the Bitcoin staking protocol at both the algorithm and implementation level. To this end, we have open-sourced all our code, and launched, on the 28th May 2024,  a public Bitcoin staking testnet that focused on the Bitcoin stakers’ interaction with the Signet Bitcoin chain and the staking web DApp developed by the Babylon team. No PoS chain and  staking reward is involved in this testnet.\n\nBased on the successful operation of the testnet and the associated security audits on the code deployed in it, we are now launching a public Bitcoin Staking mainnet. This mainnet contains a staking cap that limits the amount of Bitcoins that enter into the system, with the goal of gradually rolling out the protocol.\n\nFor more information about Babylon Labs Ltd. (“Babylon Labs”), please visit [https://babylonlabs.io](https://babylonlabs.io)\n\nBabylon Labs provides rewards in USDC on Ethereum, denominated in USD. For more details about the payment process, please view the __Rewards by Threat Level__ section.\n\nThis bug bounty program will have a hard cap of **USD $3,000,000**. If multiple bug reports are submitted that exceed this amount, the rewards will be provided on a first come first served basis until that cap is reached.\n\n__KYC Requirement__\n\nBabylon Labs will be requesting KYC information in order to pay for successful bug submissions. The following information will be required:\n\n- Full name \n- Date of birth\n- Proof of address (either a redacted bank statement with address or a recent utility bill)\n- Copy of Passport or other Government issued ID\n\nAdditional or alternate KYC information may be required by Babylon Labs or its KYC services provider. If you are an entity, KYB information will be required. Security researchers will need to  provide accurate and complete information in response to each such KYC or KYB request. \n\n__Eligibility Criteria__\n\nSecurity researchers who wish to participate must adhere to the rules of engagement set forth in this program and cannot be:\n\n- Official contributor, both past or present\n- Employees and/or individuals closely associated with the project \n- Security auditors that directly or indirectly participated in the audit review\n- a resident or agent of, or an entity organized, incorporated or doing business in, any country to which the United States, the United Kingdom, the European Union or any of its member states or the United Nations or any of its member states (collectively, the “Major Jurisdictions”) embargoes goods or imposes sanctions\n- and is not directly or indirectly owned or controlled by, any person that is listed on any sanctions list or equivalent maintained by any of the Major Jurisdictions.\t\n\n__Responsible Publication__\n\nBabylon Labs adheres to category 3 - Approval Required. This Policy determines what information researchers are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication](https://immunefi.com/responsible-publication/) page.\n\n__Primacy of Impact vs Primacy of Rules__\n\nBabylon Labs adheres to the Primacy of Impact for the following impacts:\n\n- Blockchain/DLT - Critical\n- Web/App - Critical\n\nPrimacy of Impact means that the impact is prioritized rather than a specific asset. This encourages security researchers to report on all bugs with an in-scope impact, even if the affected assets are not in scope. For more information, please see [Best Practices: Primacy of Impact](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact) \n\nWhen submitting a report on Immunefi’s dashboard, the security researcher should select the Primacy of Impact asset placeholder. If the team behind this project has multiple programs, those other programs are not covered under Primacy of Impact for this program. Instead, check if those other projects have a bug bounty program on Immunefi.\nIf the project has any testnet and/or mock files, those will not be covered under Primacy of Impact.\nAll other impacts are considered under the Primacy of Rules, which means that they are bound by the terms and conditions set within this program.\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC, demonstrating the bug's impact, is required for this program and has to comply with the [Immunefi PoC Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules).\n\n__Public Disclosure of Known Issues__\n\nBug reports covering previously-discovered bugs (listed below) are not eligible for a reward within this program. This includes known issues that the project is aware of but has consciously decided not to “fix”, necessary code changes, or any implemented operational mitigating procedures that can lessen potential risk. \n\n- Anything included as an open issue in the GitHub repositories.\n- The informational components of the system operate under the assumption that transactions with sufficient confirmations are irreversible. In the event that a re-org happens reversing more blocks than this confirmation delta, the system will have to be restarted and re-index  Bitcoin staking transactions. To combat this, the number of required confirmations defined in the global parameters is set to a high value based on historical Bitcoin data relating to re-orgs.\n- A staker intentionally setting a very low Bitcoin fee, might find their transaction stuck in the mempool or included in a Bitcoin block where different staking parameters apply.\n- Natural stake expiration (i.e. without on-demand unbonding) does not reduce the TVL amount the API service considers active. This design decision was made as the testnet and mainnet environments involve timelocks above a 15 month period (64000 blocks). All stake is expected to transition to the phase-2 PoS security system much earlier than that, so we do not expect naturally expiring stake for the lifespan of the phase-1 API service.\n\n__Previous Audits__\n\nBabylon Labs’ completed audit reports can be found in the following list. Any unfixed vulnerabilities  mentioned in these reports are not eligible for a reward.\n\n- Coinspect Audit: [https://docs.babylonlabs.io/assets/files/coinspect-phase1-audit.pdf](https://docs.babylonlabs.io/assets/files/coinspect-phase1-audit.pdf)\n- Zellic Audit: [https://docs.babylonlabs.io/assets/files/zellic-phase1-audit.pdf](https://docs.babylonlabs.io/assets/files/zellic-phase1-audit.pdf)\n- Cantina Competition: [https://docs.babylonlabs.io/assets/files/cantina-phase1-competition.pdf](https://docs.babylonlabs.io/assets/files/cantina-phase1-competition.pdf) \n\n__Feasibility Limitations__\n\nThe project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of [feasibility limitation standards](https://immunefisupport.zendesk.com/hc/en-us/articles/16913132495377-Feasibility-Limitation-Standards) which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n\n__Immunefi Standard Badge__\n\nBy adhering to Immunefi’s best practice recommendations, Babylon Labs has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209).\n\n__Additional Terms__\n\nAs a condition of your participation in Babylon Labs Bug Bounty Programs, including the submission of bug reports, you agree to be bound by the following terms and conditions in addition to any other terms and conditions that govern your participation.  If you do not agree to these terms and conditions, you should not submit any bug report.\n  \n1. Babylon Labs will determine the severity level and impact for each submission, whether any submission is within scope and eligible for a reward, and the amount of a reward within a stated range, in its reasonable discretion.\n\n2. Babylon Labs is not liable or responsible for any costs, fees, or expenses incurred by you in connection with this Bug Bounty Program. You acknowledge and agree that you shall be solely and exclusively responsible for the payment of any and all taxes, levies, duties, or similar governmental charges (collectively, \"Taxes\") that may arise in connection with any reward payments made to you.  However, Babylon Labs may be required by applicable law to withhold or deduct any Taxes from payments.\n\n3. Babylon Labs is an express third-party beneficiary of the Security Researchers Terms & Conditions between you and Immunefi, and entitled to enforce the terms and conditions therein as if it were an original contracting party. Babylon Labs is the party designated to be the transferee of intellectual property rights under Section 7 of the Security Researchers Terms & Conditions.\n\n4. **Babylon Labs, its affiliates and licensors, and their respective directors, officers, and employees (collectively, “Babylon Parties”) will have no liability arising from or relating to your use of, or conduct in connection with this Bug Bounty Program or the Immunefi platform, other than Babylon Labs’ potential obligations to pay you a reward.  To the fullest extent permitted by applicable law, under no circumstances will any Babylon Parties be responsible or liable under any theory of liability, whether based in tort, contract, negligence, strict liability, warranty, or otherwise: (a) for any direct, indirect, exemplary, special, punitive, incidental, or consequential losses or damages of any kind, including without limitation, loss of profits arising from or relating to the bug bounty program or your use of the Immunefi platform.** The foregoing limitations apply even if Babylon Parties were advised of or should have known of the possibility of such losses or damages and notwithstanding any failure of essential purpose of any limited remedy. The foregoing limitations will apply even if the above stated remedy fails of its essential purpose. Some jurisdictions do not allow the limitation or exclusion of certain liabilities, and damages. Accordingly, some of the disclaimers and limitations set forth in this Agreement may not apply in full to you, but will apply to the fullest extent as permitted by applicable law.",
      "prioritizedVulnerabilities": "Vulnerabilities are prioritized based on severity and impact.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.3](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/). \n\n__Reward Calculation for Blockchain/DLT Critical Level Reports__\n\nFor critical Blockchain/DLT bugs, the reward amount is 10% of the funds directly affected, capped at the maximum critical reward __USD 1 000 000__. However, a minimum reward of __USD 50 000__ is to be rewarded in order to incentivize security researchers against withholding on a bug report.\n\nAll other impacts that would be classified as Critical would be rewarded with a minimum of __USD 50 000__. The rest of the severity levels are paid out according to the Impact in Scope table.\n\n__Reward Calculation for Blockchain/DLT High Level Reports__\n\n- In the event of temporary freezing, the reward doubles from the full frozen value for every additional __24h__ that the funds are temporarily frozen, up until a max cap of the high reward. This is because as the duration of the freezing lengthens, the potential for greater damage and subsequent reputational harm intensifies. Thus, by increasing the reward proportionally with the frozen duration, the project ensures stronger incentives for bug disclosure of this nature.\n\n__Reward Calculation for Web/Apps Critical Level Reports__\n\nFor critical web/apps bug reports will be rewarded with __USD 100 000__, only if the impact leads to:\n\n- A loss of funds involving an attack that does not require any user action\n- Users funds being permanently stuck involving an attack that does not require any user action\n- Private key or private key generation leakage leading to unauthorized access to user funds \n\nAll other impacts that would be classified as Critical would be rewarded with a minimum of __USD 10 000__. \n\nThe rest of the severity levels are paid out according to the Impact in Scope table.  \n\n__Reward Payment Terms__\n\nPayouts are handled by the **Babylon Labs** team directly and are denominated in __USD__. However, payments are done in __USDC__ on Ethereum",
      "outOfScopeAndRules": "These impacts are out of scope for this bug bounty program. \n\n__All Categories:__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts that only require DDoS\n\n__Blockchain/DLT Specific:__\n\n- Incorrect data supplied by third party oracles\n - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks\n- Impacts involving Bitcoin not being live or safe.\n- Impacts involving a quorum of the covenant committee being malicious.\n- Impacts involving a quorum of the covenant committee not being able to be reached due to a full quorum not being live.\n- Impacts involving the confirmation depth on the global parameters being set to an improperly low value.\n- Impacts involving a user’s staking transaction being included in a Bitcoin block in which different global parameters than the ones the user used apply.\n\n\n__Websites and Apps:__\n\n- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n- This does not exclude reflected HTML injection with or without JavaScript\n- This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass)\n- SPF/DMARC misconfigured records)\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering\n\n__Prohibited Activities:__\n\n- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "Babylon Labs’ codebase can be found at [https://github.com/babylonlabs-io](https://github.com/babylonlabs-io). Documentation and further resources can be found on [https://docs.babylonlabs.io](https://docs.babylonlabs.io).\n\n__High-level articles on how Bitcoin Staking works:__\n\n- https://babylonlabs.io/blog/what-is-bitcoin-staking \n- https://babylonlabs.io/blog/technical-preliminaries-of-bitcoin-staking \n- https://babylonlabs.io/blog/babylon-s-bitcoin-staking-contract \n\nBelow are general purpose technical documentations around the Bitcoin Staking Protocol and the lock-only system operated by the current testnet. Documentation on individual components of the system can be found in the component repositories.\n\n__Bitcoin Staking Protocol and Litepaper:__ \n- https://docs.babylonlabs.io/docs/introduction/btc-staking \n\n__Introductory reading:__ \n\nBitcoin staking 101 Series:\n\n- https://babylonlabs.io/blog/what-is-bitcoin-staking\n- https://babylonlabs.io/blog/technical-preliminaries-of-bitcoin-staking\n- https://babylonlabs.io/blog/babylon-s-bitcoin-staking-contract\n\n__Bitcoin Staking Scripts:__ \n- https://github.com/babylonlabs-io/babylon/blob/v0.9.x/docs/staking-script.md \n\n__Creating Bitcoin Staking Transactions:__ \n- https://github.com/babylonlabs-io/babylon/blob/v0.9.x/docs/transaction-impl-spec.md",
      "impactsBody": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__For the Unbonding Pipeline Process, the following code components and branches are in-scope:__\n\nEverything here [https://github.com/babylonlabs-io/cli-tools/blob/v0.2.x/](https://github.com/babylonlabs-io/cli-tools/blob/v0.2.x/), except the following test commands:\n- createStakingTxCmd https://github.com/babylonlabs-io/cli-tools/blob/v0.2.x/cmd/createStakingTxCmd.go \n- createUnbondingTxCmd https://github.com/babylonlabs-io/cli-tools/blob/v0.2.x/cmd/createUnbondingTxCmd.go \n- createWithdrawTxCmd https://github.com/babylonlabs-io/cli-tools/blob/v0.2.x/cmd/createWithdrawTxCmg.go \n\n__For the EOTS Manager program, the following code components and branches are in-scope:__\n\n[https://github.com/babylonlabs-io/finality-provider/tree/v0.4.x/eotsmanager](https://github.com/babylonlabs-io/finality-provider/tree/v0.4.x/eotsmanager) – only code associated with the eotsd init, eotsd keys add, eotsd sign-schnorr, and the eotsd verify-schnorr-sig commands is in scope. The EOTS manager daemon functionality is not in scope.",
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Required",
          "PoC Required"
        ],
        "productType": [
          "Staking"
        ],
        "projectType": [
          "Infrastructure"
        ],
        "ecosystem": [
          "Bitcoin"
        ],
        "programType": [
          "Blockchain/DLT",
          "Websites and Applications"
        ],
        "language": [
          "Go",
          "Typescript",
          "JavaScript",
          "Rust"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Websites and Applications",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 - USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $20,000 - USD $200,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000 - USD $20,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000 - USD $5,000"
          }
        ],
        "smartcontract_rewards": [],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $10,000 - USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ]
      },
      "websiteUrl": null,
      "description": null,
      "githubUrl": null,
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)\n",
      "defaultProhibitedActivites": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)\n",
      "responsiblePublicationCategory": "category_3",
      "premiumTriaging": false
    },
    "project": {
      "premiumTriaging": false,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "Babylon Labs Bug Bounties",
      "description": "Find bugs and vulnerabilities on Babylon Labs and get paid up to $1,000,000.",
      "url": "https://immunefi.com/bug-bounty/babylon-labs",
      "ogImg": "/api/bounty/og-image?project=Babylon+Labs"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
