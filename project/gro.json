{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "gro",
      "slug": "gro",
      "project": "Gro",
      "maxBounty": 1000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4sXJuHhCbWu6lM6OGQjlb7/7b74160213e59a9d396d89fe2cf9193b/Gro.jpeg",
      "launchDate": "2021-08-18T11:00-05:00",
      "updatedDate": "2023-03-08T22:27:04.516Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $1,000,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $15,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "64oobMxnXga0q5vHjasKZ4",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xf0a93d4994b3d98fb5e3a2f90dbc2d69073cb86b",
          "description": "PWRD Stablecoin (PWRD)"
        },
        {
          "id": "3UePlTS51qV6j8a70qZYp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3ADb04E127b9C0a5D36094125669d4603AC52a0c",
          "description": "Gro Vault Token (GVT)"
        },
        {
          "id": "PDLQ9Xf8KvkDVGPMheUQt",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3Ec8798B81485A254928B70CDA1cf0A2BB0B74D7",
          "description": "Gro DAO Token (GRO)"
        },
        {
          "id": "2W4M5RdJj0Xpm53uYoYedA",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd4139E090e43Ff77172d9dD8BA449d2A9683790d",
          "description": "GRouter"
        },
        {
          "id": "4r5A8yWyT8wiAD064vWFc9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xfe620D20b3ED77ec0934Fbe9dF2147F6f3C62599",
          "description": " RouterOracle"
        },
        {
          "id": "XOaYKMnyjTdojByOGrneX",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x19A07afE97279cb6de1c9E73A13B7b0b63F7E67A",
          "description": "GTranche"
        },
        {
          "id": "17neLCg40YktguDh7mz8H7",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7d412E8dF10A7ca21A978e571583A5820B66dccD",
          "description": "CurveOracle"
        },
        {
          "id": "6Z5hlxsavTaSJGTgeGYBVi",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1402c1cAa002354fC2C4a4cD2b4045A5b9625EF3",
          "description": "GVault"
        },
        {
          "id": "2llZnJnrDJIAYqjD4o9Hv6",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x271D1B123932b5b469AaBc9C5b870d2A744861e6",
          "description": "PnL"
        },
        {
          "id": "sl4rRVPK5QclAOWSxn0Dz",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2b369Ba27174A3c33a3922340cCD3e937aEF4470",
          "description": "StopLossLogic"
        },
        {
          "id": "1Gn86yR4W1LEiiDpxBuZ8j",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd18415e9bC188f113CB54A9Edd86dF21898555c7",
          "description": " convexFrax"
        },
        {
          "id": "550Q9EicJCTcV7WWD4MfdM",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x708d0089d52D57e911024465E841774634466608",
          "description": "convexLusd"
        },
        {
          "id": "2HdgAEPnPJByy3tXJuLsuy",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xA1327C0CD1e04e82FD99E68b46ab8A6eb15b17AE",
          "description": "convexGusd"
        },
        {
          "id": "7kCvysZ9TCooV6YUDxzP81",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD947957deA1112cc9d7A5111ea6459432737e4C2",
          "description": "convexOusd"
        },
        {
          "id": "756gKKmCyVUywMOwIT2zbp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD849D8551eC988a59D4E411B1ed7b5b40bF97159",
          "description": "convexTusd"
        },
        {
          "id": "13zH2iFzi4F3wwbmUru43e",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xd16A8e516583B0aAfA9228D1080F34C59584896D",
          "description": "resolver"
        },
        {
          "id": "4M7KYs35KmbacLGr0gNnwF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xE09dE1b49118bB197b2Ea45D4d7054D48D1c3224",
          "description": "guard"
        },
        {
          "id": "3BmPhvAJiYh4FPs4LZGr5F",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6a25Fd29E2033d9519B77FA0d649DC9aeD219a13",
          "description": "priceOracle"
        },
        {
          "id": "2ckmAKeqJtwLtOERlsPl7x",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x748218256AfE0A19a88EBEB2E0C5Ce86d2178360",
          "description": "Main vesting contract"
        },
        {
          "id": "t6hSXBQIXq0lGUXgwYKX6",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8b4A30c8884ca4AfF1E4c82Cce79802a63E61397",
          "description": "Bonus contract"
        },
        {
          "id": "7woHsPcd006zGgVYht06r1",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x63d96236fD0e1c395D3E464a38F46B1adca247DE",
          "description": "DAO vesting contract"
        },
        {
          "id": "76PoOk2gYLXNvGsVzcgow",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1aeBe9147766936906ab56eC0693306Da3539824",
          "description": "DAO vesting contract timelock"
        },
        {
          "id": "27880wEagh0Galkngp93QW",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1F09e308bb18795f62ea7B114041E12b426b8880",
          "description": "Burner"
        },
        {
          "id": "FXG5eoQoW70TmPBH1d0wM",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xF43c6bDD2F9158B5A78DCcf732D190C490e28644",
          "description": "Team vesting contract"
        },
        {
          "id": "ct30ZPWSNj9WGUTiOtZdh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0537d3DA1Ed1dd7350fF1f3B92b727dfdBAB80f1",
          "description": "Investor vesting contract"
        },
        {
          "id": "1zQ1sEPpVxqR12GQwjYesI",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2E32bAd45a1C29c1EA27cf4dD588DF9e68ED376C",
          "description": "MasterChef / LPTokenStaker"
        },
        {
          "id": "5Xp2cPvFknI7tYXQCop95z",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xF3d39A7FEbA9bE0C1D18b355E7eD01070Ee2c561",
          "description": "Airdrop"
        }
      ],
      "impacts": [
        {
          "id": "7h1Zt3OsUzLoagtJHNt67K",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5c36HMO0nPeb5kP6Tdx2lv",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "49vSNCERqjS7TkrneKWJNs",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "39LJtMAcTTjeevVwALU8Sj",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4rC8XRAqnVCk1MFPpbT9QB",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1AZ62xATZIQNI8RtyaAPcl",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "xmXhlXR9SWa6BealXW6Ql",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1UKjkeG7Q1hzt4cJjhn9k9",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "71QHYJKRGCYtTECDzRPOp8",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1YWa9he7TtCvFUw0o7cwyW",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3QkPVZ41hgOX0Gig1OqrVg",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2xspSWZoV2v7OPTkrWYjhs",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1ZA1lsRd6I6OhXr2ujtNEe",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "G^2 (GSquared) is an upgraded version of Gro protocol- a stablecoin yield aggregator that tranches risk and yield. The revamped architecture simplifies the protocol by separating out previously interdependent logic into their own module contracts.\n\nInitially the protocol has two risk- and yield-tranched assets: the PWRD stablecoin and the Vault. All deposits are non-custodially allocated to a set of strategies. Depositors into the Vault receive a higher proportion of system yields but also take on extra smart contract and stable coin risk. \n\nInversely, the PWRD stablecoin receives a smaller portion of the system yield but is protected against these risks.\nThe protocol comprises of multiple smart contracts and modules, with multiple changes from the previous version of the protocol :\n\n  - The Vault and strategies have been moved out into their own stand alone module, __the GVault__ is responsible for generating yield on the by deploying the underlying asset into strategies. \n  - The share tokens from the GVault are __EIP-4626 compliant__\n  - A set of __keeper__ logic contract accompanies the GVault to allow for decentralized harvests and interactions with the vaults strategies\n  - Decentralized __stop loss logic__ has been implemented to automatic realization of losses in the vaults strategies\n  - The tranching logic has also been seperated out into its own stand alone module, the __GTranche__.\n  - The tranche acts as a wrapper for 4626 compatible tokens\n  - The GTranche then distributes yield between the two tranches based off of a modular yield sharing strategy defined in a plug-in contract\n\nThe first deployment of G^2 consists of a single asset vault (3Crv) which allows the protocol to support major stablecoins (DAI/USDC/USDT) without taking on pricing risk between the asset in different parts of the system. \nThe 4626 compatible token of this vault (G3Crv) will be wrapped in the tranche, which will implement a fixed yield distribution strategy for the Senior tranche. The GTranche is designed to be able to support multiple 4626 tokens, and is supported by a plug in generalized Relation Module contract, which allows the tranche to define a relationship between the underlying 4626 compatible tokens, enabling users to withdraw any token independent of which one they deposited.\n\nFor more information about Gro, please visit [https://gro.xyz/](https://www.gro.xyz/).\nFor more technical documentation, please visit [https://docs.gro.xyz/](https://docs.gro.xyz/)   \n\nThis bug bounty program is focused on their smart contracts, and is focused on preventing the following impacts:\n\n  - Thefts and/or freezing of principal funds in protocol of any amount\n  - Thefts and/or freezing of unclaimed yield of any amount\n  - Temporary freezing of funds for X minutes/hours/days\n  - Smart contract fails to deliver promised returns\n  - Sets of protocol interactions which benefit the person making these interactions at the expense of other users invested in the protocol, or the protocol itself\n  - Protocol and/or oracle interactions which result in unfair allocation of gains to specific users",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical bug reports are capped at 10% of economic damage, primarily taking into consideration the funds at risk, but can also consider other factors such as branding and PR, all fully at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nPayouts are paid out of the DAO treasury and handled by the __Gro__ core contributor team directly. The bounty is denominated in USD, and will wholly or partly be paid in __USDC__. Gro protocol reserves the right to also pay out part of the bounty in its governance token. ",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "For added reference, here are the external dependencies that interact with the Gro protocol:\n\nDAI - [https://etherscan.io/address/0x6B175474E89094C44Da98b954EedeAC495271d0F ](https://etherscan.io/address/0x6B175474E89094C44Da98b954EedeAC495271d0F#code)\n\nUSDC - [https://etherscan.io/address/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48](https://etherscan.io/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48#code) \n\nUSDT - [https://etherscan.io/address/0xdAC17F958D2ee523a2206206994597C13D831ec7](https://etherscan.io/address/0xdAC17F958D2ee523a2206206994597C13D831ec7) \n\nCurve3Pool - [https://etherscan.io/address/0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7](https://etherscan.io/address/0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7) \n\n3Crv - [https://etherscan.io/address/0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490](https://etherscan.io/address/0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490) \n\nFor now, no GitHub repo is publicly available, and so a PoC is not required for any bug report. In the event of a PoC being required for final validation of a bug to clarify disagreements on a bug report’s validity, access will be provided.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "AMM",
          "Lending",
          "Stablecoin",
          "Yield Aggregator"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $15,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"G^2 (GSquared) is an upgraded version of Gro protocol- a stablecoin yield aggregator that tranches risk and yield. The revamped architecture simplifies the protocol by separating out previously interdependent logic into their own module contracts.\"), mdx(\"p\", null, \"Initially the protocol has two risk- and yield-tranched assets: the PWRD stablecoin and the Vault. All deposits are non-custodially allocated to a set of strategies. Depositors into the Vault receive a higher proportion of system yields but also take on extra smart contract and stable coin risk. \"), mdx(\"p\", null, \"Inversely, the PWRD stablecoin receives a smaller portion of the system yield but is protected against these risks.\\nThe protocol comprises of multiple smart contracts and modules, with multiple changes from the previous version of the protocol :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Vault and strategies have been moved out into their own stand alone module, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"the GVault\"), \" is responsible for generating yield on the by deploying the underlying asset into strategies. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The share tokens from the GVault are \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"EIP-4626 compliant\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A set of \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"keeper\"), \" logic contract accompanies the GVault to allow for decentralized harvests and interactions with the vaults strategies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Decentralized \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"stop loss logic\"), \" has been implemented to automatic realization of losses in the vaults strategies\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The tranching logic has also been seperated out into its own stand alone module, the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"GTranche\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The tranche acts as a wrapper for 4626 compatible tokens\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The GTranche then distributes yield between the two tranches based off of a modular yield sharing strategy defined in a plug-in contract\")), mdx(\"p\", null, \"The first deployment of G^2 consists of a single asset vault (3Crv) which allows the protocol to support major stablecoins (DAI/USDC/USDT) without taking on pricing risk between the asset in different parts of the system.\\nThe 4626 compatible token of this vault (G3Crv) will be wrapped in the tranche, which will implement a fixed yield distribution strategy for the Senior tranche. The GTranche is designed to be able to support multiple 4626 tokens, and is supported by a plug in generalized Relation Module contract, which allows the tranche to define a relationship between the underlying 4626 compatible tokens, enabling users to withdraw any token independent of which one they deposited.\"), mdx(\"p\", null, \"For more information about Gro, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.gro.xyz/\"\n  }, \"https://gro.xyz/\"), \".\\nFor more technical documentation, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.gro.xyz/\"\n  }, \"https://docs.gro.xyz/\"), \"   \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts, and is focused on preventing the following impacts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and/or freezing of principal funds in protocol of any amount\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and/or freezing of unclaimed yield of any amount\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for X minutes/hours/days\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sets of protocol interactions which benefit the person making these interactions at the expense of other users invested in the protocol, or the protocol itself\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protocol and/or oracle interactions which result in unfair allocation of gains to specific users\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>G^2 (GSquared) is an upgraded version of Gro protocol- a stablecoin yield aggregator that tranches risk and yield. The revamped architecture simplifies the protocol by separating out previously interdependent logic into their own module contracts.</p><p>Initially the protocol has two risk- and yield-tranched assets: the PWRD stablecoin and the Vault. All deposits are non-custodially allocated to a set of strategies. Depositors into the Vault receive a higher proportion of system yields but also take on extra smart contract and stable coin risk. </p><p>Inversely, the PWRD stablecoin receives a smaller portion of the system yield but is protected against these risks.\nThe protocol comprises of multiple smart contracts and modules, with multiple changes from the previous version of the protocol :</p><ul><li>The Vault and strategies have been moved out into their own stand alone module, <strong>the GVault</strong> is responsible for generating yield on the by deploying the underlying asset into strategies. </li><li>The share tokens from the GVault are <strong>EIP-4626 compliant</strong></li><li>A set of <strong>keeper</strong> logic contract accompanies the GVault to allow for decentralized harvests and interactions with the vaults strategies</li><li>Decentralized <strong>stop loss logic</strong> has been implemented to automatic realization of losses in the vaults strategies</li><li>The tranching logic has also been seperated out into its own stand alone module, the <strong>GTranche</strong>.</li><li>The tranche acts as a wrapper for 4626 compatible tokens</li><li>The GTranche then distributes yield between the two tranches based off of a modular yield sharing strategy defined in a plug-in contract</li></ul><p>The first deployment of G^2 consists of a single asset vault (3Crv) which allows the protocol to support major stablecoins (DAI/USDC/USDT) without taking on pricing risk between the asset in different parts of the system.\nThe 4626 compatible token of this vault (G3Crv) will be wrapped in the tranche, which will implement a fixed yield distribution strategy for the Senior tranche. The GTranche is designed to be able to support multiple 4626 tokens, and is supported by a plug in generalized Relation Module contract, which allows the tranche to define a relationship between the underlying 4626 compatible tokens, enabling users to withdraw any token independent of which one they deposited.</p><p>For more information about Gro, please visit <a href=\"https://www.gro.xyz/\">https://gro.xyz/</a>.\nFor more technical documentation, please visit <a href=\"https://docs.gro.xyz/\">https://docs.gro.xyz/</a>   </p><p>This bug bounty program is focused on their smart contracts, and is focused on preventing the following impacts:</p><ul><li>Thefts and/or freezing of principal funds in protocol of any amount</li><li>Thefts and/or freezing of unclaimed yield of any amount</li><li>Temporary freezing of funds for X minutes/hours/days</li><li>Smart contract fails to deliver promised returns</li><li>Sets of protocol interactions which benefit the person making these interactions at the expense of other users invested in the protocol, or the protocol itself</li><li>Protocol and/or oracle interactions which result in unfair allocation of gains to specific users</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain</strong> </p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"Critical bug reports are capped at 10% of economic damage, primarily taking into consideration the funds at risk, but can also consider other factors such as branding and PR, all fully at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \".\"), mdx(\"p\", null, \"Payouts are paid out of the DAO treasury and handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Gro\"), \" core contributor team directly. The bounty is denominated in USD, and will wholly or partly be paid in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \". Gro protocol reserves the right to also pay out part of the bounty in its governance token. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>Critical bug reports are capped at 10% of economic damage, primarily taking into consideration the funds at risk, but can also consider other factors such as branding and PR, all fully at the discretion of the team. However, there is a minimum reward of <strong>USD 50 000</strong>.</p><p>Payouts are paid out of the DAO treasury and handled by the <strong>Gro</strong> core contributor team directly. The bounty is denominated in USD, and will wholly or partly be paid in <strong>USDC</strong>. Gro protocol reserves the right to also pay out part of the bounty in its governance token. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For added reference, here are the external dependencies that interact with the Gro protocol:\"), mdx(\"p\", null, \"DAI - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://etherscan.io/address/0x6B175474E89094C44Da98b954EedeAC495271d0F#code\"\n  }, \"https://etherscan.io/address/0x6B175474E89094C44Da98b954EedeAC495271d0F \")), mdx(\"p\", null, \"USDC - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://etherscan.io/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48#code\"\n  }, \"https://etherscan.io/address/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\"), \" \"), mdx(\"p\", null, \"USDT - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://etherscan.io/address/0xdAC17F958D2ee523a2206206994597C13D831ec7\"\n  }, \"https://etherscan.io/address/0xdAC17F958D2ee523a2206206994597C13D831ec7\"), \" \"), mdx(\"p\", null, \"Curve3Pool - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://etherscan.io/address/0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7\"\n  }, \"https://etherscan.io/address/0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7\"), \" \"), mdx(\"p\", null, \"3Crv - \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://etherscan.io/address/0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\"\n  }, \"https://etherscan.io/address/0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\"), \" \"), mdx(\"p\", null, \"For now, no GitHub repo is publicly available, and so a PoC is not required for any bug report. In the event of a PoC being required for final validation of a bug to clarify disagreements on a bug report\\u2019s validity, access will be provided.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>For added reference, here are the external dependencies that interact with the Gro protocol:</p><p>DAI - <a href=\"https://etherscan.io/address/0x6B175474E89094C44Da98b954EedeAC495271d0F#code\">https://etherscan.io/address/0x6B175474E89094C44Da98b954EedeAC495271d0F </a></p><p>USDC - <a href=\"https://etherscan.io/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48#code\">https://etherscan.io/address/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48</a> </p><p>USDT - <a href=\"https://etherscan.io/address/0xdAC17F958D2ee523a2206206994597C13D831ec7\">https://etherscan.io/address/0xdAC17F958D2ee523a2206206994597C13D831ec7</a> </p><p>Curve3Pool - <a href=\"https://etherscan.io/address/0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7\">https://etherscan.io/address/0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7</a> </p><p>3Crv - <a href=\"https://etherscan.io/address/0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\">https://etherscan.io/address/0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490</a> </p><p>For now, no GitHub repo is publicly available, and so a PoC is not required for any bug report. In the event of a PoC being required for final validation of a bug to clarify disagreements on a bug report’s validity, access will be provided.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
