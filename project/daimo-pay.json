{
  "pageProps": {
    "bounty": {
      "contentfulId": "1dEOTkEoAGVKbbDyDxczIy",
      "id": "daimo-pay",
      "slug": "daimo-pay",
      "project": "Daimo Pay",
      "maxBounty": 20000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4avYmi8dfgxGrc8eQ8iidH/6661fe97bd9cb7951c4bfabe04d63173/of0jlgPc_400x400__1_.png",
      "launchDate": "2025-06-06T07:00:00.000Z",
      "endDate": null,
      "updatedDate": "2025-10-02T09:30:10.628Z",
      "kyc": true,
      "rewards": [
        {
          "id": 36021,
          "assetType": "smart_contract",
          "severity": "critical",
          "rewardModel": "range",
          "maxReward": 20000,
          "minReward": 7500,
          "rewardCalculationPercentage": 10
        },
        {
          "id": 36022,
          "assetType": "smart_contract",
          "severity": "high",
          "rewardModel": "range",
          "maxReward": 7500,
          "minReward": 2500
        },
        {
          "id": 36023,
          "assetType": "smart_contract",
          "severity": "low",
          "rewardModel": "range",
          "maxReward": 2500,
          "minReward": 1000
        }
      ],
      "audits": [
        {
          "id": "3nPjhcJV3W55r64jfGRhmH",
          "url": "https://github.com/user-attachments/files/20544714/NM-0500-Daimo-Pay-final-report.pdf",
          "auditor": "Nethermind",
          "date": "2025-04-25T07:00:00.000Z"
        }
      ],
      "assets": [
        {
          "id": "2vjWhTd4BeqhXuIwLlIM16",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xceA81F222e01d6c60A3a64b10A3F5BC512b2a7C9#code",
          "description": "payIntentAddress",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-06-06T07:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "38inkLYxL3yLjYlrEGeqbM",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xFdd1837483f03f8db66c679bB0bFcb963B5B4D19",
          "description": "daimoPayCctpBridgerAddress",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-06-24T11:30:35.198Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "58i2mJW0iLa3vJImNoeiC",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8E29a76DD752AD84fc92BAAB4Ac2002b3c960EE8",
          "description": "DaimoPay entry point",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-06-06T07:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "5S2uGWMykgWYXPSGPScXSf",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x90349056c9aFbAE6A649cC89Bd9E8e0C919E15eB",
          "description": "daimoPayAxelarBridgerAddress",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-06-24T11:30:35.204Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "6NvziRjjDcfhnFQW0bxt7J",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x05795C2d6dd4e906cd896AbC466Ef276ac82d16b",
          "description": "daimoPayRelayerAddress",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-06-24T11:30:35.123Z",
          "fund": {
            "usdValue": 5555.39,
            "addressesCount": 5
          }
        },
        {
          "id": "7LAt6oIL0xZ9P3HcjD7MkN",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xFa296119a96f5bC8a58f2bB0e299FAD64096A4C8",
          "description": "daimoPayBridgerAddress",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-06-24T11:30:35.135Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "7mWuu5R6nswdddqAfWFHZm",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x08604D2d5fE72FedAD151d5e637181f31dF69E8F",
          "description": "daimoPayCctpV2BridgerAddress",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-06-24T11:30:35.191Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        },
        {
          "id": "T9vPmf98FQAEO1Nlso5sE",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6eBebBb1D5ACF8bE4B4DC1877075fec043e8010a#code",
          "description": "daimoPayExecutorAddress",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-06-06T07:00:00.000Z",
          "fund": {
            "usdValue": 16.23,
            "addressesCount": 1
          }
        },
        {
          "id": "ks4fMgIqqBXwlnrgpc1rq",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9751572B505F244D9feCfcB9712B00974f458872#code",
          "description": "payIntentFactoryAddress",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-06-06T07:00:00.000Z",
          "fund": {
            "usdValue": 0,
            "addressesCount": 1
          }
        }
      ],
      "impacts": [
        {
          "id": 14,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results"
        },
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 17,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds"
        },
        {
          "id": 27,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of funds"
        },
        {
          "id": 34,
          "type": "smart_contract",
          "severity": "low",
          "title": "Contract fails to deliver promised returns, but doesn't lose value"
        }
      ],
      "programOverview": "Daimo Pay is a intent-based system for crypto payments.\n\nIn particular, it supports fast 1:1 transfers from any major stablecoin across chains.\n\nFor an overview, see https://paydocs.daimo.com/how-it-works\n\nTo try it out yourself, see https://pay.daimo.com/demo/tests\n\nThe purpose of this bug bounty is to build confidence in the Daimo Pay intent address contract system.\n\nWe will treat all **contract** issues that result in loss of user funds as critical.\n\nTemporarily frozen funds count only as vulnerabilities only if they occur 1. due to an error in our contracts, or 2. last longer than 'expirationTimestamp' for a given Daimo Pay intent.\n\nThere are a variety of (known, expected) ways that funds can be frozen temporarily due to user error (for example, double-paying the same intent address twice). These are not vulnerabilities.",
      "prioritizedVulnerabilities": "N/A",
      "rewardsBody": "__Rewards by Threat Level__\n\n__Reward Calculation for Critical Level Reports__\n\n- For critical smart contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 20 000.. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 10 000 is to be rewarded in order to incentivize security researchers against withholding a critical bug report.\n\n__Repeatable Attack Limitations__\n\n- If the smart contract where the vulnerability exists can be upgraded or paused, only the initial attack will be considered for a reward.\n- The amount of funds at risk will be calculated with the impact of the first attack being at 100% and then a reduction of 25% from the amount of the first attack for every [300 blocks] the attack needs for subsequent attacks from the first attack, rounded down.\n\n__Reward Calculation for High Level Reports__\n\n- High impacts concerning theft/permanent freezing of unclaimed yield/royalties are rewarded within a range of USD 2500 to USD 7500. with the reward calculated based on 100% of the funds at risk, though capped at the maximum high reward.\n- In the event of temporary freezing, the reward doubles from the full frozen value for every additional expirationTimestamp for a given Daimo Pay intent, that the funds are temporarily frozen, up until a max cap of the high reward.\n\nThe assets in scope for this bounty are specifically our Daimo Pay smart contracts.\n\nNot in scope:\n* Web app/SDK/JS issues. We are listing the test page (htts://pay.daimo.com/demo/tests) only as an aid for researchers to test and understand our contracts more quickly, not because we are looking for bugs in the test page itself.\n\nSpecial case:\n* 'DaimoPayRelayer'. This is an untrusted contract. Any issues that result in loss of *user* funds will be treated as critical, while issues resulting in loss of our own *company* funds in DaimoPayRelayer will be treated has high severity but not critical.",
      "outOfScopeAndRules": null,
      "assetsBodyV2": "*Important notes for hackers:*\n\n### Assume a smart relayer\n\nAs in all intent-based protocols, the relayer must validate intents before solving. \"If you fast-finish a malformed intent, you might not get paid back\" is not a bug but as-designed.\n\nOur intents are designed such that `bridgeTokenOutOptions` are meant to be interchangeable alternatives, such as (100 USDC, 100 USDT). Meanwhile, `finalTokenOut` should also be a roughly equal value, say (100 DAI). They are primarily built to be used with stablecoins.\n\nIf an attacker creates an intent address with `finalTokenOut` of $100, but (at least one of) `bridgeTokenOutOptions` is worth less than that, then no solver will fast-finish such an intent, because they are not guaranteed full repayment. This is not a bug.\n\n### Assume valid usage\n\nThe intent protocol ensures, first and foremost, that a user who creates an Intent Address and sends funds to it will either A. see their intent completed, or B. received a full refund. It cannot guarantee that misuse will not result in loss of funds.\n\nIn particular, *overpaying* an intent can result in loss. If Alice makes an ntent address to send $100 to Bob on Base, but then she sends $150 to it on Arbitrum, a solver can complete the intent and keep the extra $50. This is analagous to setting a too-high slippage tolerance in Uniswap, or a too-high tip in other intent protocols. It is known behavior, not a bug.\n\n\n### Focus on loss of funds\n\nThe scenarios we're particularly interested in are ones where:\n- **A user uses the system as intended, but loses funds.** These are Critical, see Rewards.\n- **A well-implemented relayer does everything right, but still loses funds.** These are High, see Rewards.\n- **A malicious relayer can temporarily freeze or otherwise grief users, or vice versa.**",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Required",
          "PoC Required",
          "PoC Not Required"
        ],
        "productType": [],
        "projectType": [
          "Infrastructure"
        ],
        "ecosystem": [
          "ETH",
          "Arbitrum",
          "Base",
          "Polygon",
          "Linea",
          "Optimism"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [],
        "web_rewards": []
      },
      "websiteUrl": "https://pay.daimo.com",
      "description": "Daimo Pay is a intent-based system for crypto payments. In particular, it supports fast 1:1 transfers from any major stablecoin across chains.",
      "githubUrl": "https://github.com/daimo-eth/pay",
      "feasibilityLimitations": null,
      "prohibitedActivites": null,
      "responsiblePublicationCategory": null,
      "knownIssues": [],
      "knownIssueAssurance": true,
      "defaultOutOfScopeBlockchain": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": "- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n  - This does not exclude reflected HTML injection with or without JavaScript\n  - This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass)\n- SPF/DMARC misconfigured records)\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering",
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": null,
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Arbitrum",
      "rewardsToken": "USDC",
      "eligibilityCriteria": [
        "no_ofac_sdn",
        "no_official_contributor",
        "no_employee",
        "no_auditor"
      ],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [
        {
          "id": 371,
          "title": "Daimo Pay",
          "description": "Intent address contract system",
          "url": "https://github.com/daimo-eth/pay/tree/master/packages/contract"
        }
      ],
      "programDocumentations": [
        {
          "id": 250,
          "title": "Daimo Pay",
          "description": "Documentation",
          "url": "https://paydocs.daimo.com/"
        }
      ],
      "primacy": "primacy_of_impact",
      "newProgramRewardsEnabled": true,
      "findingsUrl": null,
      "premiumTriaging": true
    },
    "project": {
      "features": [
        "Managed Triage: Time Saver",
        "Subscription Plan: Essential"
      ],
      "premiumTriaging": true,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "Daimo Pay Bug Bounties",
      "description": "Find bugs and vulnerabilities on Daimo Pay and get paid up to $20,000.",
      "url": "https://immunefi.com/bug-bounty/daimo-pay/",
      "ogImg": "/api/bounty/og-image/?project=Daimo+Pay&slug=daimo-pay"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
