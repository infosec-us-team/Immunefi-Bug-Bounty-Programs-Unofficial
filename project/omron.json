{
  "pageProps": {
    "bounty": {
      "contentfulId": "Hhs3WaasggkNCR2kVtjOT",
      "id": "omron",
      "slug": "omron",
      "project": "Omron",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2pTpT9c23a8EsYWlTP0HHD/aac2962a431a6d01b66dff78ccbf2e46/Inference_Labs.png",
      "launchDate": "2024-09-30T19:44:15.000Z",
      "endDate": null,
      "updatedDate": "2025-01-17T15:03:41.060Z",
      "kyc": true,
      "rewards": [
        {
          "id": 10714,
          "assetType": "smart_contract",
          "severity": "critical",
          "rewardModel": "range",
          "maxReward": 100000,
          "minReward": 50000,
          "rewardCalculationPercentage": 10
        },
        {
          "id": 10715,
          "assetType": "smart_contract",
          "severity": "high",
          "rewardModel": "range",
          "maxReward": 50000,
          "minReward": 25000
        },
        {
          "id": 10716,
          "assetType": "smart_contract",
          "severity": "medium",
          "rewardModel": "fixed",
          "fixedReward": 10000
        },
        {
          "id": 10717,
          "assetType": "smart_contract",
          "severity": "low",
          "rewardModel": "fixed",
          "fixedReward": 1000
        },
        {
          "id": 10718,
          "assetType": "websites_and_applications",
          "severity": "critical",
          "rewardModel": "range",
          "maxReward": 15000,
          "minReward": 11000,
          "otherImpactMaxReward": 0
        },
        {
          "id": 10719,
          "assetType": "websites_and_applications",
          "severity": "high",
          "rewardModel": "fixed",
          "fixedReward": 10000
        },
        {
          "id": 10720,
          "assetType": "websites_and_applications",
          "severity": "medium",
          "rewardModel": "fixed",
          "fixedReward": 3000
        },
        {
          "id": 10721,
          "assetType": "websites_and_applications",
          "severity": "low",
          "rewardModel": "fixed",
          "fixedReward": 1000
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "1nTlvwoIf5z9lzA2LDK6Gz",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6d17208f4371437b03d6cd599fcdc1338babc1dc#code",
          "description": "Omron Deposit",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-09-30T19:44:15.000Z"
        },
        {
          "id": "AqsjXrN65YCbVrfxb5ubX",
          "type": "websites_and_applications",
          "url": "https://omron.ai",
          "description": "Omron",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-09-30T19:44:15.000Z"
        },
        {
          "id": "6Ar5UTUw636jX4qLF0uJdh",
          "type": "websites_and_applications",
          "url": "https://github.com/inference-labs-inc/omron-subnet",
          "description": "Omron Subnet",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-09-30T19:44:15.000Z"
        }
      ],
      "impacts": [
        {
          "id": 34,
          "type": "smart_contract",
          "severity": "low",
          "title": "Contract fails to deliver promised returns, but doesn't lose value"
        },
        {
          "id": 5152,
          "type": "websites_and_applications",
          "severity": "low",
          "title": "Changing details of users (including modifying browser local storage) without already-connected wallet interaction and with significant user interaction, such as:  Iframing leading to modifying the backend/browser state (must demonstrate impact with PoC)"
        },
        {
          "id": 5153,
          "type": "websites_and_applications",
          "severity": "low",
          "title": "Taking over broken or expired outgoing links, such as:  Social media handles, etc."
        },
        {
          "id": 5154,
          "type": "websites_and_applications",
          "severity": "low",
          "title": "Temporarily disabling user to access target site, such as:  Locking up the victim from login Cookie bombing, etc."
        },
        {
          "id": 23,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed yield"
        },
        {
          "id": 24,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed royalties"
        },
        {
          "id": 25,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed yield"
        },
        {
          "id": 26,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed royalties"
        },
        {
          "id": 5155,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of funds for at least 24 hours"
        },
        {
          "id": 5156,
          "type": "websites_and_applications",
          "severity": "high",
          "title": "Injecting/modifying the static content on the target application without JavaScript (persistent), such as:  HTML injection without JavaScript Replacing existing text with arbitrary text Arbitrary file uploads, etc"
        },
        {
          "id": 5157,
          "type": "websites_and_applications",
          "severity": "high",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as:  Email Password of the victim etc."
        },
        {
          "id": 5158,
          "type": "websites_and_applications",
          "severity": "high",
          "title": "Improperly disclosing confidential user information, such as:  Email address Phone number Physical address, etc."
        },
        {
          "id": 49,
          "type": "websites_and_applications",
          "severity": "high",
          "title": "Subdomain takeover without already-connected wallet interaction"
        },
        {
          "id": 29,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Smart contract unable to operate due to lack of token funds"
        },
        {
          "id": 30,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Block stuffing"
        },
        {
          "id": 31,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)"
        },
        {
          "id": 32,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Theft of gas"
        },
        {
          "id": 33,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Unbounded gas consumption"
        },
        {
          "id": 5159,
          "type": "websites_and_applications",
          "severity": "medium",
          "title": "Changing non-sensitive details of users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as:  Changing the first/last name of user Enabling/disabling notifications"
        },
        {
          "id": 5160,
          "type": "websites_and_applications",
          "severity": "medium",
          "title": "Injecting/modifying the static content on the target application without JavaScript (reflected), such as:  Reflected HTML injection Loading external site data"
        },
        {
          "id": 52,
          "type": "websites_and_applications",
          "severity": "medium",
          "title": "Redirecting users to malicious websites (open redirect)"
        },
        {
          "id": 14,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results"
        },
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 17,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds"
        },
        {
          "id": 22,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Protocol insolvency"
        },
        {
          "id": 5161,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Theft of funds via Generating a false ZK proof that the verify algorithm deems as correct (breaking protocol soundness)"
        },
        {
          "id": 35,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Execute arbitrary system commands"
        },
        {
          "id": 5162,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Retrieve sensitive data/files from a running server, such as:   /etc/shadow database passwords blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)"
        },
        {
          "id": 37,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Taking down the application/website"
        },
        {
          "id": 5163,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as:   Changing registration information Commenting Voting Making trades Withdrawals, etc."
        },
        {
          "id": 41,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Subdomain takeover with already-connected wallet interaction"
        },
        {
          "id": 42,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Direct theft of user funds"
        },
        {
          "id": 5164,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Malicious interactions with an already-connected wallet, such as:  Modifying transaction arguments or parameters Substituting contract addresses Submitting malicious transactions"
        },
        {
          "id": 45,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Injection of malicious HTML or XSS through metadata"
        },
        {
          "id": 5165,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Generating a false ZK proof that the verify algorithm deems as correct (breaking protocol soundness)"
        }
      ],
      "programOverview": "Omron, the next stage in cryptographically verified efficient and intelligent networks. By leveraging incentive design, Omron optimizes the generation of zero knowledge and verified compute across verticals such as zkML, zkRollups, training, model distillation and much more.\n\nOmron serves as a dynamic hub, connecting users to specialized services within Bittensor subnets. Enabling access to diverse offerings like data, computational tasks,  and complex analyses, while Omron ensures the origins of AI outputs are cryptographically verified through zero-knowledge proofs with Proof-of-Inference.\n\nOmron’s computational integrity is reinforced through the use of a Proof-of-Inference mechanism. A protocol which leverages Zero-Knowledge Proofs to verify proper computation of AI models and their resulting inference. Providing not only peace of mind and protection from malicious or malfunctioning AI, but also providing the ability for external networks, smart contracts, and AI Agents to automatically accept output results at face value due to this improved security, adding a new level of efficiency.\n\nFor more information about Omron, please visit [https://omron.ai/](https://omron.ai/)\n\n**Inference Labs** provides rewards in **USDC** or **USDT** on **Ethereum**, denominated in **USD**. Inference Labs shall have full access and control over its Immunefi vault (the \"Vault\"), in which Inference Labs will deposit **USDC** and/or **USDT** to pay rewards, and the assets in the Vault (the “Assets”). For the avoidance of doubt, Inference Labs shall have full discretion to withdraw the Assets from the Vault at any time. \n\nFor more details about the payment process, please view the __Rewards by Threat Level__ section.\n\n__KYC Requirement__\n\nInference Labs will be requesting KYC information in order to pay for successful bug submissions. The following information will be required:\n\n- Full name \n- Date of birth\n- Proof of address (either a redacted bank statement with address or a recent utility bill) within the past three (3) months)\n- Copy of Passport or other Government issued identification document\n- Eligibility Criteria \n\n__Primacy of Impact vs Primacy of Rules__\n\nInference Labs adheres to the Primacy of Rules, which means that the whole bug bounty program is run strictly under the terms and conditions stated within this page. \n\n__Proof of Concept (PoC) Requirements__\n\nA PoC, demonstrating the bug's impact, is required for this program and has to comply with the [Immunefi PoC Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules).\n\n__Known Issue Assurance__\n\nInference Labs commits to providing Known Issue Assurance to bug submissions through their program. This means that Inference Labs will either disclose known issues publicly, or at the very least, privately via a self-reported bug submission. \n\nIn a potential scenario of a mediation, this allows for a more objective and streamlined process, in order to prove that an issue is known. Otherwise, assuming the bug report is valid, it would result in the report being considered as in-scope, and due a reward.\n\n__Previous Audits__\n\nInference Labs’ completed audit reports can be found at [https://github.com/inference-labs-inc/omron-contracts/blob/main/audits/Zellic.pdf](https://github.com/inference-labs-inc/omron-contracts/blob/main/audits/Zellic.pdf) and [https://github.com/inference-labs-inc/omron-contracts/blob/main/audits/Testmachine.pdf](https://github.com/inference-labs-inc/omron-contracts/blob/main/audits/Testmachine.pdf). Any unfixed vulnerabilities  mentioned in these reports are not eligible for a reward.\n\n\n__Immunefi Standard Badge__\n\nBy adhering to Immunefi’s best practice recommendations, Inference Labs has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209).",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within the Program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.3](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/). \n\n__Reward Calculation for Critical Level Reports__\n\nFor critical smart contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 100 000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 50 000 is to be rewarded in order to incentivize security researchers against withholding a critical bug report.\n\n__Repeatable Attack Limitations__\n\n- If the smart contract where the vulnerability exists can be upgraded or paused, only the initial attack will be considered for a reward. This is because the Project can mitigate the risk of further exploitation by upgrading or pausing the component where the vulnerability exists. The reward amount will depend on the severity of the impact and the funds at risk. \n\n- For critical repeatable attacks on smart contracts that cannot be upgraded or paused, the Project will consider the cumulative impact of the repeatable attacks for a reward. This is because the Project cannot prevent the attacker from repeatedly exploiting the vulnerability until all funds are drained and/or other irreversible damage is done. Therefore, this warrants a reward equivalent to 10% of funds at risk, capped at the maximum critical reward. \n\n__Reward Calculation for High Level Reports__\n\n- High vulnerabilities concerning theft/permanent freezing of unclaimed yield/royalties are rewarded within a range of USD 25 000 to USD 50 000 depending on the funds at risk, capped at the maximum high reward.  \n\n- In the event of temporary freezing, the reward doubles from the full frozen value for every additional [24h] that the funds are temporarily frozen, up until a maximum cap of the high reward. This is because as the duration of the freezing lengthens, the potential for greater damage and subsequent reputational harm intensifies. Thus, by increasing the reward proportionally with the frozen duration, the Project ensures stronger incentives for bug disclosure of this nature.\n\nFor critical web/apps bug reports will be rewarded with USD 15 000, only if the impact leads to:\n\n- A loss of funds involving an attack that does not require any user action\n- Private key or private key generation leakage leading to unauthorized access to user funds \n\nAll other impacts that would be classified as Critical would be rewarded a flat amount of __USD 11 000__. The rest of the severity levels are paid out according to the __Impact in Scope__ table.  \n\n__Reward Payment Terms__\n\nThe Inference Labs team shall handle payment of the rewards. Rewards will be denominated in USD, but will be paid in USDC or USDT on Ethereum. The Inference Labs team shall have full discretion over the payment date and payment method in respect of the rewards.",
      "outOfScopeAndRules": ".",
      "assetsBodyV2": "Omron’s codebase can be found at [https://github.com/inference-labs-inc/omron-contracts](https://github.com/inference-labs-inc/omron-contracts), [https://github.com/inference-labs-inc/omron-subnet](https://github.com/inference-labs-inc/omron-subnet), and [https://github.com/inference-labs-inc/omron-web](https://github.com/inference-labs-inc/omron-web). \n\nDocumentation and further resources can be found on [https://docs.omron.ai](https://docs.omron.ai)",
      "impactsBody": "Only the following impacts are accepted within the Program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Required",
          "PoC Required"
        ],
        "productType": [
          "Zero-Knowledge Proofs"
        ],
        "projectType": [
          "Infrastructure"
        ],
        "ecosystem": [],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 - USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000 - USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $10,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $11,000 - USD $15,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $3,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ]
      },
      "websiteUrl": null,
      "description": null,
      "githubUrl": null,
      "feasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)\n",
      "prohibitedActivites": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)\n",
      "responsiblePublicationCategory": "category_3",
      "knownIssues": [],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": "- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n  - This does not exclude reflected HTML injection with or without JavaScript\n  - This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass)\n- SPF/DMARC misconfigured records)\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering",
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": null,
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum",
      "rewardsToken": "USDC or USDT",
      "eligibilityCriteria": [
        "no_ofac_sdn",
        "no_official_contributor",
        "no_employee",
        "no_auditor"
      ],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [
        {
          "id": 25,
          "title": "Omron Codebase",
          "description": "Github Codebase",
          "url": "https://github.com/inference-labs-inc/omron-contracts"
        },
        {
          "id": 26,
          "title": "Omron Codebase",
          "description": "Github Codebase",
          "url": "https://github.com/inference-labs-inc/omron-subnet"
        },
        {
          "id": 27,
          "title": "Omron Codebase",
          "description": "Github Codebase",
          "url": "https://github.com/inference-labs-inc/omron-web"
        }
      ],
      "programDocumentations": [
        {
          "id": 19,
          "title": "Omron Documentation",
          "description": "Program Documentation",
          "url": "https://docs.omron.ai"
        }
      ],
      "primacy": "primacy_of_rules",
      "newProgramRewardsEnabled": true,
      "findingsUrl": null,
      "premiumTriaging": false
    },
    "project": {
      "premiumTriaging": false,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "Omron Bug Bounties",
      "description": "Find bugs and vulnerabilities on Omron and get paid up to $100,000.",
      "url": "https://immunefi.com/bug-bounty/omron",
      "ogImg": "/api/bounty/og-image?project=Omron"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
