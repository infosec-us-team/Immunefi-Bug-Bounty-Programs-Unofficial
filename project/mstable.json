{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "mstable",
      "slug": "mstable",
      "project": "mStable",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5zGBNlrn3GHvP0W95NtegC/8508af4abc6a4017303d95e6264ba9ee/mstable-logo.png",
      "launchDate": "2021-01-06T00:00-07:00",
      "updatedDate": "2023-03-08T17:58:09.820Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $8,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $4,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,250",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "5fGXvXSyMn133lAghYmdIt",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8f2326316eC696F6d023E37A9931c2b2C177a3D7",
          "description": "StakedTokenMTA: Vault that stakes MTA"
        },
        {
          "id": "6rjFgD0znIDpWvMETbyPBt",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xeFbe22085D9f29863Cfb77EEd16d3cC0D927b011",
          "description": "StakedTokenBPT: Vault that stakes the MTA/ETH 80/20 Balancer Pool Token (BPT)."
        },
        {
          "id": "1Pf2Q481rsD1J6g8YSVoTe",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe2f2a5C287993345a840Db3B0845fbC70f5935a5",
          "description": "Masset: mUSD"
        },
        {
          "id": "6eakzZ8Sf7e6jKJf2KJFAF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x30647a72dc82d7fbb1123ea74716ab8a317eac19",
          "description": "SavingsContract: mUSD Savings Contract"
        },
        {
          "id": "1dEYVqJQqX7sxojhDJ92tU",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x945Facb997494CC2570096c74b5F66A3507330a1",
          "description": "Masset: mBTC"
        },
        {
          "id": "5WJPe06qJHFeCSQ8CwBcv9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x17d8CBB6Bce8cEE970a4027d1198F6700A7a6c24",
          "description": "SavingsContract: imBTC"
        },
        {
          "id": "6gCb3sYa8ecfdgi6zl7IYs",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1E91F826fa8aA4fa4D3F595898AF3A64dd188848",
          "description": "MassetManager: Manager contract for mAssets"
        },
        {
          "id": "5XblKv43s7CnMYhFltTlCG",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xBC3B550E0349D74bF5148D86114A48C3B4Aa856F",
          "description": "SavingsManager: Validates and distributes system revenue to savers"
        },
        {
          "id": "5UXQUE93gTaUvGBUpf3gTs",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xca480d596e6717c95a62a4dc1bd4fbd7b7e7d705",
          "description": "InvariantValidator: Builds on and enforces the StableSwap invariant"
        },
        {
          "id": "3dHDXQS36iNhynW6EiHXwf",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x78BefCa7de27d07DC6e71da295Cc2946681A6c7B",
          "description": "BoostedSavingsVault: Savings Vault"
        },
        {
          "id": "5FFbFMbUgNqOzCf5v5Y5Z4",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xC643B9D66C68d06EA844251a441A0a1211E60656",
          "description": "Unliquidator"
        },
        {
          "id": "tFD3oVkj3m86fIOG1bwo8",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x861f12764780896FD783eA615Dd55Df0FF865752",
          "description": "QuestManager: Quest Manager that can add, complete and expire quests"
        },
        {
          "id": "2f1AXTqfsBKrexlmIKwsJw",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1f2d51eadf24BfcC6Eeb8318D0408dFD9Fbd05d9",
          "description": "SaveWrapper: Facilitates minting, deposits and staking of massets (mUSD and mBTC)"
        },
        {
          "id": "axVfcRIVUbi51Gf1GztIx",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc1443Cb9ce81915fB914C270d74B0D57D1c87be0",
          "description": "Unwrapper: Facilitates direct withdrawals from the Vaults"
        },
        {
          "id": "5GyzctMSXEiYaN057WBtr5",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xBa05FD2f20AE15B0D3f20DDc6870FeCa6ACd3592",
          "description": "BoostDirector: Supports the directing of staked Meta (vMTA) balances to boosted vaults."
        },
        {
          "id": "Ea39gU0JKSxZTWLx7W8Zc",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xafce80b19a8ce13dec0739a1aab7a028d6845eb3",
          "description": "Nexus: Resolves module addresses"
        },
        {
          "id": "5hjDhu6OGkiMCPvICH2Eow",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x04dfDfa471b79cc9E6E8C355e6C71F8eC4916C50",
          "description": "RewardsDistributor: Distributes MTA rewards to vaults"
        },
        {
          "id": "5MlFOEz9FLDiOK9pbnTBOP",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5C8eb57b44C1c6391fC7a8A0cf44d26896f92386",
          "description": "DelayedProxyAdmin: Administors proxy contracts with a one week time delay"
        },
        {
          "id": "19Zpg85sd6D36pjI6UvVl3",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3517F5a251d56C768789c22E989FAa7d906b5a13",
          "description": "InstantProxyAdmin: Administors proxy contracts with no time delay"
        },
        {
          "id": "6OcyUn4BSJgEjPkfzpGJ5I",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xC973413fe4944682910b97b261456EB9633A4756",
          "description": "SignatureVerifier: Used to verify quest completions signatures"
        },
        {
          "id": "7Dc8PAnKBmn7P3EHBRHTuR",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xA2a3CAe63476891AB2d640d9a5A800755Ee79d6E",
          "description": "PAaveIntegration: mUSD Aave V2 integration"
        },
        {
          "id": "6ypNHfTCwqkMvJPikukYBN",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD55684f4369040C12262949Ff78299f2BC9dB735",
          "description": "CompoundIntegration: mUSD Compound Integration"
        },
        {
          "id": "6BLlYn7te0dQqvq0gVeXg3",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xF38522f63f40f9Dd81aBAfD2B8EFc2EC958a3016",
          "description": "BoostedSavingsVault: imBTC Vault"
        },
        {
          "id": "3BWGmmMdNFnU20PZyd98sg",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xE840B73E5287865EEc17d250bFb1536704B43B21",
          "description": "Masset: mUSD"
        },
        {
          "id": "7aTP5QtBO2hsFxus1hJMaR",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xB9E0408bE53a91A31828b3A175230f0dCd8c117e",
          "description": "MassetManager: Library contract for mUSD"
        },
        {
          "id": "6L2dLDDTJHQ3e6VeU73hqT",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xB9cCA2B53e8D7bC4cBDDCcb66d20B411B87d213f",
          "description": "MassetLogic: Library contract for mUSD"
        },
        {
          "id": "3iPL0cx7ZIh27UKbtIjG6z",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x5290Ad3d83476CA6A2b178Cd9727eE1EF72432af",
          "description": "SavingsContract: imUSD"
        },
        {
          "id": "29iCNlzmdh72i1cEx1681z",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x10bFcCae079f31c451033798a4Fd9D2c33Ea5487",
          "description": "SavingsManager: Validates and distributes system revenue to savers"
        },
        {
          "id": "1kW9GMDK0Oi00TjxDEr7WN",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x32aBa856Dc5fFd5A56Bcd182b13380e5C855aa29",
          "description": "Masset: imUSD Vault"
        },
        {
          "id": "4tdAo3ucm9RwsngwYEGhxW",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xCb6E4B67f2cac15c284AB49B6a4A671cdfe66711",
          "description": "DelayedProxyAdmin: Time delayed proxy admin"
        },
        {
          "id": "69evpd3lIZVbA6Lofw8ALK",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xeab7831c96876433dB9B8953B4e7e8f66c3125c3",
          "description": "PAaveIntegration: Aave integration contract"
        },
        {
          "id": "31oSaI0818LjjHQPjhcXFJ",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x299081f52738A4204C3D58264ff44f6F333C6c88",
          "description": "SaveWrapper: Facilitates minting, deposits and staking of massets (mUSD and mBTC)"
        },
        {
          "id": "7AIRORJZ9SngFUBwasZJnt",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xD1ABf1422e623814F10eAc13148a0A68B054E0e4",
          "description": null
        },
        {
          "id": "5Gm4QzrZVP1tI60ZB6EaaA",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x3C6fbB8cbfCB75ecEC5128e9f73307f2cB33f2f6",
          "description": "Nexus: Resolves module addresses"
        },
        {
          "id": "UPmjP9UAVEyabxDLmic6m",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x3e9d19ee1893B07e22165C54c205702C90C70847",
          "description": "RewardsDistributor: Distributes MTA rewards to vaults"
        },
        {
          "id": "2RdHOmHmuGARyezKtDAZ39",
          "type": "smart_contract",
          "url": "https://github.com/mstable/mStable-contracts/blob/master/contracts/emissions/BasicRewardsForwarder.sol",
          "description": "Basic Rewards Forwarder"
        },
        {
          "id": "1RpTOTh5yBTyoBQEomys8I",
          "type": "smart_contract",
          "url": "https://github.com/mstable/mStable-contracts/blob/master/contracts/emissions/BridgeForwarder.sol",
          "description": "Bridge Forwarder"
        },
        {
          "id": "54pUbIBjk81put0oLIuOOs",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xBa69e6FC7Df49a3b75b565068Fb91ff2d9d91780",
          "description": "Emissions Controller"
        },
        {
          "id": "2sxUTw2uCm6KltvlSGCE22",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xd3778a18ee00a6368a0e5d545cb3412886e5a04c",
          "description": "L2 Bridge Recipient"
        },
        {
          "id": "3JmPv3J1qjS0v8Ios98HKu",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x82182Ac492fef111FB458FCe8f4228553Ed59a19",
          "description": "L2 Emissions Controller"
        },
        {
          "id": "4G0dxXVlxRZfnyTjgu4Gj7",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xB305372B12Fd5d736EcB6BF903eaA844f2a23112",
          "description": "CowSwapDex"
        },
        {
          "id": "3dZKrA6s3J0cG4sICXDfrE",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x56c358d4E8f9b678fc24a8Cc4aA02c02A1393fAD",
          "description": "Liquidator Impl"
        },
        {
          "id": "3DgNulJtiZp2eEk6SD0hLR",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD298291059aed77686037aEfFCf497A321A4569e",
          "description": "Liquidator Proxy"
        },
        {
          "id": "6g17ajKyOcPk79qVbFxCPe",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5de8865522A61FC9bf2A3ca1A7D196A42863Ea56",
          "description": "Curve3CrvMetapoolCalculatorLibrary"
        },
        {
          "id": "29VoheRkkYCCF9iBpz63AG",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3206bf36B1e1764B4C40c5A51A8E237DC4cB10a9",
          "description": "Curve3CrvFactoryMetapoolCalculatorLibrary"
        },
        {
          "id": "7b8fZOxP6Tfz28rvpZ9Ecj",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x092C1b41163c85054F008A486BA72347B919aFa7",
          "description": "Curve3CrvCalculatorLibrary"
        },
        {
          "id": "4Uru4Pn54DPFqHOuUiFcMI",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa79e8e15dfd58cd5a93ed3f00bbbbe303f2a0cd8",
          "description": "mUSD Convex Vault impl"
        },
        {
          "id": "7wgUB4NVmjUpjjwyDzUrda",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xB9B47E72819934d7A5d60Bf08cD2C78072383EBb",
          "description": "mUSD Convex Vault proxy"
        },
        {
          "id": "3Tqbh4LSu4N4c6HSbuUIAA",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6DE3703418A075481c7ce01199B8e8F82C129485",
          "description": "FRAX Convex Vault impl"
        },
        {
          "id": "7tGTvSW4yArwrpnMlIblxh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x98c5910823C2E67d54e4e0C03de44043DbfA7ca8",
          "description": "FRAX Convex Vault proxy"
        },
        {
          "id": "6E7nB0nMWvnyqNiTvTspWL",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xCd619AADd1DD2e423D1f3C725a25296c7a74281a",
          "description": "BUSD Convex Vault impl"
        },
        {
          "id": "1Fsw7SZrbAAQQxX0bgp7hx",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x87Ed92648fAE3b3930577c92c8A247b127ED8949",
          "description": "BUSD Convex Vault proxy"
        },
        {
          "id": "6NPIvZETFlzYTJxOOqgSX5",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x20a96fc12f7ea1ff62304a2fae0c1480fda9aa32",
          "description": "3Crv Meta Vault impl"
        },
        {
          "id": "KSuc1Zcmflu4hTHxF6SEu",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9614a4C61E45575b56c7e0251f63DCDe797d93C5",
          "description": "3Crv Meta Vault proxy"
        },
        {
          "id": "7IdciIDVVszfSQrv921zcM",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6d68F5b8c22A549334ca85960978f9dE4DebA2D3",
          "description": "USDC 3CRV Convex Meta Vault impl"
        },
        {
          "id": "5Ysw8g6LP2s6ldwe1D2D5T",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x455fB969dC06c4Aa77e7db3f0686CC05164436d2",
          "description": "USDC 3CRV Convex Meta Vault proxy"
        }
      ],
      "impacts": [
        {
          "id": "1wg14BOMDZ19I8UNDCQHf3",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "9jCTXWA0HXfuLbt8ZnhLj",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5fFeDZ0QrJhXrQw16gJeuu",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6znnwmGyu9RyTbxs0geXaI",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "HuHjRfC7zFFxerCcRj6Pt",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7sovWfbz7MJACxWNPPZsdY",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "XGN5E6NmkFafY0o3Bm5tg",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "50sta7y2ljsIu2LPiTPjFL",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3sLgix0c7yoBY0GMT5fLMd",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6WZZj0sTVl1SWTjC86j9SR",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4x7ujNkJlFMXxTZ8cra66I",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "MGbNDdQKdbqoXMZy7L2S1",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Released in May 2020, mStable is a protocol that unites stablecoins, lending\nand swapping into one robust and easy to use standard. Three major problems\nconfront stablecoin users: significant fragmentation in same-peg assets; lack\nof native yield when it is being increasingly demanded by users; lack of\ninsurance against permanent capital loss. mStable’s products (SWAP, SAVE and\nEARN) are built specifically to address these pain-points.",
      "prioritizedVulnerabilities": " We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Loss of collateral or unfair payouts in the mStable StakedToken contracts, resulting in a loss of user funds\n  - Loss of collateral or stealing of funds from the mAsset, resulting in it becoming under-collateralized\n  - Unfair payouts through SAVE, MINT, REDEEM or SWAP functionalities that results in under-collateralized or affected system\n  - Manipulating or circumvention of mStable governance mechanism\n  - Locking or freezing or any of the mStable contracts or inability to upgrade\n  - Ineffective or error prone forge validation mechanisms\n\nAdditionally, mStable seeks reports of the following [Immunefi Common Vulnerabilities](https://immunefi.com/common-vulnerabilities/).",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by __mStable__ directly and are denominated in USD. Payouts are made in __mUSD__. ",
      "outOfScopeAndRules": "The following [Immunefi Commonly Excluded Vulnerabilities](https://immunefi.com/common-vulnerabilities-to-exclude/) are excluded from the mStable bug bounty program.\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "Any Proxy contracts listed in the Assets in Scope table also include the currently active logic contracts, and any external or internal libraries that are used in these.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "AMM"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH",
          "Polygon"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $8,000"
          },
          {
            "level": "Medium",
            "payout": "USD $4,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,250"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Released in May 2020, mStable is a protocol that unites stablecoins, lending\\nand swapping into one robust and easy to use standard. Three major problems\\nconfront stablecoin users: significant fragmentation in same-peg assets; lack\\nof native yield when it is being increasingly demanded by users; lack of\\ninsurance against permanent capital loss. mStable\\u2019s products (SWAP, SAVE and\\nEARN) are built specifically to address these pain-points.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Released in May 2020, mStable is a protocol that unites stablecoins, lending\nand swapping into one robust and easy to use standard. Three major problems\nconfront stablecoin users: significant fragmentation in same-peg assets; lack\nof native yield when it is being increasingly demanded by users; lack of\ninsurance against permanent capital loss. mStable’s products (SWAP, SAVE and\nEARN) are built specifically to address these pain-points.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \" We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of collateral or unfair payouts in the mStable StakedToken contracts, resulting in a loss of user funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of collateral or stealing of funds from the mAsset, resulting in it becoming under-collateralized\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unfair payouts through SAVE, MINT, REDEEM or SWAP functionalities that results in under-collateralized or affected system\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Manipulating or circumvention of mStable governance mechanism\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Locking or freezing or any of the mStable contracts or inability to upgrade\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ineffective or error prone forge validation mechanisms\")), mdx(\"p\", null, \"Additionally, mStable seeks reports of the following \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/common-vulnerabilities/\"\n  }, \"Immunefi Common Vulnerabilities\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p> We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><ul><li>Loss of collateral or unfair payouts in the mStable StakedToken contracts, resulting in a loss of user funds</li><li>Loss of collateral or stealing of funds from the mAsset, resulting in it becoming under-collateralized</li><li>Unfair payouts through SAVE, MINT, REDEEM or SWAP functionalities that results in under-collateralized or affected system</li><li>Manipulating or circumvention of mStable governance mechanism</li><li>Locking or freezing or any of the mStable contracts or inability to upgrade</li><li>Ineffective or error prone forge validation mechanisms</li></ul><p>Additionally, mStable seeks reports of the following <a href=\"https://immunefi.com/common-vulnerabilities/\">Immunefi Common Vulnerabilities</a>.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on\\nthe \", mdx(Link, {\n    href: \"/severity-system/\",\n    mdxType: \"Link\"\n  }, \"Immunefi Vulnerability Severity Classification System\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"Payouts are handled by \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"mStable\"), \" directly and are denominated in USD. Payouts are made in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"mUSD\"), \". \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on\nthe <a href=\"/severity-system/\" target=\"_blank\" rel=\"noopener noreferrer\">Immunefi Vulnerability Severity Classification System</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>Payouts are handled by <strong>mStable</strong> directly and are denominated in USD. Payouts are made in <strong>mUSD</strong>. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/common-vulnerabilities-to-exclude/\"\n  }, \"Immunefi Commonly Excluded Vulnerabilities\"), \" are excluded from the mStable bug bounty program.\"), mdx(\"p\", null, \"The following activities are prohibited by bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following <a href=\"https://immunefi.com/common-vulnerabilities-to-exclude/\">Immunefi Commonly Excluded Vulnerabilities</a> are excluded from the mStable bug bounty program.</p><p>The following activities are prohibited by bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Any Proxy contracts listed in the Assets in Scope table also include the currently active logic contracts, and any external or internal libraries that are used in these.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Any Proxy contracts listed in the Assets in Scope table also include the currently active logic contracts, and any external or internal libraries that are used in these.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
