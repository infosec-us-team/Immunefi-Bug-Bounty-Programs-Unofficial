{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "voltprotocol",
      "slug": "voltprotocol",
      "project": "Volt Protocol",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6nNdcEo6UVuvvVzUUEooQi/8e65a68c528fa812ee58f41884b5cf17/Volt_Protocol_Logo_.jpg",
      "launchDate": "2022-05-10T12:00-06:00",
      "updatedDate": "2022-12-02T13:41:18.788Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $2,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4HzMXxj6P6y267UM5jcOia",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x37518BbE48fEaE49ECBD83F7e9C01c1A6b4c2F69",
          "description": "ERC20Allocator"
        },
        {
          "id": "4NOyxQS7nUrHkDEyv4s7re",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x42ea9cC945fca2dfFd0beBb7e9B3022f134d9Bdd",
          "description": "DAI PSM"
        },
        {
          "id": "6HCpJeqhmKVT0dbhEUpUZH",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0b9A7EA2FCA868C93640Dd77cF44df335095F501",
          "description": "USDC PSM"
        },
        {
          "id": "7MbQiinMua1cyUljrwjATk",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe733985a92Bfd5BC676095561BacE90E04606E4a",
          "description": "Oracle Pass Through"
        },
        {
          "id": "1Idpazy4wIy9WRlTMYBhJe",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xB8Ac4931A618B06498966cba3a560B867D8f567F",
          "description": "Volt System Oracle"
        },
        {
          "id": "6qyyMmCdwcufQT4TMUJljb",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xEC7AD284f7Ad256b64c6E69b84Eb0F48f42e8196",
          "description": "Core"
        },
        {
          "id": "6pwvPqe0cZdy9taJXmrVLq",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x559ebc30b0e58a45cc9ff573f77ef1e5eb1b3e18",
          "description": "Volt"
        },
        {
          "id": "1m2ZTTjvGXPy3iu9Or0OWx",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7aB2f4A29048392EfE0B57FD17a3BedBcD0891DC",
          "description": "DAI PCV Deposit"
        },
        {
          "id": "1GLLDolfBn6wKG1ITXxo9B",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xF10d810De7F0Fbd455De30f8c43AbA56F253B73B",
          "description": "USDC PCV Deposit"
        },
        {
          "id": "3swsUptggW2A4QlHE47atS",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x75d078248eE49c585b73E73ab08bb3eaF93383Ae",
          "description": "Timelock Controller"
        },
        {
          "id": "3TIlDhRtANsxDCI5qduKs",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2c2b362e6ae0F080F39b90Cb5657E5550090D6C3",
          "description": "PCV Guardian"
        },
        {
          "id": "ZKooqSG7XZ2634wR08cvt",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x868F58Ae8F6B2Dc31D9ADc97a8A09B16f05E9cd7",
          "description": "PCV Guard Admin"
        },
        {
          "id": "1DNRXKGgwy47DB5xuNuPeO",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x579c400eaca4b1d84956e7bd284d97611f78ba4e",
          "description": "PCV Router"
        }
      ],
      "impacts": [
        {
          "id": "3aRIkHXhV0cK9P9DScXGQu",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7xxjEiTFkSefGsFP3W5UlQ",
          "title": "Direct theft of any user or protocol funds, whether at-rest or in-motion, other than unclaimed yield without privileged role",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4kaJvQ7hntRfWSfcspGlV4",
          "title": "Permanent freezing of funds without privileged role",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6y0zFfHHHxHmxWNqQPx9t0",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1pssyF7zPWBmvusHVsSK9V",
          "title": "Logic errors in the oracle contracts that would cause loss of PCV",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5pJasTyHCQ5er51JNaipjH",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7sfwkUNGi6QGcO7QzUJY1k",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1n5DU7RUcAuwcFhsnmqeXt",
          "title": "Miner-extractable value from PCV (MEV)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2qcpYO4HQsm8j3VsDr5ml1",
          "title": "Temporary freezing of funds for at least 2 days without permissioned role",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "eKhuQ5YMHxioIbcJFfK7K",
          "title": "Unauthorized privilege escalation by user without a role in the system",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5pt5oNqlSiHbPC8QVJPfNd",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "O3prFcMgELW3VABsMMZe7",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6FEatlHCwdFeShO4bDPY9y",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3H9Wh6Ly0lVDiQFfflsEoM",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "1H9nrHncEaOQtXRwm3feoN",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Volt Protocol is a decentralized savings and credit system. Users can mint or redeem the natively yield bearing stablecoin VOLT with no slippage or swap fees, just like depositing into a vault or lending market. VOLT is live on Ethereum mainnet and Arbitrum. Unlike other stablecoins, VOLT holders will have governance rights. The market governance system that will power VOLT as the best on chain savings venue is under active development, read the [whitepaper](https://github.com/volt-protocol/whitepaper) to learn more.\n\nFor more information about Volt Protocol, please visit [https://www.voltprotocol.io/](https://www.voltprotocol.io/).",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\nCritical\n  - Any governance voting result manipulation\n  - Direct theft of any user or protocol funds, whether at-rest or in-motion, other than unclaimed yield without privileged role\n  - Permanent freezing of funds without privileged role\n  - Protocol Insolvency\n  - Logic errors in the oracle contracts that would cause loss of PCV\n\nHigh\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds for at least 2 days without permissioned role\n  - Miner-extractable value from PCV (MEV)\n  - Unauthorized privilege escalation by user without a role in the system\n\nMedium\n  - Smart contract unable to operate due to lack of token funds \n  - Block stuffing for profit\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption\n\nLow\n  - Smart contract fails to deliver promised returns, but doesnâ€™t lose value",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nRewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 50 000__ for Critical smart contract bug reports. \n\nPrevious issues highlighted in the following audit reports are considered to be out of scope: \n  - [https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt%20Protocol%20-%20Zellic%20Audit%20Report.pdf](https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt%20Protocol%20-%20Zellic%20Audit%20Report.pdf) \n  - [https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt_MythX_analysis.pdf](https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt_MythX_analysis.pdf)\n  - [https://docs.google.com/document/d/18OmBsKDtTxgMyuMr9-GpLCiMu-kkOqj69Es1g9-GJ1E/edit?usp=sharing](https://docs.google.com/document/d/18OmBsKDtTxgMyuMr9-GpLCiMu-kkOqj69Es1g9-GJ1E/edit?usp=sharing)\n  - [https://github.com/volt-protocol/volt-protocol-core/tree/develop/audits](https://github.com/volt-protocol/volt-protocol-core/tree/develop/audits)\n\nPayouts are handled by __Volt Protocol__ directly and are denominated in USD. However, payouts are done in __USDC__ or __VOLT__, at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, pcv controller, pcv guard, minter, burner, pcv guard admin, etc)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts \n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Volt Protocol can be found at [https://github.com/volt-protocol/volt-protocol-core](https://github.com/volt-protocol/volt-protocol-core). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Stablecoin"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Volt Protocol is a decentralized savings and credit system. Users can mint or redeem the natively yield bearing stablecoin VOLT with no slippage or swap fees, just like depositing into a vault or lending market. VOLT is live on Ethereum mainnet and Arbitrum. Unlike other stablecoins, VOLT holders will have governance rights. The market governance system that will power VOLT as the best on chain savings venue is under active development, read the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/volt-protocol/whitepaper\"\n  }, \"whitepaper\"), \" to learn more.\"), mdx(\"p\", null, \"For more information about Volt Protocol, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.voltprotocol.io/\"\n  }, \"https://www.voltprotocol.io/\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Volt Protocol is a decentralized savings and credit system. Users can mint or redeem the natively yield bearing stablecoin VOLT with no slippage or swap fees, just like depositing into a vault or lending market. VOLT is live on Ethereum mainnet and Arbitrum. Unlike other stablecoins, VOLT holders will have governance rights. The market governance system that will power VOLT as the best on chain savings venue is under active development, read the <a href=\"https://github.com/volt-protocol/whitepaper\">whitepaper</a> to learn more.</p><p>For more information about Volt Protocol, please visit <a href=\"https://www.voltprotocol.io/\">https://www.voltprotocol.io/</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Impacts in Scope\")), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"p\", null, \"Critical\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any governance voting result manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct theft of any user or protocol funds, whether at-rest or in-motion, other than unclaimed yield without privileged role\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of funds without privileged role\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protocol Insolvency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors in the oracle contracts that would cause loss of PCV\")), mdx(\"p\", null, \"High\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent freezing of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds for at least 2 days without permissioned role\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Miner-extractable value from PCV (MEV)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unauthorized privilege escalation by user without a role in the system\")), mdx(\"p\", null, \"Medium\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract unable to operate due to lack of token funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block stuffing for profit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unbounded gas consumption\")), mdx(\"p\", null, \"Low\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns, but doesn\\u2019t lose value\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p><strong>Impacts in Scope</strong></p><p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p><strong>Smart Contracts</strong></p><p>Critical</p><ul><li>Any governance voting result manipulation</li><li>Direct theft of any user or protocol funds, whether at-rest or in-motion, other than unclaimed yield without privileged role</li><li>Permanent freezing of funds without privileged role</li><li>Protocol Insolvency</li><li>Logic errors in the oracle contracts that would cause loss of PCV</li></ul><p>High</p><ul><li>Theft of unclaimed yield</li><li>Permanent freezing of unclaimed yield</li><li>Temporary freezing of funds for at least 2 days without permissioned role</li><li>Miner-extractable value from PCV (MEV)</li><li>Unauthorized privilege escalation by user without a role in the system</li></ul><p>Medium</p><ul><li>Smart contract unable to operate due to lack of token funds </li><li>Block stuffing for profit</li><li>Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)</li><li>Theft of gas</li><li>Unbounded gas consumption</li></ul><p>Low</p><ul><li>Smart contract fails to deliver promised returns, but doesnâ€™t lose value</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \" for Critical smart contract bug reports. \"), mdx(\"p\", null, \"Previous issues highlighted in the following audit reports are considered to be out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt%20Protocol%20-%20Zellic%20Audit%20Report.pdf\"\n  }, \"https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt%20Protocol%20-%20Zellic%20Audit%20Report.pdf\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt_MythX_analysis.pdf\"\n  }, \"https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt_MythX_analysis.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.google.com/document/d/18OmBsKDtTxgMyuMr9-GpLCiMu-kkOqj69Es1g9-GJ1E/edit?usp=sharing\"\n  }, \"https://docs.google.com/document/d/18OmBsKDtTxgMyuMr9-GpLCiMu-kkOqj69Es1g9-GJ1E/edit?usp=sharing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/volt-protocol/volt-protocol-core/tree/develop/audits\"\n  }, \"https://github.com/volt-protocol/volt-protocol-core/tree/develop/audits\"))), mdx(\"p\", null, \"Payouts are handled by \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Volt Protocol\"), \" directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"VOLT\"), \", at the discretion of the team.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of <strong>USD 50 000</strong> for Critical smart contract bug reports. </p><p>Previous issues highlighted in the following audit reports are considered to be out of scope: </p><ul><li><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt%20Protocol%20-%20Zellic%20Audit%20Report.pdf\">https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt%20Protocol%20-%20Zellic%20Audit%20Report.pdf</a> </li><li><a href=\"https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt_MythX_analysis.pdf\">https://github.com/code-423n4/2022-03-volt/blob/main/audits/Volt_MythX_analysis.pdf</a></li><li><a href=\"https://docs.google.com/document/d/18OmBsKDtTxgMyuMr9-GpLCiMu-kkOqj69Es1g9-GJ1E/edit?usp=sharing\">https://docs.google.com/document/d/18OmBsKDtTxgMyuMr9-GpLCiMu-kkOqj69Es1g9-GJ1E/edit?usp=sharing</a></li><li><a href=\"https://github.com/volt-protocol/volt-protocol-core/tree/develop/audits\">https://github.com/volt-protocol/volt-protocol-core/tree/develop/audits</a></li></ul><p>Payouts are handled by <strong>Volt Protocol</strong> directly and are denominated in USD. However, payouts are done in <strong>USDC</strong> or <strong>VOLT</strong>, at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, pcv controller, pcv guard, minter, burner, pcv guard admin, etc)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, pcv controller, pcv guard, minter, burner, pcv guard admin, etc)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts </li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Volt Protocol can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/volt-protocol/volt-protocol-core\"\n  }, \"https://github.com/volt-protocol/volt-protocol-core\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Volt Protocol can be found at <a href=\"https://github.com/volt-protocol/volt-protocol-core\">https://github.com/volt-protocol/volt-protocol-core</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
