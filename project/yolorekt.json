{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "yolorekt",
      "slug": "yolorekt",
      "project": "YOLOrekt",
      "maxBounty": 5000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6Q87JTSggBwOTDbcPqfl9J/e63e5b8d0c0bf2ec2eb27a74f8a86f16/YOLOrekt_Logo.jpg",
      "launchDate": "2022-07-26T12:00-06:00",
      "updatedDate": "2023-02-06T20:16:42.274Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $2,500",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "6VLwEhw5yKHt8Zubks1pu",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/accessory/WhitelistSFTClaims.sol",
          "description": "accessory/WhitelistSFTClaims"
        },
        {
          "id": "2suLfprUB5fmQy3eANX95v",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/core/CoreCommon.sol",
          "description": "core/CoreCommon"
        },
        {
          "id": "5xQ2QWi5F7qHe8tRZ3SjHJ",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/core/ILiquidityPool.sol",
          "description": "core/ILiquidityPool"
        },
        {
          "id": "1HaMo9vjhUXyETNUamlxdl",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/core/LiquidityPool.sol",
          "description": "core/LiquidityPool"
        },
        {
          "id": "4owfPRcscMiVHHahbtGOky",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/core/NFTTracker.sol",
          "description": "core/NFTTracker"
        },
        {
          "id": "4W3jhKRmgm8ab2h5M303je",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/core/RegistrySatellite.sol",
          "description": "core/RegistrySatellite"
        },
        {
          "id": "1YkbGgqAXGtx3Zk9VsIZfA",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/core/YoloRegistry.sol",
          "description": "core/YoloRegistry"
        },
        {
          "id": "17CegKht5DNQ9C8dSHW0BQ",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/core/YoloWallet.sol",
          "description": "core/YoloWallet"
        },
        {
          "id": "2G0qOQSSB8V5DbRAjPMkPu",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/game/GameFactoryWithNFTPack.sol",
          "description": "game/GameFactoryWithNFTPack"
        },
        {
          "id": "4CCcydq41anXOjMKRxTbRz",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/game/GameInstance.sol",
          "description": "game/GameInstance"
        },
        {
          "id": "1pKK5T67scIbjlf2PyoJAz",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/game/GameInstanceWithNFTPack.sol",
          "description": "game/GameInstanceWithNFTPack"
        },
        {
          "id": "4R6lgW3503vHKZsWwWDrse",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/game/IYoloGame.sol",
          "description": "game/IYoloGame"
        },
        {
          "id": "6fLyo1ROPgk8qXffxIms73",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/game/utils/GameEvents.sol",
          "description": "game/utils/GameEvents"
        },
        {
          "id": "7xdyl8wYnKeMVdXEyM1Jw1",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/game/utils/GameStructs.sol",
          "description": "game/utils/GameStructs"
        },
        {
          "id": "3PpgrG8zgg1h0n2kkQxyNj",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/tokens/StablecoinToken.sol",
          "description": "tokens/StablecoinToken"
        },
        {
          "id": "4cNybaO4hG50X82dJGvTI8",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/tokens/YoloNFTPack.sol",
          "description": "tokens/YoloNFTPack"
        },
        {
          "id": "6QNqyiO7L6rumDRhzUXWTZ",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/tokens/YoloShareTokens.sol",
          "description": "tokens/YoloShareTokens"
        },
        {
          "id": "77t8AROkjDxaLpl3AcAOsw",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/tokens/extensions/ERC1155DynamicURI.sol",
          "description": "tokens/extensions/ERC1155DynamicURI"
        },
        {
          "id": "3pvmlez6F56nHHBsbL6xXR",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/tokens/extensions/ERC1155SemiFungible.sol",
          "description": "tokens/extensions/ERC1155SemiFungible"
        },
        {
          "id": "2gGVqqbz89D155apjSg0S0",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/utils/LogBinary.sol",
          "description": "utils/LogBinary"
        },
        {
          "id": "6nLcBBo3V29aW3bdJNsL0q",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/utils/NumericalMethods.sol",
          "description": "utils/NumericalMethods"
        },
        {
          "id": "2nyDEpiA36hpuNKvwx8f56",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/utils/SplitBitId.sol",
          "description": "utils/SplitBitId"
        },
        {
          "id": "6cWjpSvPQJ7GR1jgZmfI4p",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/utils/constants.sol",
          "description": "utils/constants"
        },
        {
          "id": "1YnkYltYT7x9EjeHvHzt83",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/accessory/BiddersRewards.sol",
          "description": "accessory/BiddersRewards.sol"
        },
        {
          "id": "2K9mV7eEh9C18jM7Yr6SzI",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/accessory/BiddersRewardsFactory.sol",
          "description": "accessory/BiddersRewardsFactory.sol"
        },
        {
          "id": "1eb818Hu26fw8Heoxo6qdn",
          "type": "smart_contract",
          "url": "https://github.com/YOLOrekt/community-bug-bounty/blob/bounty-head/contracts/accessory/StakingRewards.sol",
          "description": "accessory/StakingRewards.sol"
        }
      ],
      "impacts": [
        {
          "id": "4O59sXIkZP5slCppQDmcHo",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7sS185rjmliVB9Polc48oB",
          "title": "Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "59LYgslFXTKMhyyH8GL3ZS",
          "title": "Permanent Denial of Service",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6jeYNlfMUnkw4T7IQa12q8",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7C7zX76KZ0FCMcgxInVy4b",
          "title": "Permanent freezing of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4Px6zap0kRomK1dz26qWim",
          "title": "Unauthorized minting of NFTs or LP tokens",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "HGWdCyidss9ivDGnkFf2G",
          "title": "Predictable or manipulable RNG that results in abuse of the principal or NFT",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5XooinrvEWIoRWNnWq1WEj",
          "title": "Unintended alteration of what the NFT represents (e.g. token URI, payload, artistic content)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3hZFCwfMW4Ju6X8VygiMrv",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "33umIhTz4tM6zqfHAlpqAx",
          "title": "Takeover of access or administrative privileges",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1zGTnv6sQklzCk3tj5d0yg",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1igSa8QzteCOzSBGDF7Ii1",
          "title": "Theft of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "28MT8mN0JaeEwthJS2djH0",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5LTWgpkJGGxZhTPaEfNMIE",
          "title": "Permanent freezing of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "42YGJR0YEzKi5UgVdMmg63",
          "title": "Temporary freezing of funds for at least 1 day",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1zXwLIF3z5lGLQIqch3uIM",
          "title": "Temporary freezing NFTs for at least 7 days",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6oBkPUKTxQchpMFxmjw31",
          "title": "Can corrupt important data, such as user participation tracking",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2wK3Kfn3a3lefoh4TmOmDL",
          "title": "Cause disruptions in the operation of the markets, such as delays in processing of rounds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4dQVudC3Cw1JfykBKwAlHy",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4enCj0O9ci7QhiqvtDd2nD",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2Nz2cqpIIXlRg9EzLWeiLv",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2PuHIYMWvrszfgKpfmfI3K",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2J4fXQvnPaDoo6g0tTijHg",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3s7ktL7OpbgmcANcvu9fdG",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "YOLOrekt is a decentralized short-term prediction market platform built on blockchain. It includes key attributes such as being the most Intuitive, hyper-gamified setup and having Social-Fi elements. \n\nThe platform’s core enabling technology provides the ability to settle markets within seconds on the blockchain. As our first offering, users will be able to predict whether the final price of an asset will end up above or below a strike price by placing bids on the outcome. \n\nThese are ‘Bid Up’ OR ‘Bid Down’ games, allowing the trader to get a result in just a matter of a few candles. Access to both sides of the market is transparent and straightforward with an intuitive user interface to bid in any available market, making options trading as easy as it can get.\n\nFor more information about YOLOrekt, please visit [https://www.yolorekt.finance/](https://www.yolorekt.finance/).",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the  [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll web/app bug reports and all Critical/High severity smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. \n\nIn addition, all bug reports must come with a suggestion for a fix in order to be considered for a reward. \n\nPreviously known issues highlighted in the following audit report are considered out of scope: \n  - [http://audit-report.yolorekt.finance.s3.us-east-1.amazonaws.com/YoloRekt+Smart+Contract+Final+Audit+Report_072022.pdf](http://audit-report.yolorekt.finance.s3.us-east-1.amazonaws.com/YoloRekt+Smart+Contract+Final+Audit+Report_072022.pdf)\n\nPayouts are handled by the __YOLOrekt__ team directly and are denominated in USD. However, payouts are done in __USDC__ or __USDT__, at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Attacks requiring physical access to the victim device\n  - Attacks requiring access to the local network of the victim\n  - Reflected plain text injection ex: url parameters, path, etc.\n    - This does not exclude reflected HTML injection with or without javascript\n    - This does not exclude persistent plain text injection\n  - Self-XSS\n  - Captcha bypass using OCR without impact demonstration\n  - CSRF with no state modifying security impact (ex: logout CSRF)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n  - Server-side non-confidential information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used only to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Feature requests\n  - Issues related to the frontend without concrete impact and PoC\n  - Best practices issues without concrete impact and PoC\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.\n  - Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of YOLOrekt can be found at [https://github.com/YOLOrekt/community-bug-bounty](https://github.com/YOLOrekt/community-bug-bounty). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Polygon"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $5,000"
          },
          {
            "level": "High",
            "payout": "USD $2,500"
          },
          {
            "level": "Medium",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"YOLOrekt is a decentralized short-term prediction market platform built on blockchain. It includes key attributes such as being the most Intuitive, hyper-gamified setup and having Social-Fi elements. \"), mdx(\"p\", null, \"The platform\\u2019s core enabling technology provides the ability to settle markets within seconds on the blockchain. As our first offering, users will be able to predict whether the final price of an asset will end up above or below a strike price by placing bids on the outcome. \"), mdx(\"p\", null, \"These are \\u2018Bid Up\\u2019 OR \\u2018Bid Down\\u2019 games, allowing the trader to get a result in just a matter of a few candles. Access to both sides of the market is transparent and straightforward with an intuitive user interface to bid in any available market, making options trading as easy as it can get.\"), mdx(\"p\", null, \"For more information about YOLOrekt, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.yolorekt.finance/\"\n  }, \"https://www.yolorekt.finance/\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>YOLOrekt is a decentralized short-term prediction market platform built on blockchain. It includes key attributes such as being the most Intuitive, hyper-gamified setup and having Social-Fi elements. </p><p>The platform’s core enabling technology provides the ability to settle markets within seconds on the blockchain. As our first offering, users will be able to predict whether the final price of an asset will end up above or below a strike price by placing bids on the outcome. </p><p>These are ‘Bid Up’ OR ‘Bid Down’ games, allowing the trader to get a result in just a matter of a few candles. Access to both sides of the market is transparent and straightforward with an intuitive user interface to bid in any available market, making options trading as easy as it can get.</p><p>For more information about YOLOrekt, please visit <a href=\"https://www.yolorekt.finance/\">https://www.yolorekt.finance/</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All web/app bug reports and all Critical/High severity smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. \"), mdx(\"p\", null, \"In addition, all bug reports must come with a suggestion for a fix in order to be considered for a reward. \"), mdx(\"p\", null, \"Previously known issues highlighted in the following audit report are considered out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://audit-report.yolorekt.finance.s3.us-east-1.amazonaws.com/YoloRekt+Smart+Contract+Final+Audit+Report_072022.pdf\"\n  }, \"http://audit-report.yolorekt.finance.s3.us-east-1.amazonaws.com/YoloRekt+Smart+Contract+Final+Audit+Report_072022.pdf\"))), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"YOLOrekt\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDT\"), \", at the discretion of the team.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the  <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All web/app bug reports and all Critical/High severity smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. </p><p>In addition, all bug reports must come with a suggestion for a fix in order to be considered for a reward. </p><p>Previously known issues highlighted in the following audit report are considered out of scope: </p><ul><li><a href=\"http://audit-report.yolorekt.finance.s3.us-east-1.amazonaws.com/YoloRekt+Smart+Contract+Final+Audit+Report_072022.pdf\">http://audit-report.yolorekt.finance.s3.us-east-1.amazonaws.com/YoloRekt+Smart+Contract+Final+Audit+Report_072022.pdf</a></li></ul><p>Payouts are handled by the <strong>YOLOrekt</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong> or <strong>USDT</strong>, at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring physical access to the victim device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to the local network of the victim\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain text injection ex: url parameters, path, etc.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude reflected HTML injection with or without javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude persistent plain text injection\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR without impact demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no state modifying security impact (ex: logout CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D) without demonstration of impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side non-confidential information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used only to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Issues related to the frontend without concrete impact and PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices issues without concrete impact and PoC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Attacks requiring physical access to the victim device</li><li>Attacks requiring access to the local network of the victim</li><li>Reflected plain text injection ex: url parameters, path, etc.<ul><li>This does not exclude reflected HTML injection with or without javascript</li><li>This does not exclude persistent plain text injection</li></ul></li><li>Self-XSS</li><li>Captcha bypass using OCR without impact demonstration</li><li>CSRF with no state modifying security impact (ex: logout CSRF)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact</li><li>Server-side non-confidential information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used only to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Feature requests</li><li>Issues related to the frontend without concrete impact and PoC</li><li>Best practices issues without concrete impact and PoC</li><li>Vulnerabilities primarily caused by browser/plugin defects</li><li>Leakage of non sensitive api keys ex: etherscan, Infura, Alchemy, etc.</li><li>Any vulnerability exploit requiring browser bugs for exploitation. ex: CSP bypass</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of YOLOrekt can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/YOLOrekt/community-bug-bounty\"\n  }, \"https://github.com/YOLOrekt/community-bug-bounty\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of YOLOrekt can be found at <a href=\"https://github.com/YOLOrekt/community-bug-bounty\">https://github.com/YOLOrekt/community-bug-bounty</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
