{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "evmos",
      "slug": "evmos",
      "project": "Evmos",
      "maxBounty": 1000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/24TdTZjJnv7GBjPXBblt9G/ed59bb6d74baa25ec94684be0db1a24f/Evmos_logo.png",
      "launchDate": "2022-11-12T00:00-07:00",
      "updatedDate": "2023-01-17T11:16:28.052Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "USD $50,000 to USD $1,000,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "USD $10,000 to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "USD $1,500",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "7b9fqPRt5U4xRuhfApBo2T",
          "type": "blockchain_dlt",
          "url": "https://github.com/evmos/ethermint",
          "description": "Ethermint - only latest (https://github.com/evmos/evmos/releases/latest)"
        },
        {
          "id": "3nN87VUDbrFOBGOkEQtN6I",
          "type": "blockchain_dlt",
          "url": "https://github.com/evmos/evmos",
          "description": "Evmos - only latest (https://github.com/evmos/ethermint/releases/latest)"
        }
      ],
      "impacts": [
        {
          "id": "Tw5JmUT2Z0gpSpbZeGYUX",
          "title": "Network not being able to confirm new transactions (Total network shutdown)",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "7wJc6b5W5SCVEAuGgAIMa8",
          "title": "Assuming less than 1/3 of the voting power is Byzantine (malicious): unintended permanent chain split requiring hard fork due to a software vulnerability",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "6PmkG5MgNSzT3Oeghrarhc",
          "title": "Direct loss of user’s funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "1DbTMJ75a1VhB45QFdMLQs",
          "title": "Authorization of invalid transactions",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "4Y7GPg8YeiC9BvEddOLBGo",
          "title": "Transient consensus failures due to software bugs (eg: partial network downtime due to node crashes through app hash mismatch)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "5ckZhjUm7dLNOUeFV4ZoiF",
          "title": "Permanent freezing of funds without direct loss (fix requires hardfork)",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "47OsUnC7y79REWaMEA3rpc",
          "title": "High compute consumption by validator nodes (backed by benchmarks)",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "5YaHGsq90aFRe1P0wlhWAo",
          "title": "DoS due to software vulnerability that affects >20% of total validator voting power and does not shut down the network",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "4OCGVWCGIkDi39xdSbvC01",
          "title": "Unintended opcode execution (without loss of funds)",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "5mcrJ4UneV8Ra4XmjoGWeb",
          "title": "JSON-RPC API crashes",
          "type": "blockchain_dlt",
          "severity": "medium"
        }
      ],
      "programOverview": "Evmos is the leading Ethereum Virtual Machine-based blockchain in the Cosmos ecosystem and enables developers to launch apps that run interoperable smart contracts across any number of EVM and Cosmos-based blockchains. Evmos opens a new frontier for blockchain applications, expanding the functionality of the EVM by enabling cross-chain applications that tap the liquidity and user bases of multiple blockchain ecosystems to provide more unified experiences through interoperability, novel token economics and in-protocol incentives for users, developers and validators. \n\nFor more information about Evmos, please visit [https://evmos.org/](https://evmos.org/). \n\nAll Documentation regarding how to connect to the public testnet or spin up a local testing environment can be found in the official documentation: [https://docs.evmos.org/](https://docs.evmos.org/)",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered in scope, even if they affect something in the assets in the scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2) to assess the risk and likelihood of exploitation for vulnerabilities, especially to compare them within the same category.\n\nCritical and High Blockchain/DLT bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required. \n\nFor a bug report to be accepted it must include the following information:\n\n__Summary / Description:__\n\n  - Add a detailed description of what the issue is\n  - Classification according to the [Immunefi classification system](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/) and [CVSS](https://nvd.nist.gov/vuln-metrics/cvss). \n    - This will be re-evaluated by the Evmos and Immunefi teams after the report is submitted and the vulnerability is reproduced according to the steps provided (see below).\n  - Describe the impact on the network, smart contract, or end-users\n  - Software version(s) affected\n  - Explain what is the expected behavior and what is the current actual behavior.\n  - Explain difficulty or likelihood of exploit in production\n  - Are there any alternatives or workarounds to the vulnerability, i.e is there a way for users to fix or remediate the vulnerability without upgrading?\n\n__Steps to reproduce the issue__\n\nA detailed step-by-step description of how to reproduce the issue on our end. This is crucial for the acceptance of the report. If applicable, please include a list of all the prerequisites for reproducing the vulnerability (eg: software used for debugging, special node configurations, etc).\n\n__Supporting Material / Reference__\n\nThis could be any kind of additional information that could be useful to prove and back the actual impact of the bug such as logs, screenshots, metrics, papers, documentation, research reports, etc.\n\n__Contact Info__\n\nOnce the vulnerability is received, the Team can reach out via the Immunefi platform for additional clarification or materials. This is also relevant for coordinating any software hotfix patches. Please also add your GitHub username in case you want credit for the vulnerability in the corresponding security advisory.\n\nCritical blockchain/DLT vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, PR and branding aspects, and report quality at the discretion of the team. However, there is a minimum reward of __USD 50 000__. \n\nHigh blockchain/DLT vulnerabilities are capped at 100% of economic damage, primarily taking into consideration funds at risk, PR and branding aspects, and report quality at the discretion of the team. However, there is a minimum reward of __USD 10 000__. \n\nAll vulnerabilities marked in the [Security Audit Report](https://github.com/informalsystems/audits/blob/main/Evmos2021Q4/informal-evmos-report-2021q4.pdf) from Informal Systems are not eligible for a reward.\n\n__KYC Requirements__\n\nEvmos requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward above a certain dollar level. The information required (photographic ID, utility bill) is assessed by a third party (Driftwood Advisory Services Ltd.). Bug bounty hunters that are business entities will have to provide additional information (e.g., directors, owners). Please anticipate that Driftwood Advisory Services might require documentation in English, or in certified translations to it. The collection and assessment of this information will be done by the Driftwood Advisory Services.\n\nPayouts are handled by the __Evmos__ team directly and are denominated in USD. However, payouts are done in __USDC__ on the Ethereum network.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Previously known vulnerabilities (resolved or not) on the Ethereum network and go-ethereum  (and any other fork of these).\n  - Previously known vulnerabilities (resolved or not) on Evmos and Ethermint (and any other fork of these). \n  - All vulnerabilities marked “Published” in the Security section of the [Ethermint](https://github.com/evmos/ethermint/security/advisories?state=published) and [Evmos](https://github.com/evmos/evmos/security/advisories?state=published) repositories.\n  - All bug reports submitted in the Issues section of the Ethermint and Evmos repositories.\n  - Vulnerabilities (resolved or not) that affect forks of Evmos and Ethermint. Only the canonical repositories will be considered as part of this program. See the “Assets In Scope” section for more information.\n  - Vulnerabilities (resolved or not) that affect old software versions of Evmos and Ethermint. The vulnerabilities must be reproducible in the latest version that is being used in production on the Evmos mainnet.\n  - Vulnerabilities to smart contracts deployed to Evmos that are not listed in the “Assets In Scope” section. Please report any vulnerabilities to the corresponding projects affected.\n  - Previously known vulnerabilities in Core Cosmos repositories and or/any other fork of these. These include but are not limited to Cosmos SDK, IBC, and Tendermint Core. Please submit these through the official [Cosmos bug bounty program](https://hackerone.com/cosmos)\n  - Attacks that the reporter has already exploited themselves, leading to damage to the users or the network.\n  - Attacks requiring access to already leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - All vulnerabilities marked in the [Security Audit Report](https://github.com/informalsystems/audits/blob/main/Evmos2021Q4/informal-evmos-report-2021q4.pdf) from Informal Systems are not eligible for a reward.\n\n__Blockchain/DLT__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques and informational reports (eg: lack of documentation, code comments or style choices).\n  - Sybil attacks\n  - Centralization risks\n  - Attacks requiring MITM or physical access to a server node\n\n__Rules & Guidelines__\n\nThis bug bounty program prohibits the following activities:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with public pricing oracles or third-party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees or customers\n  - Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n  - Posting information about the reported vulnerability in public places, including GitHub, Discord, Telegram, Twitter or other non-private channels.\n  - Any intentional violation of applicable law. \n  - Any form of privacy violation, degradation of user experience, disruption to production systems, and destruction of data.\n  - Keep any information about vulnerabilities that you’ve discovered confidential between yourself and the Evmos team until the issue has been resolved and disclosed\n  - Avoid posting personally identifiable information, privately or publicly\n\nAs part of the acceptance process we require that all researchers comply with the following Guidelines:\n\n  - Avoid posting vulnerability information in public places, including but not limited to GitHub, Discord, Telegram, Twitter or other non-private channels.\n  - Make every effort to avoid privacy violations, degradation of user experience, disruption to production systems, and destruction of data.\n  - Keep any information about vulnerabilities that you’ve discovered confidential between yourself and the engineering team until the issue has been resolved and disclosed\n  - Avoid posting personally identifiable information, privately or publicly\n\nThe Evmos team requires that any reported vulnerability must be fixed (i.e vulnerable code is updated) and patched in production (eg: blockchain is upgraded to the patched version) before proceeding with the payment.\n\n__Ineligibility__\n\nEvmos core team members, advisors, or contractors of Tharsis Labs Ltd. are not eligible for this bug bounty program. If you have a question about your eligibility, please discuss it with the Evmos team.",
      "assetsBodyV2": "Only those in the Assets in Scope table are considered as in-scope of the bug bounty program. All test folders and documentation are excluded from this bug bounty program. \n\nIf an impact can be caused to any other asset managed by Evmos that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for consideration by the project. This only applies to Critical and High impacts.\n\nAs part of the eligibility criteria for the Blockchain/DLT category, we require that the vulnerabilities are valid on the release branch currently being used in production (i.e. Evmos mainnet) of the corresponding repository.",
      "impactsBody": null,
      "immunefiStandard": null,
      "tags": {
        "productType": null,
        "projectType": null,
        "ecosystem": null,
        "programType": null,
        "language": null
      },
      "legacy": {
        "technologies": [
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 to USD $1,000,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000 to USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $1,500"
          }
        ],
        "smartcontract_rewards": [],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Evmos is the leading Ethereum Virtual Machine-based blockchain in the Cosmos ecosystem and enables developers to launch apps that run interoperable smart contracts across any number of EVM and Cosmos-based blockchains. Evmos opens a new frontier for blockchain applications, expanding the functionality of the EVM by enabling cross-chain applications that tap the liquidity and user bases of multiple blockchain ecosystems to provide more unified experiences through interoperability, novel token economics and in-protocol incentives for users, developers and validators. \"), mdx(\"p\", null, \"For more information about Evmos, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://evmos.org/\"\n  }, \"https://evmos.org/\"), \". \"), mdx(\"p\", null, \"All Documentation regarding how to connect to the public testnet or spin up a local testing environment can be found in the official documentation: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.evmos.org/\"\n  }, \"https://docs.evmos.org/\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Evmos is the leading Ethereum Virtual Machine-based blockchain in the Cosmos ecosystem and enables developers to launch apps that run interoperable smart contracts across any number of EVM and Cosmos-based blockchains. Evmos opens a new frontier for blockchain applications, expanding the functionality of the EVM by enabling cross-chain applications that tap the liquidity and user bases of multiple blockchain ecosystems to provide more unified experiences through interoperability, novel token economics and in-protocol incentives for users, developers and validators. </p><p>For more information about Evmos, please visit <a href=\"https://evmos.org/\">https://evmos.org/</a>. </p><p>All Documentation regarding how to connect to the public testnet or spin up a local testing environment can be found in the official documentation: <a href=\"https://docs.evmos.org/\">https://docs.evmos.org/</a></p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered in scope, even if they affect something in the assets in the scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered in scope, even if they affect something in the assets in the scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \" to assess the risk and likelihood of exploitation for vulnerabilities, especially to compare them within the same category.\"), mdx(\"p\", null, \"Critical and High Blockchain/DLT bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required. \"), mdx(\"p\", null, \"For a bug report to be accepted it must include the following information:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Summary / Description:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add a detailed description of what the issue is\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Classification according to the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\"\n  }, \"Immunefi classification system\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://nvd.nist.gov/vuln-metrics/cvss\"\n  }, \"CVSS\"), \". \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This will be re-evaluated by the Evmos and Immunefi teams after the report is submitted and the vulnerability is reproduced according to the steps provided (see below).\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Describe the impact on the network, smart contract, or end-users\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Software version(s) affected\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain what is the expected behavior and what is the current actual behavior.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explain difficulty or likelihood of exploit in production\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Are there any alternatives or workarounds to the vulnerability, i.e is there a way for users to fix or remediate the vulnerability without upgrading?\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Steps to reproduce the issue\")), mdx(\"p\", null, \"A detailed step-by-step description of how to reproduce the issue on our end. This is crucial for the acceptance of the report. If applicable, please include a list of all the prerequisites for reproducing the vulnerability (eg: software used for debugging, special node configurations, etc).\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Supporting Material / Reference\")), mdx(\"p\", null, \"This could be any kind of additional information that could be useful to prove and back the actual impact of the bug such as logs, screenshots, metrics, papers, documentation, research reports, etc.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Contact Info\")), mdx(\"p\", null, \"Once the vulnerability is received, the Team can reach out via the Immunefi platform for additional clarification or materials. This is also relevant for coordinating any software hotfix patches. Please also add your GitHub username in case you want credit for the vulnerability in the corresponding security advisory.\"), mdx(\"p\", null, \"Critical blockchain/DLT vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, PR and branding aspects, and report quality at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \". \"), mdx(\"p\", null, \"High blockchain/DLT vulnerabilities are capped at 100% of economic damage, primarily taking into consideration funds at risk, PR and branding aspects, and report quality at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 10 000\"), \". \"), mdx(\"p\", null, \"All vulnerabilities marked in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/informalsystems/audits/blob/main/Evmos2021Q4/informal-evmos-report-2021q4.pdf\"\n  }, \"Security Audit Report\"), \" from Informal Systems are not eligible for a reward.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"KYC Requirements\")), mdx(\"p\", null, \"Evmos requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward above a certain dollar level. The information required (photographic ID, utility bill) is assessed by a third party (Driftwood Advisory Services Ltd.). Bug bounty hunters that are business entities will have to provide additional information (e.g., directors, owners). Please anticipate that Driftwood Advisory Services might require documentation in English, or in certified translations to it. The collection and assessment of this information will be done by the Driftwood Advisory Services.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Evmos\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \" on the Ethereum network.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a> to assess the risk and likelihood of exploitation for vulnerabilities, especially to compare them within the same category.</p><p>Critical and High Blockchain/DLT bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required. </p><p>For a bug report to be accepted it must include the following information:</p><p><strong>Summary / Description:</strong></p><ul><li>Add a detailed description of what the issue is</li><li>Classification according to the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2/\">Immunefi classification system</a> and <a href=\"https://nvd.nist.gov/vuln-metrics/cvss\">CVSS</a>. <ul><li>This will be re-evaluated by the Evmos and Immunefi teams after the report is submitted and the vulnerability is reproduced according to the steps provided (see below).</li></ul></li><li>Describe the impact on the network, smart contract, or end-users</li><li>Software version(s) affected</li><li>Explain what is the expected behavior and what is the current actual behavior.</li><li>Explain difficulty or likelihood of exploit in production</li><li>Are there any alternatives or workarounds to the vulnerability, i.e is there a way for users to fix or remediate the vulnerability without upgrading?</li></ul><p><strong>Steps to reproduce the issue</strong></p><p>A detailed step-by-step description of how to reproduce the issue on our end. This is crucial for the acceptance of the report. If applicable, please include a list of all the prerequisites for reproducing the vulnerability (eg: software used for debugging, special node configurations, etc).</p><p><strong>Supporting Material / Reference</strong></p><p>This could be any kind of additional information that could be useful to prove and back the actual impact of the bug such as logs, screenshots, metrics, papers, documentation, research reports, etc.</p><p><strong>Contact Info</strong></p><p>Once the vulnerability is received, the Team can reach out via the Immunefi platform for additional clarification or materials. This is also relevant for coordinating any software hotfix patches. Please also add your GitHub username in case you want credit for the vulnerability in the corresponding security advisory.</p><p>Critical blockchain/DLT vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, PR and branding aspects, and report quality at the discretion of the team. However, there is a minimum reward of <strong>USD 50 000</strong>. </p><p>High blockchain/DLT vulnerabilities are capped at 100% of economic damage, primarily taking into consideration funds at risk, PR and branding aspects, and report quality at the discretion of the team. However, there is a minimum reward of <strong>USD 10 000</strong>. </p><p>All vulnerabilities marked in the <a href=\"https://github.com/informalsystems/audits/blob/main/Evmos2021Q4/informal-evmos-report-2021q4.pdf\">Security Audit Report</a> from Informal Systems are not eligible for a reward.</p><p><strong>KYC Requirements</strong></p><p>Evmos requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward above a certain dollar level. The information required (photographic ID, utility bill) is assessed by a third party (Driftwood Advisory Services Ltd.). Bug bounty hunters that are business entities will have to provide additional information (e.g., directors, owners). Please anticipate that Driftwood Advisory Services might require documentation in English, or in certified translations to it. The collection and assessment of this information will be done by the Driftwood Advisory Services.</p><p>Payouts are handled by the <strong>Evmos</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong> on the Ethereum network.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities (resolved or not) on the Ethereum network and go-ethereum  (and any other fork of these).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities (resolved or not) on Evmos and Ethermint (and any other fork of these). \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All vulnerabilities marked \\u201CPublished\\u201D in the Security section of the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/evmos/ethermint/security/advisories?state=published\"\n  }, \"Ethermint\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/evmos/evmos/security/advisories?state=published\"\n  }, \"Evmos\"), \" repositories.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All bug reports submitted in the Issues section of the Ethermint and Evmos repositories.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities (resolved or not) that affect forks of Evmos and Ethermint. Only the canonical repositories will be considered as part of this program. See the \\u201CAssets In Scope\\u201D section for more information.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities (resolved or not) that affect old software versions of Evmos and Ethermint. The vulnerabilities must be reproducible in the latest version that is being used in production on the Evmos mainnet.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities to smart contracts deployed to Evmos that are not listed in the \\u201CAssets In Scope\\u201D section. Please report any vulnerabilities to the corresponding projects affected.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities in Core Cosmos repositories and or/any other fork of these. These include but are not limited to Cosmos SDK, IBC, and Tendermint Core. Please submit these through the official \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hackerone.com/cosmos\"\n  }, \"Cosmos bug bounty program\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage to the users or the network.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to already leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All vulnerabilities marked in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/informalsystems/audits/blob/main/Evmos2021Q4/informal-evmos-report-2021q4.pdf\"\n  }, \"Security Audit Report\"), \" from Informal Systems are not eligible for a reward.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Blockchain/DLT\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques and informational reports (eg: lack of documentation, code comments or style choices).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring MITM or physical access to a server node\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Rules & Guidelines\")), mdx(\"p\", null, \"This bug bounty program prohibits the following activities:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with public pricing oracles or third-party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Posting information about the reported vulnerability in public places, including GitHub, Discord, Telegram, Twitter or other non-private channels.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any intentional violation of applicable law. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any form of privacy violation, degradation of user experience, disruption to production systems, and destruction of data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keep any information about vulnerabilities that you\\u2019ve discovered confidential between yourself and the Evmos team until the issue has been resolved and disclosed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Avoid posting personally identifiable information, privately or publicly\")), mdx(\"p\", null, \"As part of the acceptance process we require that all researchers comply with the following Guidelines:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Avoid posting vulnerability information in public places, including but not limited to GitHub, Discord, Telegram, Twitter or other non-private channels.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make every effort to avoid privacy violations, degradation of user experience, disruption to production systems, and destruction of data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keep any information about vulnerabilities that you\\u2019ve discovered confidential between yourself and the engineering team until the issue has been resolved and disclosed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Avoid posting personally identifiable information, privately or publicly\")), mdx(\"p\", null, \"The Evmos team requires that any reported vulnerability must be fixed (i.e vulnerable code is updated) and patched in production (eg: blockchain is upgraded to the patched version) before proceeding with the payment.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ineligibility\")), mdx(\"p\", null, \"Evmos core team members, advisors, or contractors of Tharsis Labs Ltd. are not eligible for this bug bounty program. If you have a question about your eligibility, please discuss it with the Evmos team.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Previously known vulnerabilities (resolved or not) on the Ethereum network and go-ethereum  (and any other fork of these).</li><li>Previously known vulnerabilities (resolved or not) on Evmos and Ethermint (and any other fork of these). </li><li>All vulnerabilities marked “Published” in the Security section of the <a href=\"https://github.com/evmos/ethermint/security/advisories?state=published\">Ethermint</a> and <a href=\"https://github.com/evmos/evmos/security/advisories?state=published\">Evmos</a> repositories.</li><li>All bug reports submitted in the Issues section of the Ethermint and Evmos repositories.</li><li>Vulnerabilities (resolved or not) that affect forks of Evmos and Ethermint. Only the canonical repositories will be considered as part of this program. See the “Assets In Scope” section for more information.</li><li>Vulnerabilities (resolved or not) that affect old software versions of Evmos and Ethermint. The vulnerabilities must be reproducible in the latest version that is being used in production on the Evmos mainnet.</li><li>Vulnerabilities to smart contracts deployed to Evmos that are not listed in the “Assets In Scope” section. Please report any vulnerabilities to the corresponding projects affected.</li><li>Previously known vulnerabilities in Core Cosmos repositories and or/any other fork of these. These include but are not limited to Cosmos SDK, IBC, and Tendermint Core. Please submit these through the official <a href=\"https://hackerone.com/cosmos\">Cosmos bug bounty program</a></li><li>Attacks that the reporter has already exploited themselves, leading to damage to the users or the network.</li><li>Attacks requiring access to already leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li><li>All vulnerabilities marked in the <a href=\"https://github.com/informalsystems/audits/blob/main/Evmos2021Q4/informal-evmos-report-2021q4.pdf\">Security Audit Report</a> from Informal Systems are not eligible for a reward.</li></ul><p><strong>Blockchain/DLT</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques and informational reports (eg: lack of documentation, code comments or style choices).</li><li>Sybil attacks</li><li>Centralization risks</li><li>Attacks requiring MITM or physical access to a server node</li></ul><p><strong>Rules &amp; Guidelines</strong></p><p>This bug bounty program prohibits the following activities:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with public pricing oracles or third-party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees or customers</li><li>Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li><li>Posting information about the reported vulnerability in public places, including GitHub, Discord, Telegram, Twitter or other non-private channels.</li><li>Any intentional violation of applicable law. </li><li>Any form of privacy violation, degradation of user experience, disruption to production systems, and destruction of data.</li><li>Keep any information about vulnerabilities that you’ve discovered confidential between yourself and the Evmos team until the issue has been resolved and disclosed</li><li>Avoid posting personally identifiable information, privately or publicly</li></ul><p>As part of the acceptance process we require that all researchers comply with the following Guidelines:</p><ul><li>Avoid posting vulnerability information in public places, including but not limited to GitHub, Discord, Telegram, Twitter or other non-private channels.</li><li>Make every effort to avoid privacy violations, degradation of user experience, disruption to production systems, and destruction of data.</li><li>Keep any information about vulnerabilities that you’ve discovered confidential between yourself and the engineering team until the issue has been resolved and disclosed</li><li>Avoid posting personally identifiable information, privately or publicly</li></ul><p>The Evmos team requires that any reported vulnerability must be fixed (i.e vulnerable code is updated) and patched in production (eg: blockchain is upgraded to the patched version) before proceeding with the payment.</p><p><strong>Ineligibility</strong></p><p>Evmos core team members, advisors, or contractors of Tharsis Labs Ltd. are not eligible for this bug bounty program. If you have a question about your eligibility, please discuss it with the Evmos team.</p>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only those in the Assets in Scope table are considered as in-scope of the bug bounty program. All test folders and documentation are excluded from this bug bounty program. \"), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by Evmos that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for consideration by the project. This only applies to Critical and High impacts.\"), mdx(\"p\", null, \"As part of the eligibility criteria for the Blockchain/DLT category, we require that the vulnerabilities are valid on the release branch currently being used in production (i.e. Evmos mainnet) of the corresponding repository.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only those in the Assets in Scope table are considered as in-scope of the bug bounty program. All test folders and documentation are excluded from this bug bounty program. </p><p>If an impact can be caused to any other asset managed by Evmos that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for consideration by the project. This only applies to Critical and High impacts.</p><p>As part of the eligibility criteria for the Blockchain/DLT category, we require that the vulnerabilities are valid on the release branch currently being used in production (i.e. Evmos mainnet) of the corresponding repository.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
