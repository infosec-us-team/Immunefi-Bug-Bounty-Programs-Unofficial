{
  "pageProps": {
    "bounty": {
      "contentfulId": "6wnQoEaNXYnz9rUAZ1x3FZ",
      "id": "cyan",
      "slug": "cyan",
      "project": "Cyan",
      "maxBounty": 25000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4uyviutRR8XHXZToD0GsnE/64f639ebd703bc4214c034d85b1837f5/4cf02ac-cyan_logo_Small.png",
      "launchDate": "2023-07-12T14:00:00.000Z",
      "endDate": null,
      "updatedDate": "2025-02-17T09:22:30.000Z",
      "kyc": false,
      "rewards": [
        {
          "id": 13503,
          "assetType": "smart_contract",
          "severity": "critical",
          "rewardModel": "fixed",
          "rewardCalculationPercentage": 0,
          "fixedReward": 25000
        },
        {
          "id": 13504,
          "assetType": "smart_contract",
          "severity": "high",
          "rewardModel": "fixed",
          "fixedReward": 10000
        },
        {
          "id": 13505,
          "assetType": "smart_contract",
          "severity": "medium",
          "rewardModel": "fixed",
          "fixedReward": 2500
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4Ye4v6VzOCvhollMVVPXbW",
          "type": "smart_contract",
          "url": "https://immunefi.com",
          "description": "Primacy of Impact",
          "isPrimacyOfImpact": true,
          "isSafeHarbor": null,
          "addedAt": "2023-10-05T15:29:06.820Z"
        },
        {
          "id": "7iiMzx34Ii4GrnyJRIocSC",
          "type": "smart_contract",
          "url": "https://github.com/usecyan/cyan-protocol-v2-public",
          "description": "Cyan Code",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-02-17T09:20:44.412Z"
        }
      ],
      "impacts": [
        {
          "id": 23,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed yield"
        },
        {
          "id": 25,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed yield"
        },
        {
          "id": 4342,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of funds for 24 hours"
        },
        {
          "id": 32,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Theft of gas"
        },
        {
          "id": 33,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Unbounded gas consumption"
        },
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 16,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties"
        },
        {
          "id": 17,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds"
        },
        {
          "id": 18,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of NFTs"
        },
        {
          "id": 22,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Protocol insolvency"
        }
      ],
      "programOverview": "Cyan is the first buy now pay later service for the metaverse. Our goal is to make NFTs and all metaverse assets attainable for everyone. Choose to finance your purchase over a period of three months, or get a collateralized loan on your existing NFTs. If you have ETH to stake, you can park them in our Vaults to earn yield!\n\nFor more information about Cyan, please visit [https://www.usecyan.com/ ](https://www.usecyan.com/)\n\nCyan provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n\n__Primacy of Impact vs Primacy of Rules__\n\nCyan adheres to the Primacy of Impact for the following severity levels:\n- Smart Contract - Critical\n- Smart Contract - High\n- Smart Contract - Medium\n\nIf a category’s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nTestnet and mock files are not covered under the Primacy of Impact.\n\nAll other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n\n__Immunefi Standard Badge__\n\nCyan has satisfied the requirements for the [Immunefi Standard Badge,](https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-) which is given to projects that adhere to our best practices. \n\n__Invoicing Information__\n\nIf needed by the security researcher, Cyan is able to provide the necessary information for the proper issuance of an invoice. This includes:\n- Corporate name",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \n\n__Repeatable Attack Limitations__\n\nIn cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\n\n__Public Disclosure of Known Issues__\n\nBug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. \n\n- If the “setApprovalAll” or “approve” function from a particular collection is invoked prior to the creating of the loan, the locking mechanism will be unable to impede the transfer of the item.\n   - To mitigate this, Cyan team will never whitelist those functions to be called from Cyan wallet for any collection.\n- ERC721Module is able to lock tokens that aren’t present in the wallet. \n   - Only CyanPaymentPlanV2 contract is able to call “setTokenLock” method and ownership of the token is verified on this contract.\n- When declining a Buy Now, Pay Later (BNPL) payment plan, the system will refund the initial downpayment to the plan holder. Should the plan be pre-funded, the allocated funds will revert to the designated vault. However, if the payment plan uses the platform's native token and the plan owner is a smart contract that cannot accept this native token (either due to malicious intent or oversight), the BNPL rejection process will be halted.\n\n__Previous Audits__\n\nCyan has made the audit reports linked below available for reference. Please note that any unresolved vulnerabilities mentioned in these reports are not eligible for rewards.\n\n- [Security Audits](https://docs.usecyan.com/docs/security-audit)\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC is required for the following severity levels:\n- Smart Contract - Critical\n- Smart Contract - High\n- Smart Contract - Medium\n\nAll PoCs submitted must comply with the Immunefi-wide [PoC Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules). Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\n\n__Reward Payment Terms__\n\nPayouts are handled by the Cyan team directly and are denominated in USD. However, payments are done in USDC.",
      "outOfScopeAndRules": ".",
      "assetsBodyV2": ".",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Required",
          "Primacy of Impact"
        ],
        "productType": [
          "Lending",
          "NFT Marketplace",
          "Staking",
          "Yield Aggregator"
        ],
        "projectType": [
          "Defi",
          "NFT"
        ],
        "ecosystem": [
          "ETH",
          "Polygon"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $25,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,500"
          }
        ],
        "web_rewards": []
      },
      "websiteUrl": null,
      "description": "Cyan is the first buy now pay later service for the metaverse. Our goal is to make NFTs and all metaverse assets attainable for everyone. Choose to finance your purchase over a period of three months, or get a collateralized loan on your existing NFTs. If you have ETH to stake, you can park them in our Vaults to earn yield!",
      "githubUrl": null,
      "feasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)\n",
      "prohibitedActivites": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)\n",
      "responsiblePublicationCategory": "category_3",
      "knownIssues": [],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": null,
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": null,
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum",
      "rewardsToken": "USDC",
      "eligibilityCriteria": [],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [
        {
          "id": 92,
          "title": "Cyan Codebase",
          "description": "Program Codebase",
          "url": "https://github.com/orgs/usecyan/repositories"
        }
      ],
      "programDocumentations": [
        {
          "id": 68,
          "title": "Cyan Documentation",
          "description": "Program Documentation",
          "url": "https://docs.usecyan.com/reference/getting-started-with-your-api"
        }
      ],
      "primacy": "primacy_of_impact",
      "newProgramRewardsEnabled": true,
      "findingsUrl": null,
      "premiumTriaging": false
    },
    "project": {
      "features": [],
      "premiumTriaging": false,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "Cyan Bug Bounties",
      "description": "Find bugs and vulnerabilities on Cyan and get paid up to $25,000.",
      "url": "https://immunefi.com/bug-bounty/cyan",
      "ogImg": "/api/bounty/og-image?project=Cyan"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
