{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "hundredfinance",
      "slug": "hundredfinance",
      "project": "Hundred Finance",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3QuwgIZ3UdAyc8HR8JNSgq/f8648eb6baa980cc3f4ea30e9c6129f6/Hundred_Finance_logo.jpeg",
      "launchDate": "2022-01-07T09:30+01:00",
      "updatedDate": "2022-11-20T17:37:04.671Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $4,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $4,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "573hw4zx58iLy3bNwkwHMi",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x0f390559f258eb8591c8e31cf0905e97cf36ace2",
          "description": "Comptroller Storage ARBI"
        },
        {
          "id": "7dMIuvF7WEFiNnbyjZz0nd",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xe8A3327f353863292DCC972B160Fe55DbF123fCA",
          "description": "Comptroller Implementation ARBI"
        },
        {
          "id": "1oOZ7DnBQ0U4ZnNtoNiknv",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x10010069DE6bD5408A6dEd075Cf6ae2498073c73",
          "description": "Chainlink Price Oracle Proxy ARBI"
        },
        {
          "id": "1InZHbRiKUFM502qdZ4u1S",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x10010078a54396F62c96dF8532dc2B4847d47ED3",
          "description": "HND Token ARBI"
        },
        {
          "id": "5fMRYUUnkyrcOgpSQbbWho",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xfCD8570AD81e6c77b8D252bEbEBA62ed980BD64D",
          "description": "hUSDC ARBI"
        },
        {
          "id": "tVMWASH1hyjxcBUkxNBaT",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xbb93c7f378b9b531216f9ad7b5748be189a55807#code",
          "description": "hToken implementation ARBI"
        },
        {
          "id": "6djn0yDuCMrGKZFax57Hmb",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x8e15a22853A0A60a0FBB0d875055A8E66cff0235",
          "description": "hETH ARBI"
        },
        {
          "id": "5NE7mgnoYEXSXzsX2oN5iC",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xb4300e088a3AE4e624EE5C71Bc1822F68BB5f2bc",
          "description": "hWBTC ARBI"
        },
        {
          "id": "oHIB1HBTPfF1MwACGZ56U",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x607312a5C671D0C511998171e634DE32156e69d0",
          "description": "hUSDT ARBI"
        },
        {
          "id": "6J1MIpFPFW3kg37RBAcPJ7",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x103f2CA2148B863942397dbc50a425cc4f4E9A27",
          "description": "hLINK ARBI"
        },
        {
          "id": "5AH3pwRsIcjBmPZNDLxqKf",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xEbd7f3349AbA8bB15b897e03D6c1a4Ba95B55e31",
          "description": "hSUSHI ARBI"
        },
        {
          "id": "EBb65iT3IbSAVeazSlQe1",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x376020c5B0ba3Fd603d7722381fAA06DA8078d8a",
          "description": "hMIM ARBI"
        },
        {
          "id": "5YzPGAXto8SbShyUCyWi3F",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x29DDb4c4f9baAe366DbD40eff79d364e004425b0",
          "description": "hSPELL ARBI"
        },
        {
          "id": "6dQt5tyro3s3lH32YUj9dL",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x772918d032cFd4Ff09Ea7Af623e56E2D8D96bB65",
          "description": "hDODO ARBI"
        },
        {
          "id": "16ECDp7VhYnbrCSg8iOwn4",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xb1c4426C86082D91a6c097fC588E5D5d8dD1f5a8",
          "description": "hFRAX ARBI"
        },
        {
          "id": "5uGmo63ulrFInmHxL0lGQu",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xF191d17dEe9943F06bB784C0492805280AeE0bf9",
          "description": "hUSDC Gauge ARBI"
        },
        {
          "id": "4Nnz7YiuEHJ1XLIXao4dSw",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xC3bae38Bfa2CbBE30f442649070408f484bd5882",
          "description": "hUSDT Gauge ARBI"
        },
        {
          "id": "4idejRbzeBxVO4CZWVoZiN",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x61F95b38f880a6C5A4b7DD15560D7bB8B3E36f35",
          "description": "hMIM Gauge ARBI"
        },
        {
          "id": "5agfZPyCqz1kVxfhn3aRlk",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xd7f3Bf2085AD32ff95E1bCC408d37F10f6949270",
          "description": "hFRAX Gauge ARBI"
        },
        {
          "id": "4yv0cGk3yBJS8cwRerYCDF",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xBa57440fA35Fdb671E58F6F56c1A4447aB1f6C2B",
          "description": "VotingEscrow ARBI"
        },
        {
          "id": "4vzJ5OSicdMV23MCZ9oIEC",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x4adF575DBe0e6F1c5909AE9c7119927b4FaabbBd",
          "description": "Treasury ARBI"
        },
        {
          "id": "4Qj1057VknQqxEPwRGIWWz",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x3A4148DDDd121fbceD8717CB7B82370Be27F76bf",
          "description": "RewardPolicyMaker ARBI"
        },
        {
          "id": "5rHXA3NjqL4uAJ9zfV53D7",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xb4BAfc3d60662De362c0cB0f5e2DE76603Ea77D7",
          "description": "GaugeController ARBI"
        },
        {
          "id": "33VsN8p8CnLKFPvqYJbtWJ",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xc3CC9369fcB8491DaD4FA64cE1Fbd3DD2d70034f",
          "description": "Minter ARBI"
        },
        {
          "id": "7Inzp9kFXE7pHgOuQxUxwQ",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x0F390559F258eB8591C8e31Cf0905E97cf36ACE2",
          "description": "Comptroller Storage FTM"
        },
        {
          "id": "3PotZL873Ve63niSMAO2BI",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x8c6139FF1E9D7c1E32bDAFd79948d0895bA0a831",
          "description": "Comptroller Implementation FTM"
        },
        {
          "id": "3FZklNM2MYMjucQ8GMIiXz",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x10010069DE6bD5408A6dEd075Cf6ae2498073c73",
          "description": "Chainlink Price Oracle Proxy FTM"
        },
        {
          "id": "5E6i89RISZxCjJfwPkfmT4",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x10010078a54396F62c96dF8532dc2B4847d47ED3",
          "description": "HND Token FTM"
        },
        {
          "id": "4izZ8AOtyTUGwibpZ36C3P",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xfCD8570AD81e6c77b8D252bEbEBA62ed980BD64D",
          "description": "hFTM FTM"
        },
        {
          "id": "5SikDMvQFPrJh3aM3IV80T",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xbb93C7F378B9b531216f9aD7b5748be189A55807",
          "description": "hToken implementation FTM"
        },
        {
          "id": "247Vx2J7PlPEoEF4hIKqX5",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xE4e43864ea18d5E5211352a4B810383460aB7fcC",
          "description": "hUSDT FTM"
        },
        {
          "id": "59x9H4II4zRe4h9Mxq5vEB",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xEdBA32185BAF7fEf9A26ca567bC4A6cbe426e499",
          "description": "hSPELL FTM"
        },
        {
          "id": "6SqM2t4lVQjiSQ0rnAqwYz",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x5B9451B1bFAE2A74D7b9D0D45BdD0E9a27F7bB22",
          "description": "hSUSHI FTM"
        },
        {
          "id": "3wQESbiSU67u5e7Ov92Jdb",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x103f2CA2148B863942397dbc50a425cc4f4E9A27",
          "description": "hBNB FTM"
        },
        {
          "id": "1WwFJt4U7RwCvHTEEUJaqx",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x243E33aa7f6787154a8E59d3C27a66db3F8818ee",
          "description": "hhUSDC FTM"
        },
        {
          "id": "x0xVnaItB9Rl1dTupneJc",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xb4300e088a3AE4e624EE5C71Bc1822F68BB5f2bc",
          "description": "hFRAX FTM"
        },
        {
          "id": "2fEDzyzB29UD5wBEZpw4DN",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xa8236EaFBAF1C3D39396DE566cEEa6F320E3db00",
          "description": "hWBTC FTM"
        },
        {
          "id": "4wLP6y1binyjqQBAWnRY3X",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xEbd7f3349AbA8bB15b897e03D6c1a4Ba95B55e31",
          "description": "hAAVE FTM"
        },
        {
          "id": "3vVMd46ZOWC8MinSLAULNJ",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x8e15a22853A0A60a0FBB0d875055A8E66cff0235",
          "description": "hDAI FTM"
        },
        {
          "id": "4H9ENkUkix7y6leIEqYEa7",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x090a00A2De0EA83DEf700B5e216f87a5D4F394FE",
          "description": "hETH FTM"
        },
        {
          "id": "28EKMKAVCFLw3ghrGCzKG7",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xa8cD5D59827514BCF343EC19F531ce1788Ea48f8",
          "description": "hMIM FTM"
        },
        {
          "id": "6YMhC9EwsAUPxPdxyEyxGg",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x30a026Ae9e2A1363E96a5e5Ab12786a46066bEB8",
          "description": "hLINK FTM"
        },
        {
          "id": "6YIb5G0e8zHSjTWZSGFRBC",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xC0f112479c83a603Ac4Dc76f616536389a85a917",
          "description": "hYFI FTM"
        },
        {
          "id": "41KUBASALvRV8JrpuGdaCj",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xd6fcBCcfC375c2C61d7eE2952B329DcEbA2D4e10",
          "description": "hCRV FTM"
        },
        {
          "id": "3mNCJFCTm8hzwRbvlskL9W",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x8a0d639f272F4B966b2dEa42d4b743Dce7E82c28",
          "description": "Stables Interest Rate Model FTM"
        },
        {
          "id": "7eAsYdtBd9MGosnUon1pzC",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xE8F12f5492Ec28609D2932519456b7436d6c93bD",
          "description": "Blue Chips Interest Rate Model FTM"
        },
        {
          "id": "1iuaU7Ln8B7azrErZh1EoG",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x110614276F7b9Ae8586a1C1D9Bc079771e2CE8cF",
          "description": "hUSDC Gauge FTM"
        },
        {
          "id": "5fW6ALkyxwyXNXjb98NVRS",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xbF689f50cB446f171F08691367f7D9398b24D382",
          "description": "hUSDT Gauge FTM"
        },
        {
          "id": "1fPATdIfRUzuiGfELNKvBx",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x26596af66A10Cb6c6fe890273eD37980D50f2448",
          "description": "hMIM Gauge FTM"
        },
        {
          "id": "5JDrC9ZZvMIadhXzKDvsu9",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x2c7a9d9919f042C4C120199c69e126124d09BE7c",
          "description": "hFRAX Gauge FTM"
        },
        {
          "id": "6jnlrB3YhJbqftCy1oudFK",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xB8481A3cE515EA8cAa112dba0D1ecfc03937fbcD",
          "description": "hDAI Gauge FTM"
        },
        {
          "id": "5JAIcfet0kyfwpdOlrwoGa",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x376020c5B0ba3Fd603d7722381fAA06DA8078d8a",
          "description": "VotingEscrow FTM"
        },
        {
          "id": "6kxemhI6cZRgHoDkQhqzyW",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x29DDb4c4f9baAe366DbD40eff79d364e004425b0",
          "description": "Treasury FTM"
        },
        {
          "id": "5ghumgu1ZYuO5ibiSR1bYW",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x772918d032cFd4Ff09Ea7Af623e56E2D8D96bB65",
          "description": "RewardPolicyMaker FTM"
        },
        {
          "id": "1eiQvbHSi4fUAkMC8KWZxr",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xb1c4426C86082D91a6c097fC588E5D5d8dD1f5a8",
          "description": "GaugeController FTM"
        },
        {
          "id": "3eHZrKVep4iFY0KltDiBrx",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x42B458056f887Fd665ed6f160A59Afe932e1F559",
          "description": "Minter FTM"
        },
        {
          "id": "751QP2LeauVBGMrdWCtNpe",
          "type": "websites_and_applications",
          "url": "https://hundred.finance",
          "description": "Main Web App"
        },
        {
          "id": "5SYN5QRkgG5XdQZxRo2qZ",
          "type": "websites_and_applications",
          "url": "https://vote.hundred.finance",
          "description": "Vote"
        },
        {
          "id": "2jeTGLRMVo6E8ALjcrdNmm",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xE4e43864ea18d5E5211352a4B810383460aB7fcC",
          "description": "Stables Interest Rate Model ARBI"
        },
        {
          "id": "2EHjRXy4BnoY2usXzQKyZv",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xa8cD5D59827514BCF343EC19F531ce1788Ea48f8",
          "description": "Blue Chips Interest Rate Model ARBI"
        }
      ],
      "impacts": [
        {
          "id": "5QRI2y2fhy7k6WsXaZk82f",
          "title": "Loss of user funds staked (principal) by freezing or theft",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3lTjF3kCUPghWPcmRxw5RU",
          "title": "Vote manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2GUod70KCT4ObLMvjGQb3K",
          "title": "Redirected funds by address modification",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6sx05CcWSWFyGToVxSh68P",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2oFrLSU1R3oc8qngHIq8ex",
          "title": "Unable to call smart contract",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Hundred Finance is a decentralized application (dApp) that enables the lending and borrowing of cryptocurrencies. A multi-chain protocol, it integrates with Chainlink oracles to ensure market health and stability, while specializing in providing markets for long-tail assets.\n\nFor more information about Hundred Finance, please visit [https://hundred.finance/](https://hundred.finance/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Redirected funds by address modification",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the Immunefi Vulnerability Severity Classification System. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web/app bug reports must come with a PoC in order to be considered for a reward.\n\nIn addition to Immunefi’s Vulnerability Severity Classification System, Hundred Finance classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed.\n\nCritical\n\n  - Allow attacker(s) to remove tokens equal to at least 10% of the dollar value of the aggregate value of all those in the system.\n  - May be applied to a real situation and triggered through an attack vector rather than theory or hypothesis.\n  - Occur in operation mode or emergency shutdown mode, excluding those occurring during or shortly after the protocols deployment (a period during which the system is yet to be fully activated).  \n\nFor Comptroller Contract: [https://arbiscan.io/address/0x0f390559f258eb8591c8e31cf0905e97cf36ace2 ](https://arbiscan.io/address/0x0f390559f258eb8591c8e31cf0905e97cf36ace2),  bugs that occur from Hundred Finance altering the compSpeeds are Out of Scope.\n\nPayouts are handled by the __Hundred Finance__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices \n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "Only those in the Assets in Scope table are considered as in-scope of the bug bounty program. For Hundred Finance smart contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Crosschain Liquidity",
          "Lending"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Arbitrum",
          "ETH",
          "Fantom"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "JavaScript"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $4,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $4,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hundred Finance is a decentralized application (dApp) that enables the lending and borrowing of cryptocurrencies. A multi-chain protocol, it integrates with Chainlink oracles to ensure market health and stability, while specializing in providing markets for long-tail assets.\"), mdx(\"p\", null, \"For more information about Hundred Finance, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://hundred.finance/\"\n  }, \"https://hundred.finance/\"), \". \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and app and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and freezing of principal of any amount\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thefts and freezing of unclaimed yield of any amount\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of governance funds \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Governance activity disruption\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirected funds by address modification\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Hundred Finance is a decentralized application (dApp) that enables the lending and borrowing of cryptocurrencies. A multi-chain protocol, it integrates with Chainlink oracles to ensure market health and stability, while specializing in providing markets for long-tail assets.</p><p>For more information about Hundred Finance, please visit <a href=\"https://hundred.finance/\">https://hundred.finance/</a>. </p><p>This bug bounty program is focused on their smart contracts and app and is focused on preventing:</p><ul><li>Thefts and freezing of principal of any amount</li><li>Thefts and freezing of unclaimed yield of any amount</li><li>Theft of governance funds </li><li>Governance activity disruption</li><li>Redirected funds by address modification</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remote Code Execution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vertical Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML External Entities Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFI/RFI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Horizontal Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stored XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflective XSS with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct object reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal SSRF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Session fixation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insecure Deserialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOM XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL misconfigurations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL/TLS issues (weak crypto, improper setup)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL redirect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clickjacking (must be accompanied with PoC)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Misleading Unicode text (e.g. using right to left override characters)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain</strong> </p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Remote Code Execution</li><li>Trusting trust/dependency vulnerabilities</li><li>Vertical Privilege Escalation</li><li>XML External Entities Injection</li><li>SQL Injection</li><li>LFI/RFI</li><li>Horizontal Privilege Escalation</li><li>Stored XSS</li><li>Reflective XSS with impact</li><li>CSRF with impact</li><li>Direct object reference</li><li>Internal SSRF</li><li>Session fixation</li><li>Insecure Deserialization</li><li>DOM XSS</li><li>SSL misconfigurations</li><li>SSL/TLS issues (weak crypto, improper setup)</li><li>URL redirect</li><li>Clickjacking (must be accompanied with PoC)</li><li>Misleading Unicode text (e.g. using right to left override characters)</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the Immunefi Vulnerability Severity Classification System. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \"), mdx(\"p\", null, \"All web/app bug reports must come with a PoC in order to be considered for a reward.\"), mdx(\"p\", null, \"In addition to Immunefi\\u2019s Vulnerability Severity Classification System, Hundred Finance classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed.\"), mdx(\"p\", null, \"Critical\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allow attacker(s) to remove tokens equal to at least 10% of the dollar value of the aggregate value of all those in the system.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"May be applied to a real situation and triggered through an attack vector rather than theory or hypothesis.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Occur in operation mode or emergency shutdown mode, excluding those occurring during or shortly after the protocols deployment (a period during which the system is yet to be fully activated).  \")), mdx(\"p\", null, \"For Comptroller Contract: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://arbiscan.io/address/0x0f390559f258eb8591c8e31cf0905e97cf36ace2\"\n  }, \"https://arbiscan.io/address/0x0f390559f258eb8591c8e31cf0905e97cf36ace2 \"), \",  bugs that occur from Hundred Finance altering the compSpeeds are Out of Scope.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hundred Finance\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the Immunefi Vulnerability Severity Classification System. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. </p><p>All web/app bug reports must come with a PoC in order to be considered for a reward.</p><p>In addition to Immunefi’s Vulnerability Severity Classification System, Hundred Finance classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed.</p><p>Critical</p><ul><li>Allow attacker(s) to remove tokens equal to at least 10% of the dollar value of the aggregate value of all those in the system.</li><li>May be applied to a real situation and triggered through an attack vector rather than theory or hypothesis.</li><li>Occur in operation mode or emergency shutdown mode, excluding those occurring during or shortly after the protocols deployment (a period during which the system is yet to be fully activated).  </li></ul><p>For Comptroller Contract: <a href=\"https://arbiscan.io/address/0x0f390559f258eb8591c8e31cf0905e97cf36ace2\">https://arbiscan.io/address/0x0f390559f258eb8591c8e31cf0905e97cf36ace2 </a>,  bugs that occur from Hundred Finance altering the compSpeeds are Out of Scope.</p><p>Payouts are handled by the <strong>Hundred Finance</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices \")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices </li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only those in the Assets in Scope table are considered as in-scope of the bug bounty program. For Hundred Finance smart contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only those in the Assets in Scope table are considered as in-scope of the bug bounty program. For Hundred Finance smart contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
