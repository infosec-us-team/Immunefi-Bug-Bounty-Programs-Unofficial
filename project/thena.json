{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "thena",
      "slug": "thena",
      "project": "Thena",
      "maxBounty": 150000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1ZKn1WU3PCtjNtd8NUgDMH/dceaed07eef5584ea011af4ef9abe6c3/Thena_Logo.png",
      "launchDate": "2022-12-01T13:00-07:00",
      "updatedDate": "2023-03-08T17:37:12.522Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $100,000 to USD $150,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $20,000 to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "45jVP81Suwdqd3X9uxPETn",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xafd89d21bdb66d00817d4153e055830b1c2b3970",
          "description": "Pair Factory"
        },
        {
          "id": "6fq8Z5T8M1xIJTp1Yau4Bf",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xcfe13d138d6471b827528b077eadc9330b9fad78",
          "description": "Gauge Factory"
        },
        {
          "id": "7DkrAmhfvCLX5qPuXvaOrT",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x4ffcf83feae8a44f61575722aefc2706e73c7770",
          "description": "Bribe Factory"
        },
        {
          "id": "37rSeQ2dONPxuLTZstz76Q",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xF4C8E32EaDEC4BFe97E0F595AdD0f4450a863a11",
          "description": "Thena"
        },
        {
          "id": "5LdsG8WrEwHBH0SQLdfntv",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xfBBF371C9B0B994EebFcC977CEf603F7f31c070D",
          "description": " VotingEscrow (veTHE)"
        },
        {
          "id": "5hNEQocC4awFqZaN2Vy7Ie",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xb2B37c4221DaBFFF5B34883e95D88d498F03E516",
          "description": "veArt Proxy"
        },
        {
          "id": "3osYW9DcsANk8uQHGyZvcT",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xe9fe83aa430ace4b703c299701142f9dfdde730e",
          "description": "RewardsDistributor"
        },
        {
          "id": "7irHRurSAP5aIKefGeQlIT",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x62ee96e6365ab515ec647c065c2707d1122d7b26",
          "description": "VoterV2"
        },
        {
          "id": "7L01aXpUAE3ubv72jfthfa",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x86069feb223ee303085a1a505892c9d4bdbee996",
          "description": "Minter"
        },
        {
          "id": "67CKDKBkVpIo1hQ32J6usf",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x20a304a7d126758dfe6b243d0fc515f83bca8431",
          "description": "Router"
        }
      ],
      "impacts": [
        {
          "id": "2CN0UhnErk82zwF2QqIpVs",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "62LQNDcBAnEVhHhxz5mIMM",
          "title": "Direct theft of any user veNFTs, whether at-rest or in-motion, other than unclaimed royalties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "299k0Mhie4QDhWsXslFuQ8",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "k6ISKlxY26tcjNdNmcRwc",
          "title": "Permanent freezing of veNFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5MZfXHUh52gKFZl4IaLCSy",
          "title": "Unauthorized minting of veNFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "rTVvbE5TBn3wwFFFz1Mjk",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3Mi0iKzUE9Sb6xNvS9pwEz",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7BAJqtZ6p8ew9UWsMNz2mR",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "22fobXRnXbBa6d9cn63v0Z",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5wtMojNkVMg48KON5VQrY3",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "53HDuqpNb8FbcH5Sy6r624",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5yWCRxc7h7Z302BY68WBRt",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5O0WxSdlGEpxiS3AyN42g3",
          "title": "Any voting result manipulation",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "74Xo8zoy6DbRIUqUbS1c23",
          "title": "Smart contract fails to deliver promised returns, but doesn’t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Thena was designed to onboard the next generation of protocols to the BNB chain by opening up a free market for THE emissions. Protocols can bribe veTHE holders or acquire veTHE to redirect emissions to their pools, offering a flexible and capital efficient solution to bootstrap and scale liquidity.\n\nFor more information about Thena, please visit [https://thena.fi](https://thena.fi).",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll Critical/High/Medium severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. \n\nAll Critical/High/Medium severity bug reports must also come with a suggestion for a fix in order to be considered for a reward. \n\nRewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 100 000__ and a maximum reward of __USD 150 000__.\n\nHigh smart contract vulnerabilities will be further capped at up to 100% of the funds affected. However, there is a minimum reward of __USD 20 000__ and a maximum reward of __USD 50 000__.\n\nKnown issues highlighted in the following audit report are considered out of scope of the program:\n  - [https://github.com/PrometeoThena/ThenaAudit/blob/main/THENA_smart_contract_audit_2_1.pdf](https://github.com/PrometeoThena/ThenaAudit/blob/main/THENA_smart_contract_audit_2_1.pdf)\n\nPayouts are handled by the __Thena__ team directly and are denominated in USD. However, payouts are done in __USDC__, __BUSD__ or __USDT__, at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - All reports related to the old contracts (internalBribe, externalBribe, Gauge, Voter)\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "The Pairs, Gauges and bribes contracts generated from the factories are ‘Asset in scope’.\nThe GitHub link: [https://github.com/ThenafiBNB/THENA-Contracts](https://github.com/ThenafiBNB/THENA-Contracts). \nThe bribe contracts is “bribes.sol”, the Gauge contract is “GaugeV2.sol”, the Pair contract is “Pair.sol” + “PairFees.sol”.\nThe mainnet addresses can also be found here: [THENA OFFICIAL UPGRADEABLE ADDRESSES](https://docs.google.com/spreadsheets/d/1upJeZwRuF-5fR_jpXRSS0K2LeE_H-jGC0KgC9wTb1Zs/edit#gid=0)\nOnly the contract in ‘Asset in scope’ + the quoted above are valid.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "DEX"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "BSC"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $100,000 to USD $150,000"
          },
          {
            "level": "High",
            "payout": "USD $20,000 to USD $50,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Thena was designed to onboard the next generation of protocols to the BNB chain by opening up a free market for THE emissions. Protocols can bribe veTHE holders or acquire veTHE to redirect emissions to their pools, offering a flexible and capital efficient solution to bootstrap and scale liquidity.\"), mdx(\"p\", null, \"For more information about Thena, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://thena.fi\"\n  }, \"https://thena.fi\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Thena was designed to onboard the next generation of protocols to the BNB chain by opening up a free market for THE emissions. Protocols can bribe veTHE holders or acquire veTHE to redirect emissions to their pools, offering a flexible and capital efficient solution to bootstrap and scale liquidity.</p><p>For more information about Thena, please visit <a href=\"https://thena.fi\">https://thena.fi</a>.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\"), mdx(\"p\", null, \"All Critical/High/Medium severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. \"), mdx(\"p\", null, \"All Critical/High/Medium severity bug reports must also come with a suggestion for a fix in order to be considered for a reward. \"), mdx(\"p\", null, \"Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 100 000\"), \" and a maximum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 150 000\"), \".\"), mdx(\"p\", null, \"High smart contract vulnerabilities will be further capped at up to 100% of the funds affected. However, there is a minimum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 20 000\"), \" and a maximum reward of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \".\"), mdx(\"p\", null, \"Known issues highlighted in the following audit report are considered out of scope of the program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/PrometeoThena/ThenaAudit/blob/main/THENA_smart_contract_audit_2_1.pdf\"\n  }, \"https://github.com/PrometeoThena/ThenaAudit/blob/main/THENA_smart_contract_audit_2_1.pdf\"))), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Thena\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BUSD\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDT\"), \", at the discretion of the team.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.</p><p>All Critical/High/Medium severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. </p><p>All Critical/High/Medium severity bug reports must also come with a suggestion for a fix in order to be considered for a reward. </p><p>Rewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of <strong>USD 100 000</strong> and a maximum reward of <strong>USD 150 000</strong>.</p><p>High smart contract vulnerabilities will be further capped at up to 100% of the funds affected. However, there is a minimum reward of <strong>USD 20 000</strong> and a maximum reward of <strong>USD 50 000</strong>.</p><p>Known issues highlighted in the following audit report are considered out of scope of the program:</p><ul><li><a href=\"https://github.com/PrometeoThena/ThenaAudit/blob/main/THENA_smart_contract_audit_2_1.pdf\">https://github.com/PrometeoThena/ThenaAudit/blob/main/THENA_smart_contract_audit_2_1.pdf</a></li></ul><p>Payouts are handled by the <strong>Thena</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>, <strong>BUSD</strong> or <strong>USDT</strong>, at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All reports related to the old contracts (internalBribe, externalBribe, Gauge, Voter)\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>All reports related to the old contracts (internalBribe, externalBribe, Gauge, Voter)</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Pairs, Gauges and bribes contracts generated from the factories are \\u2018Asset in scope\\u2019.\\nThe GitHub link: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ThenafiBNB/THENA-Contracts\"\n  }, \"https://github.com/ThenafiBNB/THENA-Contracts\"), \".\\nThe bribe contracts is \\u201Cbribes.sol\\u201D, the Gauge contract is \\u201CGaugeV2.sol\\u201D, the Pair contract is \\u201CPair.sol\\u201D + \\u201CPairFees.sol\\u201D.\\nThe mainnet addresses can also be found here: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.google.com/spreadsheets/d/1upJeZwRuF-5fR_jpXRSS0K2LeE_H-jGC0KgC9wTb1Zs/edit#gid=0\"\n  }, \"THENA OFFICIAL UPGRADEABLE ADDRESSES\"), \"\\nOnly the contract in \\u2018Asset in scope\\u2019 + the quoted above are valid.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The Pairs, Gauges and bribes contracts generated from the factories are ‘Asset in scope’.\nThe GitHub link: <a href=\"https://github.com/ThenafiBNB/THENA-Contracts\">https://github.com/ThenafiBNB/THENA-Contracts</a>.\nThe bribe contracts is “bribes.sol”, the Gauge contract is “GaugeV2.sol”, the Pair contract is “Pair.sol” + “PairFees.sol”.\nThe mainnet addresses can also be found here: <a href=\"https://docs.google.com/spreadsheets/d/1upJeZwRuF-5fR_jpXRSS0K2LeE_H-jGC0KgC9wTb1Zs/edit#gid=0\">THENA OFFICIAL UPGRADEABLE ADDRESSES</a>\nOnly the contract in ‘Asset in scope’ + the quoted above are valid.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
