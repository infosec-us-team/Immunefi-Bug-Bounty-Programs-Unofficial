{
  "pageProps": {
    "bounty": {
      "contentfulId": "1W0raDGgEn9dtVvDGONLLa",
      "id": "light-protocol",
      "slug": "light-protocol",
      "project": "Light Protocol",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3HcRnAd91ErHn7EXd04vRw/a7a0424ee3f4060fe1d14551ed1673a5/light__1_.png",
      "launchDate": "2024-09-12T19:39:57.000Z",
      "endDate": null,
      "updatedDate": "2024-09-16T15:54:38.409Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $10,000 to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $5,000 to USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $1,000 to USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3qzCgRQXzRu9disYIqH0HG",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/circuit-lib/verifier",
          "description": "Crate - light-verifier",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:12.174Z"
        },
        {
          "id": "6o2JpQOkEyysIuIPfs3vq3",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/groth16-solana/",
          "description": "Crate - groth16-solana",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:12.744Z"
        },
        {
          "id": "6TxqWGXMn3ZDwco97Ue4rx",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/heap",
          "description": "Crate - light-heap",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:13.263Z"
        },
        {
          "id": "7xF03cMyEmXeSLq1RKPQAU",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/macros/aligned-sized",
          "description": "Crate - aligned-sized",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:13.747Z"
        },
        {
          "id": "1ta0PNfddpx1ymPBE6a4lC",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/macros/light",
          "description": "Crate - light-macros",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:14.269Z"
        },
        {
          "id": "1Si514ta2an3O5vB5JI2FM",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/merkle-tree/bounded-vec",
          "description": "Crate - light-bounded-vec",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:14.817Z"
        },
        {
          "id": "7phAK9bobPGWl5t3AXK84",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/merkle-tree/concurrent",
          "description": "Crate - light-concurrent-merkle-tree",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:15.302Z"
        },
        {
          "id": "4Q2J0pilhTF4Z7PzL9MRDB",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/merkle-tree/hash-set",
          "description": "Crate - light-hash-set",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:15.808Z"
        },
        {
          "id": "6x0XmAJbPzrcRZbOGAb5aM",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/merkle-tree/hasher",
          "description": "Crate - light-hasher",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:16.323Z"
        },
        {
          "id": "1j0xZqZYigZoN75bvDDQ0q",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/merkle-tree/indexed",
          "description": "Crate - light-indexed-merkle-tree",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:16.784Z"
        },
        {
          "id": "5Zp2OpIfbOV2r2RWUaUsdY",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/programs/account-compression",
          "description": "Crate - account-compression",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:17.327Z"
        },
        {
          "id": "4vH4rJIAD7NEZgnusFmary",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/programs/compressed-token",
          "description": "Crate - light-compressed-token",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:17.811Z"
        },
        {
          "id": "Wf6b9JaEa4OlRQ9Xjegg8",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/programs/registry",
          "description": "Crate - light-registry",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:18.431Z"
        },
        {
          "id": "34yMiQPgPN8WhCMhKvZSZh",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/programs/system",
          "description": "Crate - light-system-program",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:18.939Z"
        },
        {
          "id": "5l14RuzQ3lfCTrGAKyMzgf",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/utils",
          "description": "Crate - light-utils",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:19.416Z"
        },
        {
          "id": "5vCiSzd9ikHGquT0EGacj7",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/light-prover/formal-verification",
          "description": "Directory - light-prover/formal-verification",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:19.880Z"
        },
        {
          "id": "59RzLtFIxGmWyFjCE44GXy",
          "type": "smart_contract",
          "url": "https://github.com/Lightprotocol/light-protocol/tree/main/light-prover/prover",
          "description": "Directory - light-prover/prover",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-09-13T12:57:20.364Z"
        }
      ],
      "impacts": [
        {
          "id": "7g1ww5pEF9GR3QjZeukI9T",
          "title": "Direct theft of any user funds, whether at-rest or in-motion",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4Odust7L20Y6vIkB5YBLm2",
          "title": "Permanent freezing of state",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "31fnkquIlC8SPFpCNoUrHQ",
          "title": "Permanent freezing of compressed tokens/sol",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2f5cz3kzWqitRYlY4009Q2",
          "title": "Unauthorized minting of compressed tokens/sol",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1v9goyOpIdlzKdiomXK3mL",
          "title": "Arbitrary creation or deletion of state",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6LhLYBZtxhPXy98dGVG6wv",
          "title": "Temporary freezing of state",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1j72v02B12T0HUQI93cWDE",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4Ypr0Pu6eDFxYRh5EX6cii",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Light Protocol introduces ZK Compression, a new primitive designed to scale Solanaâ€™s L1 while maintaining security and performance. It delivers significant cost savings for developers, addresses the problem of state growth, and provides a foundation for native ZK compute on Solana.\n\nLight is a protocol built on Solana introducing ZK compression, a new primitive that enables the secure scaling of state directly on the L1.\n\nSolana users and program developers can opt-in to compress their on-chain state via the Light Protocol smart contracts. This reduces state cost by orders of magnitude while preserving the security, performance, and composability of the Solana L1.\n\nLight Protocol compressed state natively supports custom ZK compute. This creates a new space for previously impossible computation designs on Solana.\n\nHow it works in a nutshell:\n\n- Off-Chain State Storage: State is stored off-chain, i.e., as calldata on the Solana ledger.\n- Transactions specify state: Transactions define the off-chain state they access (read/write) and include it in the transaction payload.\n- State Validation: Solana Programs invoke the light_system_program to create and update compressed state. \n    - The light_system_program validates the state (validity of read state via compressed-account schema, sum checks, ownership checks, verification of input state inclusion ZKP). Compressed accounts have a layout similar to classic accounts.\n\n- State Updates: The light_system_program invokes the account_compression_program which checks against double-spends and updates merkle trees. the new state is recorded as a log on the Solana ledger via the noop-program.\n- Photon RPC Nodes: index and persist the logs, making the compressed account state available to clients via the ZK Compression RPC API.\n- Forester nodes (cranks): Interact with the account compression program to empty nullifier_queues, empty address_queues, and roll-over trees.\n\nFor more information about Light Protocol, please visit [https://lightprotocol.com](https://lightprotocol.com)\n- Our Docs [https://www.zkcompression.com](https://www.zkcompression.com)\n- Our GitHub [https://github.com/Lightprotocol/light-protocol](https://github.com/Lightprotocol/light-protocol).\n- Our Twitter (X) [https://x.com/LightProtocol](https://x.com/LightProtocol)\n\nLight Protocol Labs provides rewards in USDC, denominated in USD. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n__KYC Requirement__\n\nLight Protocol will be requesting KYC information in order to pay for successful bug submissions. The following information will be required:\n\n- Full name \n- Date of birth\n- Proof of address (either a redacted bank statement with address or a recent utility bill)\n- Copy of Passport or other Government issued ID\n\n__Eligibility Criteria__\n\nSecurity researchers who wish to participate must adhere to the rules of engagement set forth in this program and cannot be:\n\n- On OFACs SDN list\n\n__Primacy of Impact vs Primacy of Rules__\n\nLight Protocol adheres to the Primacy of Impact for the following impacts:\n- Smart Contract - Critical\n- Smart Contract - High\n\nPrimacy of Impact means that the impact is prioritized rather than a specific asset. This encourages security researchers to report on all bugs with an in-scope impact, even if the affected assets are not in scope. For more information, please see [Best Practices: Primacy of Impact](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact) \n\nWhen submitting a report on Immunefiâ€™s dashboard, the security researcher should select the Primacy of Impact asset placeholder. If the team behind this project has multiple programs, those other programs are not covered under Primacy of Impact for this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nIf the project has any testnet and/or mock files, those will not be covered under Primacy of Impact.\n\nAll other impacts are considered under the Primacy of Rules, which means that they are bound by the terms and conditions set within this program.\n\n__Previous Audits and formal verification__\n\nLight Protocolâ€™s completed audit reports can be found below:\n\n- OtterSec - https://github.com/Lightprotocol/light-protocol/blob/main/audits/ottersec_v1_audit.pdf\n- Neodyme - https://github.com/Lightprotocol/light-protocol/blob/main/audits/neodyme_v1_audit.pdf\n- Reilabs - https://github.com/Lightprotocol/light-protocol/blob/main/audits/reilabs_circuits_formal_verification_report.pdf\n\nAny unfixed vulnerabilities  mentioned in these reports are not eligible for a reward.\n\n__Immunefi Standard Badge__\n\nBy adhering to Immunefiâ€™s best practice recommendations, the project has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209).",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.3](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/). \n\n__Reward Calculation for Critical Level Reports__\n\nFor critical smart contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD $50,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD $10,000 is to be rewarded in order to incentivize security researchers against withholding a critical bug report.\n\n__Repeatable Attack Limitations__\n\n- If the smart contract where the vulnerability exists can be upgraded or paused, only the initial attack will be considered for a reward. This is because the project can mitigate the risk of further exploitation by upgrading or pausing the component where the vulnerability exists. The reward amount will depend on the severity of the impact and the funds at risk. \n\n- For critical repeatable attacks on smart contracts that cannot be upgraded or paused, the project will consider the cumulative impact of the repeatable attacks for a reward. This is because the project cannot prevent the attacker from repeatedly exploiting the vulnerability until all funds are drained and/or other irreversible damage is done. Therefore, this warrants a reward equivalent to 10% of funds at risk, capped at the maximum critical reward. \n\n__Reward Calculation for High Level Reports__\n\n- High vulnerabilities concerning theft/permanent freezing of unclaimed yield/royalties, as well as arbitrary creation/deletion/permanent freezing of state, are rewarded within a range of USD $5,000 to USD $10,000  depending on the funds at risk, capped at the maximum high reward.\n\n- In the event of temporary freezing, the reward doubles from the full frozen value for every additional 24h that the funds are temporarily frozen, up until a max cap of the high reward. This is because as the duration of the freezing lengthens, the potential for greater damage and subsequent reputational harm intensifies. Thus, by increasing the reward proportionally with the frozen duration, the project ensures stronger incentives for bug disclosure of this nature.\n\n__Reward Payment Terms__\n\nPayouts are handled by the service providers of Light Protocol directly and are denominated in USD. However, payments are done in USDC.\n\nThe calculation of the net amount rewarded is based on the average price between CoinMarketCap.com and CoinGecko.com at the time the bug report was submitted. No adjustments are made based on liquidity availability.",
      "outOfScopeAndRules": "These assets are out of scope for this bug bounty program: client side libraries, sdks, cli, server, tests, test-utilities or code only used for testing such as the reference indexed Merkle tree.\n\nThese impacts are out of scope for this bug bounty program. \n\n__All Categories:__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n\n__Smart Contract Specific:__\n\n- Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks\n\n__Prohibited Activities:__\n\n- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "Light Protocolâ€™s codebase can be found at https://github.com/Lightprotocol/light-protocol.\n\nDocumentation and further resources can be found on https://docs.lightprotocol.com. \n\nFrom the assets listed above, only the latest releases are in scope.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Required",
          "PoC Required"
        ],
        "productType": [
          "Zero-Knowledge Proofs"
        ],
        "projectType": [
          "Infrastructure"
        ],
        "ecosystem": [
          "Solana"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $10,000 to USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $5,000 to USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $1,000 to USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      },
      "websiteUrl": null,
      "description": "Light Protocol introduces ZK Compression, a new primitive designed to scale Solanaâ€™s L1 while maintaining security and performance. It delivers significant cost savings for developers, addresses the problem of state growth, and provides a foundation for native ZK compute on Solana.\n",
      "githubUrl": null,
      "feasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)\n",
      "prohibitedActivites": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)\n",
      "responsiblePublicationCategory": "category_1",
      "knownIssues": [],
      "knownIssueAssurance": false,
      "outOfScopeBlockchain": null,
      "outOfScopeGeneral": null,
      "outOfScopeSmartContract": null,
      "outOfScopeWebAndApplications": null,
      "defaultOutOfScopeBlockchain": null,
      "defaultOutOfScopeSmartContract": null,
      "defaultOutOfScopeGeneral": null,
      "defaultOutOfScopeWebAndApplications": null,
      "defaultProhibitedActivities": null,
      "defaultFeasibilityLimitations": null,
      "customOutOfScopeInformation": null,
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Solana",
      "rewardsToken": "USDC",
      "eligibilityCriteria": [
        "no_ofac_sdn"
      ],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [],
      "programDocumentations": [],
      "premiumTriaging": true
    },
    "project": {
      "premiumTriaging": true,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "Light Protocol Bug Bounties",
      "description": "Find bugs and vulnerabilities on Light Protocol and get paid up to $50,000.",
      "url": "https://immunefi.com/bug-bounty/light-protocol",
      "ogImg": "/api/bounty/og-image?project=Light+Protocol"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
