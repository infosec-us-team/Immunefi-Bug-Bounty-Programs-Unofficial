{
  "pageProps": {
    "isAttackathon": false,
    "academyContent": null,
    "project": {
      "premiumTriaging": true,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "bounty": {
      "contentfulId": "5tYwzjVKC6BoGb4JRQRm1n",
      "id": "shardeum-ancillaries-boost",
      "slug": "shardeum-ancillaries-boost",
      "project": "Boost | Shardeum: Ancillaries",
      "maxBounty": 200000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1m6RmtetyAanvdJtFgER1S/2dd905210d46dcb763551541b3636dc7/Shardeum_Logo_Icon_Light_-_Square__1_.png",
      "launchDate": "2024-07-08T06:00:00.000Z",
      "endDate": "2024-08-14T06:00:00.000Z",
      "updatedDate": "2024-08-23T11:16:49.705Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "low",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "7Hu7rFWcgR8MF4bBM0ULti",
          "type": "websites_and_applications",
          "url": "https://github.com/shardeum/validator-gui/tree/dev",
          "description": "Validator GUI [3048]",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-07-08T06:00:00.000Z"
        },
        {
          "id": "4alDreMl20Q9b2xEciGKJ9",
          "type": "websites_and_applications",
          "url": "https://github.com/shardeum/validator-cli/tree/dev",
          "description": "Validator CLI [1871]",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-07-08T06:00:00.000Z"
        },
        {
          "id": "4SqJcuuAy4RVyUra6bop8R",
          "type": "websites_and_applications",
          "url": "https://github.com/shardeum/archive-server/tree/dev",
          "description": "Archive Server [13421]",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-07-08T06:00:00.000Z"
        },
        {
          "id": "3DQa3F1ZN7nsFtsoVqnS0g",
          "type": "websites_and_applications",
          "url": "https://github.com/shardeum/explorer-server/tree/dev",
          "description": "Explorer Server [14856]",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-07-08T06:00:00.000Z"
        },
        {
          "id": "49Q24KWSrJreWYb30a0HbR",
          "type": "websites_and_applications",
          "url": "https://github.com/shardeum/relayer-collector/tree/dev",
          "description": "Relayer Collection [8768]",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-07-08T06:00:00.000Z"
        },
        {
          "id": "2Qeb9cswUXhzzValYJQud4",
          "type": "websites_and_applications",
          "url": "https://github.com/shardeum/relayer-distributor/tree/dev",
          "description": "Relayer Distributor [2830]",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-07-08T06:00:00.000Z"
        },
        {
          "id": "XFNpYTwoxXunS2MUJ9Yro",
          "type": "websites_and_applications",
          "url": "https://github.com/shardeum/json-rpc-server/tree/dev",
          "description": "JSON RPC Server [7936]",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-07-08T06:00:00.000Z"
        },
        {
          "id": "Z3RzLAwR8bPwN0mfHxZI9",
          "type": "websites_and_applications",
          "url": "https://github.com/shardeum/lib-net/tree/dev",
          "description": "LIB NET [2742]",
          "isPrimacyOfImpact": null,
          "addedAt": "2024-07-08T06:00:00.000Z"
        }
      ],
      "impacts": [
        {
          "id": "Tnrt5O8ZpLqVJj6NS2Gl8",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3vkvGrWgdDhlJ2Q3z9rdXh",
          "title": "Retrieve sensitive data/files from a running server, such as: /etc/shadow, database passwords, blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7bQ1JahyaDNhm7m5HLJsqV",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as: Changing registration information, Commenting, Voting, Making trades, Withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "fA6oYXKwNHiW9cSHRasIy",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5tNMVO7ttDDtdDB0qBjF1R",
          "title": "Malicious interactions with an already-connected wallet, such as: Modifying transaction arguments or parameters, Substituting contract addresses, Submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4Vj199HZ7fS7hcZS0ZuToM",
          "title": "Taking down the application/website",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "79yZgBS6INlfLvCjcArEwV",
          "title": "Injection of malicious HTML or XSS through metadata",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "5Hu8NoSFzu1t6nEcZbJ03k",
          "title": "Injecting/modifying the static content on the target application without JavaScript (persistent), such as: HTML injection without JavaScript, Replacing existing text with arbitrary text, Arbitrary file uploads, etc",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "15QsA7Pmad7YcxEj5WB91q",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as: Email, Password of the victim etc.",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "015Ztyqs8kVbQdifNMGGdT",
          "title": "Redirecting users to malicious websites (open redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "5HJt2kNiXf1uhpiVk2PcUt",
          "title": "Improperly disclosing confidential user information, such as: Email address, Phone number, Physical address, etc.",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "4cdnsdlEc6YqgQv4W2UDAz",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, e.g: Changing the first/last name of user, Enabling/disabling notifications",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "1yHmyoPdUVHR1gDRBoRFMw",
          "title": "Injecting/modifying the static content on the target application without JavaScript (reflected), such as: Reflected HTML injection, Loading external site data",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "2sunHKdKmpJnw9rDTSbKwA",
          "title": "Changing details of other users (including modifying browser local storage) without already-connected wallet interaction and with significant user interaction, such as: Iframing leading to modifying the backend/browser state (must have a PoC)",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "61nAYy6tcfOsYIQRl0T3Si",
          "title": "Taking over broken or expired outgoing links, such as: Social media handles, etc.",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "7yg9yCGOV0nG33kx5JtlRl",
          "title": "Temporarily disabling user to access target site, such as: Locking up the victim from login, Cookie bombing, etc.",
          "type": "websites_and_applications",
          "severity": "low"
        }
      ],
      "programOverview": "Shardeum is an EVM-based, linearly scalable network offering low gas fees forever, while maintaining true decentralization and (hopefully) solid security. Shardeum is a large project and as such, will be split over two concurrent boosts. This boost, called Ancillaries, will cover the Web2 aspects of the project. This will cover seven components: Validator Gui, Validator CLI, Archiver, Explorer, Distrubutor/Collector libraries, RPC, and Shardus-Net networking code.\n\nThe Validator GUI is the website that optionally runs on each node. This allows the node operator to interact with their node. Despite our best efforts, the community likes to have this webpage available on the internet. The Validator CLI is the command line tool used to administer the node. The GUI calls commands in the CLI, or the operator can enter the commands manually. The Archive Server’s primary role is to hold the historical state of the network and accounts.Once the network has consensed on a state change, that information is saved to archive servers. The Explorer serves a similar function to [https://etherscan.io/](https://etherscan.io/). The relayer consists of two parts: collector and distributor. These two components work together to shuffle data between ancillaries, namely the archiver servers, RPC servers, and explorer. The RPC server acts as an API, allowing users to interact with the network and inject transactions. It is designed to be as compliant as possible with Ethereum’s RPC specification, though some differences exist. Finally, lib-net is the bottom level networking library for the Shardeum network. It is written in a mix of Rust and TypeScript.\n\nFor more information about Shardeum, please visit [https://shardeum.org/](https://shardeum.org/).\n\nShardeum provides rewards in USDC, denominated in USD.",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "The following reward terms are a summary, for the full details read our [Shardeum | Ancillaries Reward Distribution Terms](https://immunefisupport.zendesk.com/hc/en-us/articles/26482375730577-Shardeum-Ancillaries-Boost-Reward-Terms). \n\nThe reward pool will be distributed among participants. The size depends on the bugs found:\n- If no High or Critical severity bugs are found the reward pool will be **$100,000 USD**\n- If one or more High severity bugs are found the reward pool will be **$120,000 USD**\n- If 1 Critical severity bug is found the reward pool will be **$160,000 USD**\n- If 2 Critical severity bugs are found the reward pool will be **$180,000 USD**\n- If 4 or more Critical severity bugs are found the reward pool will be **$200,000 USD**\n\nFor this Boost, duplicates and private known issues are valid for a reward. \n\nPrivate known issues will unlock higher reward pools according to their severity level without any downgrade. For example, a Critical severity bug which was a private known issue would unlock the reward pool conditional on a Critical severity bug being found.\n\nRewards are distributed according to the impact of the vulnerability based on the Immunefi [Vulnerability Severity Classification System V2.3](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/). \n\n__Reward Payment Terms__\n\nPayouts are handled by the Shardeum team directly and are denominated in USD. However, payments are done in USDC.\n\nRewards will be distributed all at once based on Immunefi’s distribution formula after the event has concluded and the final bug reports have been resolved.\n\n__Insight Rewards Payment Terms__\n\nInsight Rewards: Portion of the Rewards Pool\n\nThe \"Insight\" severity was introduced on Boost & Attackathon programs to recognize contributions that extend beyond identifying immediate vulnerabilities. Currently, it's not an option to select the Insight severity when submitting a report. However, our team or program will designate it accordingly if applicable. \"Insights\" underscores our commitment to valuing all types of contributions that contribute to a more secure environment and will always be rewarded. [View more information about Insights](https://immunefisupport.zendesk.com/hc/en-us/articles/13333032674961-Severity-Classification-System?utm_source=immunefi).",
      "outOfScopeAndRules": "These impacts are out of scope for this bug bounty program. \n\n__All Categories:__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n\n__Websites and Apps__\n\n- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n- This does not exclude reflected HTML injection with or without JavaScript\n- This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass)\n- SPF/DMARC misconfigured records)\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering\n\n__Prohibited Activities:__\n\n- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "Shardeum’s up to date codebase can be found at [https://github.com/shardeum/](https://github.com/shardeum/).\n\n__Mid-Contest Code Updates__\n\nIn this contest bug fixes may be applied mid-contest. This is required for Shardeum to test changes on their beta networks in preparation for an imminent mainnet launch.\n\nThe project is to keep changes private as far as possible. When changes need to be made public, then the changelog will be updated here & in the [Shardeum Boost Discord channel](https://discord.com/invite/immunefi?utm_source=immunefi). Publicly fixed bugs are invalid and the scope is updated to the new code.\n\nAll bug reports before the fix was public will earn a reward. All bug reports after are invalid. If a new bug is introduced by their fix then it is valid for a reward.\n\n__Mid-Contest Changelog__\n\nCurrently none.\n\nPOCs should be tested against the most recent changes on the /tree/dev github repo.\n\n__Asset Accuracy Assurance__\n\nBugs found on assets incorrectly listed in-scope will be considered valid and be rewarded.\n\n__Private Known Issues Reward Policy__\n\nPrivate known issues, meaning known issues that were not publicly disclosed, are valid for a reward equal to that of a bug one severity lower.\n\n__Known Issue Assurance__\n\nShardeum commits to providing Known Issue Assurance to bug submissions through their program. This means that Shardeum will either disclose known issues publicly, or at the very least, privately via a self-reported bug submission. \n\nIn a potential scenario of a mediation, this allows for a more objective and streamlined process, in order to prove that an issue is known. Otherwise, assuming the bug report is valid, it would result in the report being considered as in-scope, and due a reward.\n\n__Primacy of Impact vs Primacy of Rules__\n\nShardeum adheres to the Primacy of Impact for all impacts.\n\nPrimacy of Impact means that the impact is prioritized rather than a specific asset. This encourages security researchers to report on all bugs with an in-scope impact, even if the affected assets are not in scope. For more information, please see [Best Practices: Primacy of Impact](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact). \n\nWhen submitting a report on Immunefi’s dashboard, the security researcher should select the Primacy of Impact asset placeholder. If the team behind this project has multiple programs, those other programs are not covered under Primacy of Impact for this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nIf the project has any testnet and/or mock files, those will not be covered under Primacy of Impact.\n\nAll other impacts are considered under the Primacy of Rules, which means that they are bound by the terms and conditions set within this program.\n\n__Eligibility Criteria__\n\nSecurity researchers who wish to participate must adhere to the rules of engagement set forth in this program and cannot be:\n- On OFACs SDN list \n- Official contributor, both past or present\n- Employees and/or individuals closely associated with the project \n- Security auditors that directly or indirectly participated in the audit review\n\n__Responsible Publication__\n\nWhitehats may publish their bug reports after they have been fixed & paid, or closed as invalid, with the following exceptions:\n- Bug reports in mediation may not be published until mediation has concluded and the bug report is resolved.\n\nImmunefi may publish bug reports submitted to this boosted bug bounty and a leaderboard of the participants and their earnings.\n\n__Feasibility Limitations__\n\nThe project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of [feasibility limitation standards](https://immunefisupport.zendesk.com/hc/en-us/articles/16913132495377-Feasibility-Limitation-Standards) which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n\n__Immunefi Standard Badge__\n\nBy adhering to Immunefi’s best practice recommendations, Shardeum has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209-The-Immunefi-Standard-Badge).",
      "impactsBody": "__Proof of Concept (PoC) Requirements__\n\nPOCs should be tested against the most recent changes on the /tree/dev github repo.\n\nA PoC, demonstrating the bug's impact, is required for this program and has to comply with the [Immunefi PoC Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules).\n\n__Whitehat Educational Resources & Technical Info__\nArchitecture documents: [https://docs.shardeum.org/docs/architecture/high-level-architecture](https://docs.shardeum.org/docs/architecture/high-level-architecture)\n\n__Is this an upgrade of an existing system? If so, which? And what are the main differences?__\n\nNo\n\n__Where do you suspect there may be bugs? Useful aspects of this question are:__\n\n- **Which parts of the code are you most concerned about?**\n    RPC server, Archive server, and GUI\n- **What attack vectors are you most concerned about?**\n    Highly concerned with the Validator GUI. At the time of writing and likely at the time of launch, the GUI will be homogenous for most of the nodes in the network. A critical bug here can quickly destroy the network as it will instantly impact every node.\n- **Which part(s) of the system do you want whitehats to attempt to break the most?**\n\tAll of it\n- **Are there any assumed invariants that you want whitehats to attempt to break?**\n    No\n\n__What external dependencies are there?__\n\nJust the packages listed in the package.json of each repo.\n\n__Where might whitehats confuse out-of-scope code to be in-scope?__\n\nSince we are doing two concurrent boosts with repositories that interact with each other, the specific boundaries of which vulnerability belongs to which boost may become confusing. A vulnerability may exist in the communication between an archive server and a validator for example. We would like to assure researchers that regardless of the final decision of which boost a particular vulnerability belongs to, the researcher will get paid. We may have final say over where a vuln belongs but the researcher will get their bounty pending the other eligibility factors.\n\n__Are there any unusual points about your protocol that may confuse whitehats?__\n\nThe role of archivers in the Shardeum network is a little different from similar components in other networks. Archivers have no role in a node joining or leaving the network. Archivers have no role in consensus or syncing. They are merely an archive of the history of the network.\n\nWeak subjectivity solutions do not apply to the Shardeum network because long range attacks are not relevant. Shardeum does not have probabilistic finality so there is no risk of a competing chain becoming valid.\n\n__What is the test suite setup information?__\n\nThe simple network test suite: [https://github.com/shardeum/simple-network-test](https://github.com/shardeum/simple-network-test)\nLarger test suite setup: [https://github.com/shardeum/json-rpc-server/tree/localtest/src/__tests__/integration](https://github.com/shardeum/json-rpc-server/tree/localtest/src/__tests__/integration)\n\n__Public Disclosure of Known Issues__\n\nBug reports covering previously-discovered bugs are not eligible for a reward within this program. This includes known issues that the project is aware of but has consciously decided not to “fix”, necessary code changes, or any implemented operational mitigating procedures that can lessen potential risk. \n\nList of [Shardeum’s Known Issues](https://immunefisupport.zendesk.com/hc/en-us/articles/26510185034641-List-of-Known-Issues-for-Shardeum-Core-and-Shardeum-Ancillaries-Boosts).\n\n__Previous Audits__\n\nShardeum’s completed audit reports can be found here: [Arcadia (draft)](https://docs.google.com/document/d/1OlmijVY2ga_7QEe8DYU-NTEXfAqMRpuwlduIofjmEwA/edit#heading=h.5uoc4mfz7mn4), [HashCloack](https://docs.google.com/document/d/1n11d40JZYgL33-F-Lw6FMuBP9AJSXvyg-xBpJhwOkUE/edit). Any unfixed vulnerabilities  mentioned in these reports are not eligible for a reward.",
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Required"
        ],
        "productType": [
          "Services"
        ],
        "projectType": [
          "Infrastructure"
        ],
        "ecosystem": [
          "Shardeum"
        ],
        "programType": [
          "Websites and Applications"
        ],
        "language": [
          "Rust",
          "Typescript"
        ]
      },
      "legacy": {
        "technologies": [
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "High",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "Medium",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "Low",
            "payout": "Portion of the Reward Pool"
          }
        ]
      },
      "evaluationEndDate": "2024-09-04T06:00:00.000Z",
      "boostedIntroStartingIn": "$200,000 USD in rewards is available for finding bugs on Shardeum Ancillaries, which will only cover the Web2 aspects of the project. \n\nNo KYC is required.\n\nShardeum will respond within 24 hours on weekdays to all bug reports. Any technical questions can be asked directly to the Shardeum technical team on [Immunefi’s Discord](https://discord.com/invite/immunefi) in the \"shardeum-ancillaries-boost\" channel.\n\nWhen the Boost has ended, Immunefi will publish an event-specific leaderboard and bug reports from the event.\n\nIn a few days after the launch, Shardeum will give a live technical walkthrough, hosted in the Immunefi Discord.\n\nJoin our Discord for more updates.",
      "boostedIntroLive": "$200,000 USD is available in rewards for finding bugs in Shardeum's codebase of about 55000 nSLOC. There is no KYC required.\n\nShardeum team will respond within 24 hours on weekdays to all bug reports. Any technical questions and support requests can be asked directly to Shardeum or Immunefi in the [Shardeum Boost Discord channel](https://discord.com/invite/immunefi).\n\nIn this contest bug fixes may be applied mid-contest. Further details are in the 'Assets In Scope' section.\n\nWhen the Boost has ended Immunefi will publish an event-specific leaderboard and bug reports from the event.",
      "boostedIntroEvaluating": "",
      "boostedIntroFinished": "",
      "rewardsToken": "USDC",
      "rewardsPool": 200000,
      "sourceLinesOfCode": 55472,
      "boostedSummaryReport": null,
      "inviteOnly": false,
      "hideAssetsInScope": null,
      "boostedLeaderboard": [],
      "features": [
        "Boost",
        "Managed Triage: Time Saver"
      ],
      "websiteUrl": null,
      "description": "Shardeum is an EVM-based, linearly scalable network offering low gas fees forever, while maintaining true decentralization and (hopefully) solid security. Shardeum is a large project and as such, will be split over two concurrent boosts. This boost, called Ancillaries, will cover the Web2 aspects of the project.",
      "githubUrl": null,
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)\n",
      "defaultProhibitedActivites": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)\n",
      "premiumTriaging": true
    },
    "isBoostedBountiesV3Enabled": true,
    "layoutProps": {
      "headerMarginBottom": "mb-12 lg:mb-16"
    },
    "metaData": {
      "title": "Boost | Shardeum: Ancillaries Bug Bounties | Immunefi",
      "description": "Find bugs and vulnerabilities on Boost | Shardeum: Ancillaries and get paid up to $200,000.",
      "url": "https://immunefi.com/boost/shardeum-ancillaries-boost",
      "ogImg": "/api/bounty/og-image?project=Boost+%7C+Shardeum%3A+Ancillaries"
    }
  },
  "__N_SSG": true
}
