{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "ajna",
      "slug": "ajna",
      "project": "Ajna",
      "maxBounty": 500000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4m4Pjo2cHctC9X2BehuwzG/369e5cbe66760c5849b9e0f127c08906/download.png",
      "launchDate": "2023-08-07T12:00+01:00",
      "updatedDate": "2023-10-05T15:28:19.928Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $10,000 to USD $500,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $1,000 to USD $10,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2PovKnVlDH3ActVqi4Mloy",
          "type": "smart_contract",
          "url": "https://etherscan.io/token/0x9a96ec9B57Fb64FbC60B423d1f4da7691Bd35079",
          "description": "Ajna Token",
          "isPrimacyOfImpact": null
        },
        {
          "id": "44jAXK8byx1RrNlaQoQ9aw",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe6F4d9711121e5304b30aC2Aae57E3b085ad3c4d",
          "description": "ERC20 Factory",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3gykbolNVrbAwIQEc3KsMx",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb8DA113516bfb986B7b8738a76C136D1c16c5609",
          "description": "ERC721 Factory",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5gzJWZEfxV66uUVwziPJl8",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x154FFf344f426F99E328bacf70f4Eb632210ecdc",
          "description": "PoolInfoUtils",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5fZ0XpA2oKX2B0dcAme0z4",
          "type": "smart_contract",
          "url": "https://immunefi.com",
          "description": "Primacy of Impact",
          "isPrimacyOfImpact": true
        }
      ],
      "impacts": [
        {
          "id": "6TBXAZv6axGCDdNAfBzCtz",
          "title": "Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4XrQbvgqG9sEQUJjdSuPsw",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "vp4B2Lg2cS6UCTDDi2RKQ",
          "title": "Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2UNwwfHYdzYV6fRt2vQPYv",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6Nst8i0vIHdYuHYHlTF2nh",
          "title": "Permanent freezing of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "58Ow74m2hWDSy4fDNCF6mR",
          "title": "Unauthorized minting of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6ivJOI3olFSR1vMC64zlAw",
          "title": "Predictable or manipulable RNG that results in abuse of the principal or NFT",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1pYCMOkqAhwM9PainZ8acC",
          "title": "Unintended alteration of what the NFT represents (e.g. token URI, payload, artistic content)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1NCKiAONvErrSmV5Fzjo8H",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "v1R6z3TgnyEp7oZQxH0Bp",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2r6jPNwRi73MOaCUXc55JS",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4zwKVQOyXuHDJcQimA7AY9",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3o8ZMED7enJq4q0wMPxma0",
          "title": "Temporary freezing NFTs",
          "type": "smart_contract",
          "severity": "high"
        }
      ],
      "programOverview": "The Ajna Protocol is a noncustodial, peer-to-pool, permissionless lending, borrowing and trading system that requires no governance or external price feeds to function. The protocol consists of pools with lenders and borrowers.\n\nFor more information about Ajna Finance, please visit [https://www.ajna.finance/](https://www.ajna.finance/)\n\nAjna Finance provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n__KYC Requirement__\n\nThe provision of KYC is required to receive a reward for this bug bounty program where the following information will be required to be provided:\n\n  - W9 or W8, Utility invoice (not a phone invoice) or bank statement within 3 months that shows the address, passport, and a drivers license, someone will have to undergo an OFAC search.\n  - KYC information is only required on confirmation of the validity of a bug report.   \n\n__Responsible Publication__\n\nAjna Finance adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication](https://immunefi.com/responsible-publication/) page.\n\n__Primacy of Impact vs Primacy of Rules__\n\nAjna Finance adheres to the Primacy of Impact for the following impacts:\n\n- Smart Contract: Critical: Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results\n- Smart Contract: Critical: Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n- Smart Contract: Critical: Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties\n- Smart Contract: Critical: Permanent freezing of funds\n- Smart Contract: Critical: Permanent freezing of NFTs\n- Smart Contract: Critical: Unauthorized minting of NFTs\n- Smart Contract: Critical: Unintended alteration of what the NFT represents (e.g. token URI, payload, artistic content)\n- Smart Contract: Critical: Protocol insolvency\n- Smart Contract: High: Theft of unclaimed yield\n- Smart Contract: High: Permanent freezing of unclaimed yield\n\nIf an impact is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nTestnet and mock files are not covered under the Primacy of Impact.\n\nAll other impacts are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n\n__Known Issue Assurance__\n\nAjna Finance commits to providing Known Issue Assurance to bug submissions through their program. This means that Ajna Finance will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \n\n__Immunefi Standard Badge__\n\nAjna Finance has satisfied the requirements for the [Immunefi Standard Badge,](https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-) which is given to projects that adhere to our best practices. \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \n\n__Reward Calculation for Critical Level Reports__\n\nFor critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD $500,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD $10,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.   \nCritical payouts above __USD $50,000__ are done by __Sherlock__ and will only be paid out for critical bugs that would result in a loss of funds and can be executed profitably, and this then excludes Sherlock critical bounty payouts for temporary freezing bugs. Sherlock will be covering __100%__ of all critical bug bounty payouts beyond __USD $50,000__ up to a max of __USD $200,000__. If further clarification is needed to decide on a Sherlock payout, the [coverage agreement](https://github.com/sherlock-protocol/sherlock-reports/blob/main/coverage-agreements/Ajna%20Coverage%20Agreement%202023.07.15.pdf) between Ajna and Sherlock should be referenced.\n\nHence, any critical severity report that does not qualify for a payout from Sherlock will have a maximum payout of __USD $300,000__.\n\n__Repeatable Attack Limitations__\n\nIn cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\n\n__Reward Calculation for High Level Reports__\n\nFor high Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD $10,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD $1,000 is to be rewarded in order to incentivize security researchers against withholding a bug report. \n\n__Restrictions on Security Researcher Eligibility__\n\nSecurity researchers who fall under any of the following are ineligible for a reward\n\n- Security researchers from OFAC-sanctioned countries\n\n__Public Disclosure of Known Issues__\n\nBug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. \n\n- (if rewards manager is deployed) If a user stakes their position in rewards manager, that position accrues rewards, then their bucket is bankrupted they are unable to retrieve their valid rewards for the prior epochs that occurred before the bankruptcy epoch.\n- Bug in rewards manager was discovered and fixed but the fix has not yet been merged to public facing github `ajna-core/src/RewardsManager.sol`. Since we can have multiple pools the rewardsClaimed mapping should be stored per pool per epoch rather than only per epoch.\n\n__Previous Audits__\n\nAjna Finance has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\n- [https://github.com/ajna-finance/audits/blob/main/code4rena/2023-05-code-arena-report.md](https://github.com/ajna-finance/audits/blob/main/code4rena/2023-05-code-arena-report.md)\n- [https://github.com/ajna-finance/audits/blob/main/prototech/13062023-Prototech-Ajna-Audit.pdf](https://github.com/ajna-finance/audits/blob/main/prototech/13062023-Prototech-Ajna-Audit.pdf)\n- [https://github.com/ajna-finance/audits/blob/main/sherlock/Contest1.md](https://github.com/ajna-finance/audits/blob/main/sherlock/Contest1.md)\n- [https://github.com/ajna-finance/audits/blob/main/tob/Ajna_Final_Report%2BFix_Review-4.24.2023.pdf](https://github.com/ajna-finance/audits/blob/main/tob/Ajna_Final_Report%2BFix_Review-4.24.2023.pdf)\n- [https://github.com/ajna-finance/audits/blob/main/quantstamp/Ajna_Finance_Governance_-_Report.pdf](https://github.com/ajna-finance/audits/blob/main/quantstamp/Ajna_Finance_Governance_-_Report.pdf)\n- [https://github.com/ajna-finance/audits/blob/main/sherlock/Ajna_Final_Report.pdf](https://github.com/ajna-finance/audits/blob/main/sherlock/Ajna_Final_Report.pdf)\n- [https://github.com/ajna-finance/audits/blob/main/README.md](https://github.com/ajna-finance/audits/blob/main/README.md)\n\n__Feasibility Limitations__\n\nBug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be out of scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:\n\n- Losses or other negative effects of the attack are inflicted upon Ajna Finance ecosystem participants \n- The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC is required for the following severity levels:\n- Smart Contract + Critical\n- Smart Contract + High\n\nAll PoCs submitted must comply with the Immunefi-wide [PoC Guidelines and Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules) Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\n\n__Reward Payment Terms__\n\nPayouts are handled by the __Ajna Foundation__ directly and are denominated in __USD__. Critical and high payouts are matched by __Sherlock__ with their bug bounty matching program and are done in __USDC__.\n",
      "outOfScopeAndRules": "These impacts are out of scope for this bug bounty program. \n\n__All Categories__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n\n__Smart Contracts__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks\n- Best practice recommendations\n",
      "assetsBodyV2": "All code of Ajna Finance can be found at [https://github.com/ajna-finance](https://github.com/ajna-finance).\n\nOther helpful links include:\n- ELI5 - [https://www.ajna.finance/eli5](https://www.ajna.finance/eli5)\n- Whitepaper - [https://www.ajna.finance/whitepaper](https://www.ajna.finance/whitepaper)\n- FAQs - [https://faqs.ajna.finance/](https://faqs.ajna.finance/)\n- Info Site - [https://info.ajna.finance/](https://info.ajna.finance/)",
      "impactsBody": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\nTo be eligible for Sherlock reward, impact from the table below must be demonstrated where all thefts must be profitable and all freezing must be reasonably priced for impact. The four following impacts are the only impacts in scope for a Sherlock payout:\n\n  - Smart Contracts: Critical: Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Smart Contracts: Critical: Permanent Freezing of funds\n  - Smart Contracts: Critical: Theft of unclaimed yield\n  - Smart Contracts: Critical: Permanent freezing of unclaimed yield\n",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Lending"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH",
          "Avalanche",
          "Optimism",
          "Polygon",
          "Arbitrum"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $10,000 to USD $500,000"
          },
          {
            "level": "High",
            "payout": "USD $1,000 to USD $10,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Ajna Protocol is a noncustodial, peer-to-pool, permissionless lending, borrowing and trading system that requires no governance or external price feeds to function. The protocol consists of pools with lenders and borrowers.\"), mdx(\"p\", null, \"For more information about Ajna Finance, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.ajna.finance/\"\n  }, \"https://www.ajna.finance/\")), mdx(\"p\", null, \"Ajna Finance provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"KYC Requirement\")), mdx(\"p\", null, \"The provision of KYC is required to receive a reward for this bug bounty program where the following information will be required to be provided:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"W9 or W8, Utility invoice (not a phone invoice) or bank statement within 3 months that shows the address, passport, and a drivers license, someone will have to undergo an OFAC search.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"KYC information is only required on confirmation of the validity of a bug report.   \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Responsible Publication\")), mdx(\"p\", null, \"Ajna Finance adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/responsible-publication/\"\n  }, \"Responsible Publication\"), \" page.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Primacy of Impact vs Primacy of Rules\")), mdx(\"p\", null, \"Ajna Finance adheres to the Primacy of Impact for the following impacts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: Critical: Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: Critical: Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: Critical: Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: Critical: Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: Critical: Permanent freezing of NFTs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: Critical: Unauthorized minting of NFTs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: Critical: Unintended alteration of what the NFT represents (e.g. token URI, payload, artistic content)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: Critical: Protocol insolvency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: High: Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: High: Permanent freezing of unclaimed yield\")), mdx(\"p\", null, \"If an impact is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\"), mdx(\"p\", null, \"Testnet and mock files are not covered under the Primacy of Impact.\"), mdx(\"p\", null, \"All other impacts are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Known Issue Assurance\")), mdx(\"p\", null, \"Ajna Finance commits to providing Known Issue Assurance to bug submissions through their program. This means that Ajna Finance will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Immunefi Standard Badge\")), mdx(\"p\", null, \"Ajna Finance has satisfied the requirements for the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-\"\n  }, \"Immunefi Standard Badge,\"), \" which is given to projects that adhere to our best practices. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The Ajna Protocol is a noncustodial, peer-to-pool, permissionless lending, borrowing and trading system that requires no governance or external price feeds to function. The protocol consists of pools with lenders and borrowers.</p><p>For more information about Ajna Finance, please visit <a href=\"https://www.ajna.finance/\">https://www.ajna.finance/</a></p><p>Ajna Finance provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. </p><p><strong>KYC Requirement</strong></p><p>The provision of KYC is required to receive a reward for this bug bounty program where the following information will be required to be provided:</p><ul><li>W9 or W8, Utility invoice (not a phone invoice) or bank statement within 3 months that shows the address, passport, and a drivers license, someone will have to undergo an OFAC search.</li><li>KYC information is only required on confirmation of the validity of a bug report.   </li></ul><p><strong>Responsible Publication</strong></p><p>Ajna Finance adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our <a href=\"https://immunefi.com/responsible-publication/\">Responsible Publication</a> page.</p><p><strong>Primacy of Impact vs Primacy of Rules</strong></p><p>Ajna Finance adheres to the Primacy of Impact for the following impacts:</p><ul><li>Smart Contract: Critical: Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results</li><li>Smart Contract: Critical: Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Smart Contract: Critical: Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties</li><li>Smart Contract: Critical: Permanent freezing of funds</li><li>Smart Contract: Critical: Permanent freezing of NFTs</li><li>Smart Contract: Critical: Unauthorized minting of NFTs</li><li>Smart Contract: Critical: Unintended alteration of what the NFT represents (e.g. token URI, payload, artistic content)</li><li>Smart Contract: Critical: Protocol insolvency</li><li>Smart Contract: High: Theft of unclaimed yield</li><li>Smart Contract: High: Permanent freezing of unclaimed yield</li></ul><p>If an impact is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.</p><p>Testnet and mock files are not covered under the Primacy of Impact.</p><p>All other impacts are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.</p><p><strong>Known Issue Assurance</strong></p><p>Ajna Finance commits to providing Known Issue Assurance to bug submissions through their program. This means that Ajna Finance will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. </p><p><strong>Immunefi Standard Badge</strong></p><p>Ajna Finance has satisfied the requirements for the <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-\">Immunefi Standard Badge,</a> which is given to projects that adhere to our best practices. </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Calculation for Critical Level Reports\")), mdx(\"p\", null, \"For critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD $500,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD $10,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Critical payouts above \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD $50,000\"), \" are done by \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Sherlock\"), \" and will only be paid out for critical bugs that would result in a loss of funds and can be executed profitably, and this then excludes Sherlock critical bounty payouts for temporary freezing bugs. Sherlock will be covering \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"100%\"), \" of all critical bug bounty payouts beyond \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD $50,000\"), \" up to a max of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD $200,000\"), \". If further clarification is needed to decide on a Sherlock payout, the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/sherlock-protocol/sherlock-reports/blob/main/coverage-agreements/Ajna%20Coverage%20Agreement%202023.07.15.pdf\"\n  }, \"coverage agreement\"), \" between Ajna and Sherlock should be referenced.\"), mdx(\"p\", null, \"Hence, any critical severity report that does not qualify for a payout from Sherlock will have a maximum payout of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD $300,000\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Repeatable Attack Limitations\")), mdx(\"p\", null, \"In cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Calculation for High Level Reports\")), mdx(\"p\", null, \"For high Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD $10,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD $1,000 is to be rewarded in order to incentivize security researchers against withholding a bug report. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Restrictions on Security Researcher Eligibility\")), mdx(\"p\", null, \"Security researchers who fall under any of the following are ineligible for a reward\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Security researchers from OFAC-sanctioned countries\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Public Disclosure of Known Issues\")), mdx(\"p\", null, \"Bug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(if rewards manager is deployed) If a user stakes their position in rewards manager, that position accrues rewards, then their bucket is bankrupted they are unable to retrieve their valid rewards for the prior epochs that occurred before the bankruptcy epoch.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bug in rewards manager was discovered and fixed but the fix has not yet been merged to public facing github \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ajna-core/src/RewardsManager.sol\"), \". Since we can have multiple pools the rewardsClaimed mapping should be stored per pool per epoch rather than only per epoch.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Previous Audits\")), mdx(\"p\", null, \"Ajna Finance has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ajna-finance/audits/blob/main/code4rena/2023-05-code-arena-report.md\"\n  }, \"https://github.com/ajna-finance/audits/blob/main/code4rena/2023-05-code-arena-report.md\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ajna-finance/audits/blob/main/prototech/13062023-Prototech-Ajna-Audit.pdf\"\n  }, \"https://github.com/ajna-finance/audits/blob/main/prototech/13062023-Prototech-Ajna-Audit.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ajna-finance/audits/blob/main/sherlock/Contest1.md\"\n  }, \"https://github.com/ajna-finance/audits/blob/main/sherlock/Contest1.md\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ajna-finance/audits/blob/main/tob/Ajna_Final_Report%2BFix_Review-4.24.2023.pdf\"\n  }, \"https://github.com/ajna-finance/audits/blob/main/tob/Ajna_Final_Report%2BFix_Review-4.24.2023.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ajna-finance/audits/blob/main/quantstamp/Ajna_Finance_Governance_-_Report.pdf\"\n  }, \"https://github.com/ajna-finance/audits/blob/main/quantstamp/Ajna\", mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Finance_Governance\"), \"-_Report.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ajna-finance/audits/blob/main/sherlock/Ajna_Final_Report.pdf\"\n  }, \"https://github.com/ajna-finance/audits/blob/main/sherlock/Ajna_Final_Report.pdf\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ajna-finance/audits/blob/main/README.md\"\n  }, \"https://github.com/ajna-finance/audits/blob/main/README.md\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Feasibility Limitations\")), mdx(\"p\", null, \"Bug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be out of scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Losses or other negative effects of the attack are inflicted upon Ajna Finance ecosystem participants \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Proof of Concept (PoC) Requirements\")), mdx(\"p\", null, \"A PoC is required for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract + Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract + High\")), mdx(\"p\", null, \"All PoCs submitted must comply with the Immunefi-wide \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"PoC Guidelines and Rules.\"), \" Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Payment Terms\")), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Ajna Foundation\"), \" directly and are denominated in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD\"), \". Critical and high payouts are matched by \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Sherlock\"), \" with their bug bounty matching program and are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. </p><p><strong>Reward Calculation for Critical Level Reports</strong></p><p>For critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD $500,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD $10,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.<br/>\n<!-- -->Critical payouts above <strong>USD $50,000</strong> are done by <strong>Sherlock</strong> and will only be paid out for critical bugs that would result in a loss of funds and can be executed profitably, and this then excludes Sherlock critical bounty payouts for temporary freezing bugs. Sherlock will be covering <strong>100%</strong> of all critical bug bounty payouts beyond <strong>USD $50,000</strong> up to a max of <strong>USD $200,000</strong>. If further clarification is needed to decide on a Sherlock payout, the <a href=\"https://github.com/sherlock-protocol/sherlock-reports/blob/main/coverage-agreements/Ajna%20Coverage%20Agreement%202023.07.15.pdf\">coverage agreement</a> between Ajna and Sherlock should be referenced.</p><p>Hence, any critical severity report that does not qualify for a payout from Sherlock will have a maximum payout of <strong>USD $300,000</strong>.</p><p><strong>Repeatable Attack Limitations</strong></p><p>In cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.</p><p><strong>Reward Calculation for High Level Reports</strong></p><p>For high Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD $10,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD $1,000 is to be rewarded in order to incentivize security researchers against withholding a bug report. </p><p><strong>Restrictions on Security Researcher Eligibility</strong></p><p>Security researchers who fall under any of the following are ineligible for a reward</p><ul><li>Security researchers from OFAC-sanctioned countries</li></ul><p><strong>Public Disclosure of Known Issues</strong></p><p>Bug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. </p><ul><li>(if rewards manager is deployed) If a user stakes their position in rewards manager, that position accrues rewards, then their bucket is bankrupted they are unable to retrieve their valid rewards for the prior epochs that occurred before the bankruptcy epoch.</li><li>Bug in rewards manager was discovered and fixed but the fix has not yet been merged to public facing github <code>ajna-core/src/RewardsManager.sol</code>. Since we can have multiple pools the rewardsClaimed mapping should be stored per pool per epoch rather than only per epoch.</li></ul><p><strong>Previous Audits</strong></p><p>Ajna Finance has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.</p><ul><li><a href=\"https://github.com/ajna-finance/audits/blob/main/code4rena/2023-05-code-arena-report.md\">https://github.com/ajna-finance/audits/blob/main/code4rena/2023-05-code-arena-report.md</a></li><li><a href=\"https://github.com/ajna-finance/audits/blob/main/prototech/13062023-Prototech-Ajna-Audit.pdf\">https://github.com/ajna-finance/audits/blob/main/prototech/13062023-Prototech-Ajna-Audit.pdf</a></li><li><a href=\"https://github.com/ajna-finance/audits/blob/main/sherlock/Contest1.md\">https://github.com/ajna-finance/audits/blob/main/sherlock/Contest1.md</a></li><li><a href=\"https://github.com/ajna-finance/audits/blob/main/tob/Ajna_Final_Report%2BFix_Review-4.24.2023.pdf\">https://github.com/ajna-finance/audits/blob/main/tob/Ajna_Final_Report%2BFix_Review-4.24.2023.pdf</a></li><li><a href=\"https://github.com/ajna-finance/audits/blob/main/quantstamp/Ajna_Finance_Governance_-_Report.pdf\">https://github.com/ajna-finance/audits/blob/main/quantstamp/Ajna<em>Finance_Governance</em>-_Report.pdf</a></li><li><a href=\"https://github.com/ajna-finance/audits/blob/main/sherlock/Ajna_Final_Report.pdf\">https://github.com/ajna-finance/audits/blob/main/sherlock/Ajna_Final_Report.pdf</a></li><li><a href=\"https://github.com/ajna-finance/audits/blob/main/README.md\">https://github.com/ajna-finance/audits/blob/main/README.md</a></li></ul><p><strong>Feasibility Limitations</strong></p><p>Bug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be out of scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:</p><ul><li>Losses or other negative effects of the attack are inflicted upon Ajna Finance ecosystem participants </li><li>The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem</li></ul><p><strong>Proof of Concept (PoC) Requirements</strong></p><p>A PoC is required for the following severity levels:</p><ul><li>Smart Contract + Critical</li><li>Smart Contract + High</li></ul><p>All PoCs submitted must comply with the Immunefi-wide <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">PoC Guidelines and Rules.</a> Bug report submissions without a PoC when a PoC is required will not be provided with a reward.</p><p><strong>Reward Payment Terms</strong></p><p>Payouts are handled by the <strong>Ajna Foundation</strong> directly and are denominated in <strong>USD</strong>. Critical and high payouts are matched by <strong>Sherlock</strong> with their bug bounty matching program and are done in <strong>USDC</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These impacts are out of scope for this bug bounty program. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"All Categories\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts on test files and configuration files unless stated otherwise in the bug bounty program\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring basic economic and governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity impacts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts from Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>These impacts are out of scope for this bug bounty program. </p><p><strong>All Categories</strong></p><ul><li>Impacts requiring attacks that the reporter has already exploited themselves, leading to damage</li><li>Impacts caused by attacks requiring access to leaked keys/credentials</li><li>Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code</li><li>Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production</li><li>Best practice recommendations</li><li>Feature requests</li><li>Impacts on test files and configuration files unless stated otherwise in the bug bounty program</li></ul><p><strong>Smart Contracts</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Impacts requiring basic economic and governance attacks (e.g. 51% attack)</li><li>Lack of liquidity impacts</li><li>Impacts from Sybil attacks</li><li>Impacts involving centralization risks</li><li>Best practice recommendations</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All code of Ajna Finance can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ajna-finance\"\n  }, \"https://github.com/ajna-finance\"), \".\"), mdx(\"p\", null, \"Other helpful links include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ELI5 - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.ajna.finance/eli5\"\n  }, \"https://www.ajna.finance/eli5\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Whitepaper - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.ajna.finance/whitepaper\"\n  }, \"https://www.ajna.finance/whitepaper\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FAQs - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://faqs.ajna.finance/\"\n  }, \"https://faqs.ajna.finance/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Info Site - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://info.ajna.finance/\"\n  }, \"https://info.ajna.finance/\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All code of Ajna Finance can be found at <a href=\"https://github.com/ajna-finance\">https://github.com/ajna-finance</a>.</p><p>Other helpful links include:</p><ul><li>ELI5 - <a href=\"https://www.ajna.finance/eli5\">https://www.ajna.finance/eli5</a></li><li>Whitepaper - <a href=\"https://www.ajna.finance/whitepaper\">https://www.ajna.finance/whitepaper</a></li><li>FAQs - <a href=\"https://faqs.ajna.finance/\">https://faqs.ajna.finance/</a></li><li>Info Site - <a href=\"https://info.ajna.finance/\">https://info.ajna.finance/</a></li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"), mdx(\"p\", null, \"To be eligible for Sherlock reward, impact from the table below must be demonstrated where all thefts must be profitable and all freezing must be reasonably priced for impact. The four following impacts are the only impacts in scope for a Sherlock payout:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contracts: Critical: Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contracts: Critical: Permanent Freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contracts: Critical: Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contracts: Critical: Permanent freezing of unclaimed yield\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p><p>To be eligible for Sherlock reward, impact from the table below must be demonstrated where all thefts must be profitable and all freezing must be reasonably priced for impact. The four following impacts are the only impacts in scope for a Sherlock payout:</p><ul><li>Smart Contracts: Critical: Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Smart Contracts: Critical: Permanent Freezing of funds</li><li>Smart Contracts: Critical: Theft of unclaimed yield</li><li>Smart Contracts: Critical: Permanent freezing of unclaimed yield</li></ul>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
