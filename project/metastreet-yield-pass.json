{
  "pageProps": {
    "bounty": {
      "contentfulId": "6VAelWeBFYd3GJAJ4vzYvx",
      "id": "metastreet-yield-pass",
      "slug": "metastreet-yield-pass",
      "project": "Metastreet Yield Pass",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6Z2NqsvWb26ZGv8TB8iTrl/f2925f48fe12587a258e8c512914f095/metastreet.png",
      "launchDate": "2025-03-07T04:50:17.000Z",
      "endDate": null,
      "updatedDate": "2025-03-07T16:08:27.158Z",
      "kyc": false,
      "rewards": [
        {
          "id": 14700,
          "assetType": "smart_contract",
          "severity": "critical",
          "rewardModel": "range",
          "maxReward": 50000,
          "minReward": 15000,
          "rewardCalculationPercentage": 10
        },
        {
          "id": 14701,
          "assetType": "smart_contract",
          "severity": "high",
          "rewardModel": "range",
          "maxReward": 15000,
          "minReward": 3000
        },
        {
          "id": 14702,
          "assetType": "smart_contract",
          "severity": "medium",
          "rewardModel": "range",
          "maxReward": 3000,
          "minReward": 500
        }
      ],
      "audits": [
        {
          "id": "3WRjzLp1svgEplYa4Gq7yh",
          "url": "https://docs.metastreet.xyz/yield-capture-layer/audits",
          "auditor": "All Audits",
          "date": "2025-03-07"
        }
      ],
      "assets": [
        {
          "id": "6PEWwo4uE3WYQap9OVpQDE",
          "type": "smart_contract",
          "url": "https://github.com/metastreet-labs/metastreet-yield-pass/tree/main/src/YieldPass.sol",
          "description": "src/YieldPass.sol",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-03-07T04:50:17.000Z"
        },
        {
          "id": "5lyfBK0Z9UfDj6fdYLkR80",
          "type": "smart_contract",
          "url": "https://github.com/metastreet-labs/metastreet-yield-pass/tree/main/src/YieldPassToken.sol",
          "description": "src/YieldPassToken.sol",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-03-07T04:50:17.000Z"
        },
        {
          "id": "2oTd2M8obl8uneld1ARSC7",
          "type": "smart_contract",
          "url": "https://github.com/metastreet-labs/metastreet-yield-pass/tree/main/src/NodePassToken.sol",
          "description": "src/NodePassToken.sol",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-03-07T04:50:17.000Z"
        },
        {
          "id": "65nD2UM5yigJnmKexXcIAb",
          "type": "smart_contract",
          "url": "https://github.com/metastreet-labs/metastreet-yield-pass/tree/main/src/interfaces/IYieldPass.sol",
          "description": "src/interfaces/IYieldPass.sol",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-03-07T04:50:17.000Z"
        },
        {
          "id": "6zgwa7TgqaHyNUBxvEzUGu",
          "type": "smart_contract",
          "url": "https://github.com/metastreet-labs/metastreet-yield-pass/tree/main/src/interfaces/IYieldAdapter.sol",
          "description": "src/interfaces/IYieldAdapter.sol",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-03-07T04:50:17.000Z"
        },
        {
          "id": "3Ee77Xk8MY8pa7UtuNME0L",
          "type": "smart_contract",
          "url": "https://github.com/metastreet-labs/metastreet-yield-pass/tree/main/src/yieldAdapters/aethir/AethirYieldAdapter.sol",
          "description": "src/yieldAdapters/aethir/AethirYieldAdapter.sol",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-03-07T04:50:17.000Z"
        },
        {
          "id": "7lvEu50nSn7P5jVo75Vst1",
          "type": "smart_contract",
          "url": "https://github.com/metastreet-labs/metastreet-yield-pass/tree/main/src/yieldAdapters/xai/XaiYieldAdapter.sol",
          "description": "src/yieldAdapters/xai/XaiYieldAdapter.sol",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-03-07T04:50:17.000Z"
        }
      ],
      "impacts": [
        {
          "id": 25,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed yield"
        },
        {
          "id": 5397,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of NFTs, whether at-rest or in-motion"
        },
        {
          "id": 5398,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of unclaimed yield, whether at-rest or in-motion"
        },
        {
          "id": 5399,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of NFTs"
        },
        {
          "id": 5400,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Temporary freezing of yield"
        },
        {
          "id": 5401,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Temporary freezing of NFTs"
        },
        {
          "id": 5402,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Impacts caused by griefing with no economic damage to any user on the network"
        }
      ],
      "programOverview": "MetaStreet Yield Pass is a yield tokenization pool for node NFTs. Yield Pass enables node owners to delegate the productivity of their nodes, to trade their future yield, to borrow against them as collateral, and to sell their future ownership.\n\nFor more information about MetaStreet Yield Pass, please visit https://docs.metastreet.xyz/yield-capture-layer/overview.\n\nMetaStreet Yield Pass provides rewards in USDC on Ethereum and most L2s, denominated in USD. \n\nFor more details about the payment process, please view the Rewards by Threat Level section further below.",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "__Rewards by Threat Level__\n\n__Reward Calculation for Critical Level Reports__\n\nFor critical smart contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD $50,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD $15,000 is to be rewarded in order to incentivize security researchers against withholding a critical bug report.\n\n__Repeatable Attack Limitations__\n\n- If the smart contract where the vulnerability exists can be upgraded or paused, only the initial attack will be considered for a reward. \n- The amount of funds at risk will be calculated with the impact of the first attack being at 100% and then a reduction of 25% from the amount of the first attack for every [14400 blocks] the attack needs for subsequent attacks from the first attack, rounded down\n\n__Reward Calculation for High Level Reports__\n\n- High impacts concerning theft/permanent freezing of unclaimed yield/royalties are rewarded within a range of $3,000 to $15,000 with the reward calculated based on 100% of the funds at risk, though capped at the maximum high reward.  \n- In the event of temporary freezing, the reward doubles from the full frozen value for every additional 24h that the funds are temporarily frozen, up until a max cap of the high reward.",
      "outOfScopeAndRules": null,
      "assetsBodyV2": null,
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Required",
          "PoC Not Required"
        ],
        "productType": [],
        "projectType": [],
        "ecosystem": [],
        "programType": [
          "Smart Contract"
        ],
        "language": [],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [],
        "web_rewards": []
      },
      "websiteUrl": null,
      "description": "MetaStreet Yield Pass is a yield tokenization pool for node NFTs. Yield Pass enables node owners to delegate the productivity of their nodes, to trade their future yield, to borrow against them as collateral, and to sell their future ownership.\n",
      "githubUrl": null,
      "feasibilityLimitations": null,
      "prohibitedActivites": null,
      "responsiblePublicationCategory": "category_2",
      "knownIssues": [],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeSmartContract": null,
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": "- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n  - This does not exclude reflected HTML injection with or without JavaScript\n  - This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass)\n- SPF/DMARC misconfigured records)\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering",
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": "- Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks\n- Impacts involving unsupported tokens (tokens with transfer hooks (e.g. ERC777), fee-on-transfer tokens, blocklistable tokens, and non-standard ERC20 or ERC721 tokens)\n- Claiming of unsolicited airdrop",
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum",
      "rewardsToken": "USDC",
      "eligibilityCriteria": [],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [],
      "programDocumentations": [
        {
          "id": 209,
          "title": "Documentations",
          "description": "Technical",
          "url": "https://github.com/metastreet-labs/metastreet-yield-pass/tree/main/docs"
        },
        {
          "id": 210,
          "title": "Documentations",
          "description": "Overview",
          "url": "https://docs.metastreet.xyz/yield-capture-layer/overview"
        }
      ],
      "primacy": "primacy_of_impact",
      "newProgramRewardsEnabled": true,
      "findingsUrl": null,
      "premiumTriaging": false
    },
    "project": {
      "features": [],
      "premiumTriaging": false,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "Metastreet Yield Pass Bug Bounties",
      "description": "Find bugs and vulnerabilities on Metastreet Yield Pass and get paid up to $50,000.",
      "url": "https://immunefi.com/bug-bounty/metastreet-yield-pass",
      "ogImg": "/api/bounty/og-image?project=Metastreet+Yield+Pass"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
