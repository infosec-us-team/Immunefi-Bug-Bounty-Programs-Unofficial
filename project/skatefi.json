{
  "pageProps": {
    "bounty": {
      "contentfulId": "7qXySvnhtaaW0tbxW02ebl",
      "id": "skatefi",
      "slug": "skatefi",
      "project": "SkateFi",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2ByPTsOCo1ihurbQOM0PMK/3cab96ed1b2b59f5c28e8462e9b4c7df/Range-logo.jpeg",
      "launchDate": "2023-11-30T09:00:00.000Z",
      "endDate": null,
      "updatedDate": "2024-11-11T09:18:43.427Z",
      "kyc": false,
      "rewards": [
        {
          "id": 3650,
          "assetType": "smart_contract",
          "severity": "high",
          "rewardModel": "fixed",
          "fixedReward": 2500
        },
        {
          "id": 3651,
          "assetType": "smart_contract",
          "severity": "medium",
          "rewardModel": "fixed",
          "fixedReward": 2000
        },
        {
          "id": 8115,
          "assetType": "smart_contract",
          "severity": "critical",
          "rewardModel": "range",
          "maxReward": 50000,
          "minReward": 20000,
          "rewardCalculationPercentage": 10
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2hi592a2ZvDJZVS4L1wNs0",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/contracts/tree/sushiswap-integration",
          "description": "sushiswap-integration",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-11-30T09:00:00.000Z",
          "fund": 0
        },
        {
          "id": "1JiG28x5eYom5LfxOUPXYo",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/contracts/tree/wrap-bnb-implementation-one",
          "description": "wrap-bnb-implementation-one",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-11-30T09:00:00.000Z",
          "fund": 0
        },
        {
          "id": "77EPYWP3d5B4tvISg1q0Cz",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/contracts/tree/sickleswap",
          "description": "sickleswap",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-11-30T09:00:00.000Z",
          "fund": 0
        },
        {
          "id": "uEi3sf45xCxmQDQA9KiPw",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/contracts/tree/fusionx",
          "description": "fusionx",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-11-30T09:00:00.000Z",
          "fund": 0
        },
        {
          "id": "2VzZHQwcRgUHb7beCXHWWF",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/contracts/tree/izumi-implementation",
          "description": "izumi-implementation",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-11-30T09:00:00.000Z",
          "fund": 0
        },
        {
          "id": "4OLZWHE5drAiNK5MnYgque",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/contracts/tree/retro-impl",
          "description": "retro-impl",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-11-30T09:00:00.000Z",
          "fund": 0
        },
        {
          "id": "5zSc2BCJVszUjMjq1GAmu4",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/contracts/tree/base-uniswap-deployment",
          "description": "base-uniswap-deployment",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-11-30T09:00:00.000Z",
          "fund": 0
        },
        {
          "id": "6C0hpYAQu2N7i3oRvzg2He",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/contracts/tree/camelot-integration",
          "description": "camelot-integration",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-11-30T09:00:00.000Z",
          "fund": 0
        },
        {
          "id": "5tKOuxiAFmyMIEcS9OZB3S",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/contracts/tree/quickswap",
          "description": "quickswap",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-11-30T09:00:00.000Z",
          "fund": 0
        },
        {
          "id": "2benZY4hS26KIAs5Ak9zFH",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/contracts/tree/agni-deployment",
          "description": "agni-deployment",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-11-30T09:00:00.000Z",
          "fund": 0
        },
        {
          "id": "3e1LWanR6hszkiRrfLzTut",
          "type": "smart_contract",
          "url": "https://immunefi.com/",
          "description": "Primacy of Impact",
          "isPrimacyOfImpact": true,
          "isSafeHarbor": null,
          "addedAt": "2023-12-08T08:45:33.503Z",
          "fund": 0
        },
        {
          "id": "4zuUZPiLjViVHQMrVbRwiL",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/vertex-vault",
          "description": "Range Vertex Vault",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-07-09T07:24:02.126Z",
          "fund": 0
        },
        {
          "id": "3xusNT2jvPHFu617IQD2i2",
          "type": "smart_contract",
          "url": "https://github.com/Range-Protocol/vertex-vault/tree/blitx",
          "description": "Range Blitz Vault",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-07-09T07:24:34.248Z",
          "fund": 0
        }
      ],
      "impacts": [
        {
          "id": 23,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed yield"
        },
        {
          "id": 25,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed yield"
        },
        {
          "id": 27,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of funds"
        },
        {
          "id": 31,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)"
        },
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 17,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds"
        },
        {
          "id": 22,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Protocol insolvency"
        }
      ],
      "programOverview": "SkateFi is an infrastructure provider for on-chain money managers. This bug bounty program pertains to the SkateFi’s vaults smart contracts that are built on top of Uniswap V3-like concentrated liquidity AMMs for arbitrary liquidity provision: one-sided, lop-sided, and balanced. The vaults provide a Uniswap-V2 like interface which enables providing fungible liquidity.\n\nThe vaults have managers that operate them and liquidity providers that provide liquidity to the vaults. The managers are KYCed and trustful entities that can choose to deploy a vault’s liquidity across specific tick ranges in the pool, remove liquidity and perform swap of vault’s assets on the pool. The managers would operate a sophisticated off-chain strategy to decide when to add or remove liquidity from pool for maximum returns for the liquidity providers, and perform low slippage swaps on the pool when vault’s liquidity is out of the pool.\n\nThe architecture of the smart contracts code comprises factory and upgradeable vaults. A Factory can deploy new vaults or upgrade implementation of existing vaults by the factory owner. Ownership of the factory is with a Timelock contract, which is behind a multisig wallet for proposing a creation or upgrading of vaults. The Timelock contract currently has a 24 hours delay between proposal and execution of operations.\n\nFor more information about SkateFi, please visit [https://app.skatefi.org/](https://app.skatefi.org/)\n\nSkateFi provides rewards in USDT. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n\n__Primacy of Impact vs Primacy of Rules__\n\nSkateFi adheres to the Primacy of Impact for the following impacts:\n- Smart Contract - Critical - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n- Smart Contract - Critical - Permanent freezing of funds\n- Smart Contract - Critical - Protocol insolvency\n- Smart Contract - High - Theft of unclaimed yield\n- Smart Contract - High - Permanent freezing of unclaimed yield\n- Smart Contract - High - Temporary freezing of funds\n- Smart Contract - Medium - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n\nIf an impact is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nTestnet and mock files are not covered under the Primacy of Impact. \n\nAll other impacts are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n\n__Known Issue Assurance__\n\nSkateFi commits to providing Known Issue Assurance to bug submissions through their program. This means that SkateFi will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \n\n__Immunefi Standard Badge__\n\nSkateFi has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-), which is given to projects that adhere to our best practices.",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \n\n__Reward Calculation for Critical Level Reports__\n\nFor critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 50 000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 20 000 is to be rewarded in order to incentivize security researchers against withholding a bug report.\n\n__Repeatable Attack Limitations__\n\nIn cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\n\n__Public Disclosure of Known Issues__\n\nBug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. \n- All of the issues described in the following audit reports should be considered known.\n\n__Previous Audits__\n\nSkateFi has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\n- [https://github.com/Range-Protocol/vertex-vault/blob/main/Vertex-Vault-Report.pdf](https://github.com/Range-Protocol/vertex-vault/blob/main/Vertex-Vault-Report.pdf)\n- [https://github.com/Range-Protocol/contracts/blob/master/audits/Halborn-Audit.pdf](https://github.com/Range-Protocol/contracts/blob/master/audits/Halborn-Audit.pdf)\n- [https://github.com/Range-Protocol/contracts/blob/master/audits/Veridise-Audit.pdf](https://github.com/Range-Protocol/contracts/blob/master/audits/Veridise-Audit.pdf)\n- [https://github.com/Range-Protocol/contracts/blob/izumi-implementation/audits/Salusec-Audit.pdf](https://github.com/Range-Protocol/contracts/blob/izumi-implementation/audits/Salusec-Audit.pdf)\n- [https://github.com/Range-Protocol/contracts/blob/master/audits/Certik-Audit.pdf](https://github.com/Range-Protocol/contracts/blob/master/audits/Certik-Audit.pdf)\n- https://github.com/Range-Protocol/contracts/blob/master/audits/range-veridise-vault-diff-audit.pdf\n\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC is required for the following severity levels:\n- Smart Contract - Critical - PoC Required\n- Smart Contract - High - PoC Required\n- Smart Contract - Medium - PoC Required\n\nAll PoCs submitted must comply with the Immunefi-wide [PoC Guidelines and Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules) Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\n\n__Other Terms and Information__\n\nAll the listed assets above are branches from the same repository. The codebase across all of the branches is similar in functionality and is built on top of either Uniswap V3, Pancakeswap V3 or Algebra, with Swapsicle using Algebra Integral The following files/directories are included in audit scope from all branches.\n- contracts/RangeProtocolVaultStorage.sol\n- contracts/RangeProtocolVault.sol\n- contracts/RangeProtocolFactory.sol\n- contracts/access/OwnableUpgradeable.sol\n- contracts/interfaces\n- contracts/errors\n\nThe following additional files/directories are included in the branches named next to them:\n- [https://github.com/Range-Protocol/contracts/tree/wrap-bnb-implementation-one/contracts/libraries](https://github.com/Range-Protocol/contracts/tree/wrap-bnb-implementation-one/contracts/libraries) (wrap-bnb-implementation-one)\n- [https://github.com/Range-Protocol/contracts/tree/izumi-implementation/contracts/libraries ](https://github.com/Range-Protocol/contracts/tree/izumi-implementation/contracts/libraries)(izumi-implementation)\n\n__Reward Payment Terms__\n\nPayouts are handled by the Range Protocol team directly and are denominated in USD. However, payments are done in USDT.",
      "outOfScopeAndRules": null,
      "assetsBodyV2": null,
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Required",
          "PoC Not Required",
          "Primacy of Impact"
        ],
        "productType": [
          "AMM",
          "Derivatives",
          "Lending",
          "Liquid Staking"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Arbitrum",
          "BSC",
          "Base",
          "Blast",
          "ETH",
          "Manta",
          "Mantle",
          "Merlin",
          "Polygon",
          "Scroll",
          "ZetaChain"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $20,000 to USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $2,500"
          },
          {
            "level": "Medium",
            "payout": "USD $2,000"
          }
        ],
        "web_rewards": []
      },
      "websiteUrl": null,
      "description": "SkateFi is an infrastructure provider for on-chain money managers. This bug bounty program pertains to the SkateFi’s vaults smart contracts that are built on top of Uniswap V3-like concentrated liquidity AMMs for arbitrary liquidity provision: one-sided, lop-sided, and balanced. The vaults provide a Uniswap-V2 like interface which enables providing fungible liquidity.",
      "githubUrl": null,
      "feasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)\n",
      "prohibitedActivites": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)\n",
      "responsiblePublicationCategory": "category_3",
      "knownIssues": [],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": null,
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": null,
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": null,
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum",
      "rewardsToken": "USDT",
      "eligibilityCriteria": [],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [
        {
          "id": 94,
          "title": "SkateFi Codebase",
          "description": "Program Codebase",
          "url": "https://github.com/Range-Protocol/contracts"
        }
      ],
      "programDocumentations": [
        {
          "id": 70,
          "title": "SkateFi Documentation",
          "description": "Program Documentation",
          "url": "https://range-protocol.gitbook.io/range-protocol/"
        }
      ],
      "primacy": "primacy_of_impact",
      "newProgramRewardsEnabled": true,
      "findingsUrl": null,
      "premiumTriaging": false
    },
    "project": {
      "features": [],
      "premiumTriaging": false,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "SkateFi Bug Bounties",
      "description": "Find bugs and vulnerabilities on SkateFi and get paid up to $50,000.",
      "url": "https://immunefi.com/bug-bounty/skatefi/",
      "ogImg": "/api/bounty/og-image/?project=SkateFi&slug=skatefi"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
