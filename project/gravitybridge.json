{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "gravitybridge",
      "slug": "gravitybridge",
      "project": "Cronos Gravity Bridge (Testnet)",
      "maxBounty": 200000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3HrC4JviLdpujzZ2B0nPoZ/6b5393dc5bb8fda6c683941789da47c4/Cronos_Bridge-Blue.svg",
      "launchDate": "2022-07-19T20:30-06:00",
      "updatedDate": "2023-02-03T15:18:43.005Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "Up to USD $200,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "Up to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "Up to USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $200,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Up to USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "Up to USD $200,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "Up to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "Up to USD $25,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "1KNNzlbzcfvCCO4oGMCDJj",
          "type": "blockchain_dlt",
          "url": "https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1/module",
          "description": "Gravity Module"
        },
        {
          "id": "5zw7vNkEVJaGkjJ9ZbIrTx",
          "type": "blockchain_dlt",
          "url": "https://github.com/crypto-org-chain/cronos/tree/main/x/cronos",
          "description": "CRONOS/Gravity Node Integration"
        },
        {
          "id": "3x5PCLULuC6VRXMDop60UD",
          "type": "smart_contract",
          "url": "https://github.com/crypto-org-chain/gravity-bridge/blob/v2.0.0-cronos-alpha1/solidity/contracts/Gravity.sol",
          "description": "Gravity.sol"
        },
        {
          "id": "gugaAKW4Mfjckwnohxve1",
          "type": "smart_contract",
          "url": "https://github.com/crypto-org-chain/gravity-bridge/blob/v2.0.0-cronos-alpha1/solidity/contracts/EthGravityWrapper.sol",
          "description": "EthGravityWrapper.sol"
        },
        {
          "id": "1fpKbLLp42gOHdz5gnNNqb",
          "type": "smart_contract",
          "url": "https://github.com/crypto-org-chain/gravity-bridge/blob/v2.0.0-cronos-alpha1/solidity/contracts/ReentrantERC20.sol",
          "description": "ReentrantERC20.sol"
        },
        {
          "id": "3ygH51lV4Tm7NjN39g9WZW",
          "type": "smart_contract",
          "url": "https://goerli.etherscan.io/address/0x2C962ecb54D53B54144b7f297158FA23e3abb871#code",
          "description": "EthGravityWrapper"
        },
        {
          "id": "5ObL3QmIuLEDJj59tqJ7Tp",
          "type": "websites_and_applications",
          "url": "https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1/orchestrator",
          "description": "Gravity Orchestrator/Relayer"
        }
      ],
      "impacts": [
        {
          "id": "23YI73D5vPpsxOTShIGRFx",
          "title": "Risks leading to loss/theft of funds",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "7v9zYrqLZJa6vVpO8lfNy1",
          "title": "Funds locked permanently",
          "type": "blockchain_dlt",
          "severity": "critical"
        },
        {
          "id": "mOkyIUST29fAALa8VVOig",
          "title": "Risks leading to loss/theft of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2hEzT5f7Xk0buziehf8ARK",
          "title": "Funds locked permanently",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "BPEXd8e4VzXbdgKZq47ts",
          "title": "Risks leading to loss/theft of funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "NtMNGMMHOaCsET4nDozzV",
          "title": "Funds locked permanently",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "19ZAMjFCxiToULFllNrYTl",
          "title": "Unauthorised modification of validator sets and/or voting power that negatively impacts consensus.",
          "type": "blockchain_dlt",
          "severity": "high"
        },
        {
          "id": "5ZpI9KDYykV2jX12CdDJLH",
          "title": "Unauthorised modification of validator sets and/or voting power that negatively impacts consensus.",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "404DLddGczVHE8ES6e1YeI",
          "title": "Unauthorised modification of validator sets and/or voting power that negatively impacts consensus.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2n533XdHHgP4Ki50SvAGiw",
          "title": "Risks that could lead to the chain halting",
          "type": "blockchain_dlt",
          "severity": "medium"
        },
        {
          "id": "2oE1OodGJSBz9eYRxx8JdL",
          "title": "Risks that could lead to the chain halting",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5GCqva8ZtmACp87c1ndCm8",
          "title": "Risks that could lead to the chain  halting",
          "type": "websites_and_applications",
          "severity": "medium"
        }
      ],
      "programOverview": "An open, decentralized bridge that unlocks the power of interoperability & liquidity between blockchain ecosystems.\n\nThe Cronos Gravity Bridge is positioned to become the canonical bridge for ERC20 tokens between Ethereum mainnet and Cronos, the first EVM-compatible chain built on Cosmos SDK and a top 10 chain by total value locked.\n\nThe Cronos Gravity Bridge has been deployed for testing between the Ethereum Goerli testnet and a dedicated Cronos testnet (“Pioneer 11”) as announced below:\n\n  - [General announcement](https://medium.com/cronos-chain/introducing-the-cronos-gravity-bridge-testnet-pioneer-11-5c115469bf19)\n  - [Release notes](https://medium.com/cronos-chain/cronos-gravity-bridge-testnet-pioneer-11-release-notes-c74479646b90)\n\nFor more information about Gravity Bridge, please visit [https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1](https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1)\n\nThe goal of this bounty is to encourage security researchers to assess the Cronos Gravity Bridge in its current testnet implementation, in order to ultimately make it possible for end-users to safely transfer cryptocurrencies across multiple chains of the Ethereum and Cosmos ecosystems.\n\nThe bug bounty is for Testnet only",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "All app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nAll rewards for the Cronos Gravity Bridge bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward of USD 1 000 for each severity level, rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program.\n\nCronos Gravity Bridge requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. Once the report is deemed valid, you will need to fill up the KYC form [here](https://docs.google.com/forms/d/e/1FAIpQLScNamV48ENwK78AMAqRHTFaAjcFJ9JWE2V6jlfQaQjur6SS0Q/viewform). The collection of this information will be done by the Cronos Gravity Bridge team. \n\nPayouts are handled by __Cronos Labs__ and are denominated in USD. Payouts are done in __USDC and USDT only__, with the choice of the ratio at the discretion of the Cronos team. \n\nDisclaimer:\nCronos Labs reserves the ultimate decision and will determine at its discretion whether a vulnerability is eligible for a reward and the amount of the award depending on severity.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks that rely on social engineering\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).\n  - Previously known vulnerabilities in Tendermint and or/any other fork of these.\n  - Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.\n  - Previously known vulnerabilities in the gravity bridge and or/any other fork of these.\n  - Previously known vulnerable libraries without a working Proof of Concept.\n  - Public Zero-day vulnerabilities\n  - Feature request\n  - Best practices\n  - ERC777 and like where it allows callback will not be supported\n  - Deflationary token will not be supported\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Vulnerabilities used to enumerate or confirm the existence of objects or individuals such as identities, nodes, contracts, tokens and funds that do not disclose sensitive information.\n  - Vulnerabilities requiring unlikely user actions\n  - Attacks requiring privileged access from within the organization\n  - Vulnerabilities only exploitable on out-of-date browsers or platforms\n  - Vulnerabilities in third party applications which make use of Crypto.com’s Gravity bridge.\n  - Reports from automated tools or scans, without exploitability demonstration\n  - Use of known vulnerable libraries without actual proof of concept\n  - Vulnerabilities that require physical access to a user's device\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Gravity Bridge can be found at [https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1/solidity](https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1/solidity). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf an impact can be caused to any other asset managed by Gravity Bridge that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to Critical and High impacts.\n\nPlease note that currently create logicCalls is yet to be implemented by the integrated chain (Cronos). This means this function does not work end to end. The implementation will be a future work.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Blockchain/DLT",
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $200,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $100,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $25,000"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $200,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $100,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $25,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $200,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $100,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $25,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An open, decentralized bridge that unlocks the power of interoperability & liquidity between blockchain ecosystems.\"), mdx(\"p\", null, \"The Cronos Gravity Bridge is positioned to become the canonical bridge for ERC20 tokens between Ethereum mainnet and Cronos, the first EVM-compatible chain built on Cosmos SDK and a top 10 chain by total value locked.\"), mdx(\"p\", null, \"The Cronos Gravity Bridge has been deployed for testing between the Ethereum Goerli testnet and a dedicated Cronos testnet (\\u201CPioneer 11\\u201D) as announced below:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://medium.com/cronos-chain/introducing-the-cronos-gravity-bridge-testnet-pioneer-11-5c115469bf19\"\n  }, \"General announcement\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://medium.com/cronos-chain/cronos-gravity-bridge-testnet-pioneer-11-release-notes-c74479646b90\"\n  }, \"Release notes\"))), mdx(\"p\", null, \"For more information about Gravity Bridge, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1\"\n  }, \"https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1\")), mdx(\"p\", null, \"The goal of this bounty is to encourage security researchers to assess the Cronos Gravity Bridge in its current testnet implementation, in order to ultimately make it possible for end-users to safely transfer cryptocurrencies across multiple chains of the Ethereum and Cosmos ecosystems.\"), mdx(\"p\", null, \"The bug bounty is for Testnet only\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>An open, decentralized bridge that unlocks the power of interoperability &amp; liquidity between blockchain ecosystems.</p><p>The Cronos Gravity Bridge is positioned to become the canonical bridge for ERC20 tokens between Ethereum mainnet and Cronos, the first EVM-compatible chain built on Cosmos SDK and a top 10 chain by total value locked.</p><p>The Cronos Gravity Bridge has been deployed for testing between the Ethereum Goerli testnet and a dedicated Cronos testnet (“Pioneer 11”) as announced below:</p><ul><li><a href=\"https://medium.com/cronos-chain/introducing-the-cronos-gravity-bridge-testnet-pioneer-11-5c115469bf19\">General announcement</a></li><li><a href=\"https://medium.com/cronos-chain/cronos-gravity-bridge-testnet-pioneer-11-release-notes-c74479646b90\">Release notes</a></li></ul><p>For more information about Gravity Bridge, please visit <a href=\"https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1\">https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1</a></p><p>The goal of this bounty is to encourage security researchers to assess the Cronos Gravity Bridge in its current testnet implementation, in order to ultimately make it possible for end-users to safely transfer cryptocurrencies across multiple chains of the Ethereum and Cosmos ecosystems.</p><p>The bug bounty is for Testnet only</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"All rewards for the Cronos Gravity Bridge bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward of USD 1 000 for each severity level, rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program.\"), mdx(\"p\", null, \"Cronos Gravity Bridge requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. Once the report is deemed valid, you will need to fill up the KYC form \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.google.com/forms/d/e/1FAIpQLScNamV48ENwK78AMAqRHTFaAjcFJ9JWE2V6jlfQaQjur6SS0Q/viewform\"\n  }, \"here\"), \". The collection of this information will be done by the Cronos Gravity Bridge team. \"), mdx(\"p\", null, \"Payouts are handled by \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cronos Labs\"), \" and are denominated in USD. Payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC and USDT only\"), \", with the choice of the ratio at the discretion of the Cronos team. \"), mdx(\"p\", null, \"Disclaimer:\\nCronos Labs reserves the ultimate decision and will determine at its discretion whether a vulnerability is eligible for a reward and the amount of the award depending on severity.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>All rewards for the Cronos Gravity Bridge bug bounty program are scaled based on an internally established team criteria, taking into account the exploitability of the bug, the impact it causes, and the likelihood of the vulnerability presenting itself, which is especially factored in with bug reports requiring multiple conditions to be met that are currently not in-place. However, there is a minimum reward of USD 1 000 for each severity level, rewards will be provided at the determined fair value by the team depending on these conditions, assuming that the bug report is in-scope of the bug bounty program.</p><p>Cronos Gravity Bridge requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. Once the report is deemed valid, you will need to fill up the KYC form <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScNamV48ENwK78AMAqRHTFaAjcFJ9JWE2V6jlfQaQjur6SS0Q/viewform\">here</a>. The collection of this information will be done by the Cronos Gravity Bridge team. </p><p>Payouts are handled by <strong>Cronos Labs</strong> and are denominated in USD. Payouts are done in <strong>USDC and USDT only</strong>, with the choice of the ratio at the discretion of the Cronos team. </p><p>Disclaimer:\nCronos Labs reserves the ultimate decision and will determine at its discretion whether a vulnerability is eligible for a reward and the amount of the award depending on severity.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that rely on social engineering\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities in Tendermint and or/any other fork of these.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerabilities in the gravity bridge and or/any other fork of these.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Previously known vulnerable libraries without a working Proof of Concept.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public Zero-day vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature request\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ERC777 and like where it allows callback will not be supported\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deflationary token will not be supported\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of objects or individuals such as identities, nodes, contracts, tokens and funds that do not disclose sensitive information.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities only exploitable on out-of-date browsers or platforms\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities in third party applications which make use of Crypto.com\\u2019s Gravity bridge.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reports from automated tools or scans, without exploitability demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use of known vulnerable libraries without actual proof of concept\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities that require physical access to a user's device\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks that rely on social engineering</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles</li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li><li>Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).</li><li>Previously known vulnerabilities in Tendermint and or/any other fork of these.</li><li>Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.</li><li>Previously known vulnerabilities in the gravity bridge and or/any other fork of these.</li><li>Previously known vulnerable libraries without a working Proof of Concept.</li><li>Public Zero-day vulnerabilities</li><li>Feature request</li><li>Best practices</li><li>ERC777 and like where it allows callback will not be supported</li><li>Deflationary token will not be supported</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Vulnerabilities used to enumerate or confirm the existence of objects or individuals such as identities, nodes, contracts, tokens and funds that do not disclose sensitive information.</li><li>Vulnerabilities requiring unlikely user actions</li><li>Attacks requiring privileged access from within the organization</li><li>Vulnerabilities only exploitable on out-of-date browsers or platforms</li><li>Vulnerabilities in third party applications which make use of Crypto.com’s Gravity bridge.</li><li>Reports from automated tools or scans, without exploitability demonstration</li><li>Use of known vulnerable libraries without actual proof of concept</li><li>Vulnerabilities that require physical access to a user&#x27;s device</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Gravity Bridge can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1/solidity\"\n  }, \"https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1/solidity\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by Gravity Bridge that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to Critical and High impacts.\"), mdx(\"p\", null, \"Please note that currently create logicCalls is yet to be implemented by the integrated chain (Cronos). This means this function does not work end to end. The implementation will be a future work.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Gravity Bridge can be found at <a href=\"https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1/solidity\">https://github.com/crypto-org-chain/gravity-bridge/tree/v2.0.0-cronos-alpha1/solidity</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p><p>If an impact can be caused to any other asset managed by Gravity Bridge that isn’t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to Critical and High impacts.</p><p>Please note that currently create logicCalls is yet to be implemented by the integrated chain (Cronos). This means this function does not work end to end. The implementation will be a future work.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
