{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "xendfinance",
      "slug": "xendfinance",
      "project": "Xend Finance",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2pAp8eXEKR1FJEXjjAJIMx/d1a74df3f35bbbffd6b7e7d079470a51/Xend_Finance_Logo__1_.jpeg",
      "launchDate": "2021-10-28T11:00-05:00",
      "updatedDate": "2022-10-24T09:28:53.935Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $20,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "5fqwstDtrUpnbw4ulT4EMb",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x454d6F10B18f391adD499cE39aCD5bFCD424B601#code",
          "description": "xvUSDT (Proxy Contract)"
        },
        {
          "id": "11y3QX8l546X86z4nnaSa8",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x50c9fBf77CBC8FF1b23a8ED61725C325bedC3C86#code",
          "description": "xvUSDC (Proxy Contract)"
        },
        {
          "id": "5QvBJaDfes3L2qLPPkrxCs",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x3de1Fe0039EC99773DBEE5608823FECDeFB8D9D0#code",
          "description": "xvBUSD (Proxy Contract)"
        },
        {
          "id": "5N9QpW1567hjzkIoXQddV2",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x0D87591801E26F516000a659aCc5417D6772a85D#code",
          "description": "StrategyUgoHawkVenusUSDTFarm (Proxy Contract)"
        },
        {
          "id": "5eyJoLxcL40Lmvxdvw7FBx",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xDA2969621B5c8bcEa32712455051AEf4f066F6a1#code",
          "description": "StrategyUgoHawkVenusUSDCFarm (Proxy Contract)"
        },
        {
          "id": "4KnqQJe9QcM5EOec4YJi30",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x6B6209192443221FE137Fb30E4363FC737D3C4d6#code",
          "description": "StrategyUgoHawkVenusBUSDFarm (Proxy Contract)"
        },
        {
          "id": "54UBOF0kNHfmwsLlgiikLj",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x143afc138978Ad681f7C7571858FAAA9D426CecE#code",
          "description": "xUSDT (Proxy Contract)"
        },
        {
          "id": "76UfJc2dh8mJRBn65pOe98",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xd01a0971F03D0ddC8D621048d92A1632b2dB7356#code",
          "description": "xUSDC (Proxy Contract)"
        },
        {
          "id": "2cC1ukJnAyuvK2Jw6OKOQz",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xDD3afc5D5476FC327812B84ae2ccf66C011e6d67#code",
          "description": "xAAVE (Proxy Contract)"
        },
        {
          "id": "7m33dUKqTQctcUBRBAQ0HL",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x0b26E76D8617b20Ec9fe0811BE2dCbF3438cc27F#code",
          "description": "xWBTC (Proxy Contract)"
        },
        {
          "id": "3rJZazkDJPo9MHeyfNbkIO",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xb9e2346462553e8ab2ef5c298b20e0ef1c7a05b5#code",
          "description": " EarnAPRWithPool (Proxy Contract)"
        },
        {
          "id": "6jF3a9yF0oJGGqEXaclrXn",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x680f2d603DB851664CAB439d4aA1f633b6f7077F#code",
          "description": "APRWithPoolOracle (Proxy Contract)"
        }
      ],
      "impacts": [
        {
          "id": "23iUe6g3GaEvw86I5kwUCF",
          "title": "Loss of user funds staked (principal) by freezing or theft",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4YbrGP7AZhcsmAYyhWkgMW",
          "title": "Loss of governance funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "66ebTYOs1IKSqTpbn0JtPf",
          "title": "Loss of treasury funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "40SdjlU640VMIMPsGW4uLk",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6QOsPV5qdunDICHWqAU0bX",
          "title": "Temporary freezing of funds for any amount of time",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "H9FtiBBKgiF1jFlQN8MHW",
          "title": "Unable to call smart contract",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4ZafmVYD5BfItCx1XQApOS",
          "title": "Smart contract fails to deliver promised returns",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Xend Finance (XF) is a decentralized Credit Union protocol built to optimize, improve and add value to the core operations of credit unions globally. Xend Finance gives individuals, groups, cooperatives and credit unions in countries with unstable currencies access to a global trustless and stable-currency savings, lending, investing and borrowing network. \n\nXend Finance has also developed a Layer 2 DeFi infrastructure that automatically seeks out the best yields in DeFi by optimizing and automatically aggregating existing DeFi lending protocols. This infrastructure was designed to maintain high yield with influx of users and capital from traditional finance into decentralized finance as well as provide a better user experience for investors seeking the best yields in DeFi. \n\nCentralized and Fiat savings platforms are always limited by fees and cross-border payment regulations that limit investing in other countries. With Xend Finance, anyone, whether individuals, cooperatives or credit unions, anywhere in the world can save, lend and invest in different DeFi protocols and start earning interests instantly. \n\nFor more information about Xend Finance, please visit [https://xend.finance](https://xend.finance/).  \n\nFor connecting with the Xend Finance Dev team:  via Telegram: [https://t.me/XendFinanceDevs](https://t.me/XendFinanceDevs)  and  via Discord: [https://discord.gg/QPH2M3nbku](https://discord.gg/QPH2M3nbku).\n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked by freezing or theft\n  - Theft of unclaimed yield\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns\n  - Temporary freezing of funds\n  - Loss of governance funds\n  - Loss of treasury funds",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nNo PoC is required for smart contract bug reports. \n\nKnown issues from their previous audits are considered out-of-scope:\n\n[https://omniscia.io/xend-finance-x-vault/static-analysis](https://omniscia.io/xend-finance-x-vault/static-analysis)\n\n[https://omniscia.io/xend-finance-polygon-xtokens/static-analysis](https://omniscia.io/xend-finance-polygon-xtokens/static-analysis)\n\n[https://mega.nz/file/OYUVjAqA#amYLyJOV82MSc5BHqOacoV_zxw9k9P6co35Gdd86iUY](https://mega.nz/file/OYUVjAqA#amYLyJOV82MSc5BHqOacoV_zxw9k9P6co35Gdd86iUY)\n\n[https://mega.nz/file/ad0y3YJS#oVAuekM1uc4VAQc4AeyEleJRBB025QD36CMwShUoTXA](https://mega.nz/file/ad0y3YJS#oVAuekM1uc4VAQc4AeyEleJRBB025QD36CMwShUoTXA)\n\nPayouts are handled by the __Xend Finance__ team directly and are denominated in USD. Payouts are done in __USDT__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Xend Finance can be found at \n[https://github.com/xendfinance/x-vault](https://github.com/xendfinance/x-vault) \nand\n[https://github.com/xendfinance/xAuto-Polygon](https://github.com/xendfinance/xAuto-Polygon)\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Crosschain Liquidity",
          "Lending",
          "Stablecoin",
          "Staking",
          "Yield Aggregator"
        ],
        "projectType": [
          "Defi",
          "NFT"
        ],
        "ecosystem": [
          "BSC",
          "ETH",
          "Polygon"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "JavaScript",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $20,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Xend Finance (XF) is a decentralized Credit Union protocol built to optimize, improve and add value to the core operations of credit unions globally. Xend Finance gives individuals, groups, cooperatives and credit unions in countries with unstable currencies access to a global trustless and stable-currency savings, lending, investing and borrowing network. \"), mdx(\"p\", null, \"Xend Finance has also developed a Layer 2 DeFi infrastructure that automatically seeks out the best yields in DeFi by optimizing and automatically aggregating existing DeFi lending protocols. This infrastructure was designed to maintain high yield with influx of users and capital from traditional finance into decentralized finance as well as provide a better user experience for investors seeking the best yields in DeFi. \"), mdx(\"p\", null, \"Centralized and Fiat savings platforms are always limited by fees and cross-border payment regulations that limit investing in other countries. With Xend Finance, anyone, whether individuals, cooperatives or credit unions, anywhere in the world can save, lend and invest in different DeFi protocols and start earning interests instantly. \"), mdx(\"p\", null, \"For more information about Xend Finance, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://xend.finance/\"\n  }, \"https://xend.finance\"), \".  \"), mdx(\"p\", null, \"For connecting with the Xend Finance Dev team:  via Telegram: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://t.me/XendFinanceDevs\"\n  }, \"https://t.me/XendFinanceDevs\"), \"  and  via Discord: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://discord.gg/QPH2M3nbku\"\n  }, \"https://discord.gg/QPH2M3nbku\"), \".\"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of user funds staked by freezing or theft\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unable to call smart contract\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart contract fails to deliver promised returns\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Temporary freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of governance funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of treasury funds\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Xend Finance (XF) is a decentralized Credit Union protocol built to optimize, improve and add value to the core operations of credit unions globally. Xend Finance gives individuals, groups, cooperatives and credit unions in countries with unstable currencies access to a global trustless and stable-currency savings, lending, investing and borrowing network. </p><p>Xend Finance has also developed a Layer 2 DeFi infrastructure that automatically seeks out the best yields in DeFi by optimizing and automatically aggregating existing DeFi lending protocols. This infrastructure was designed to maintain high yield with influx of users and capital from traditional finance into decentralized finance as well as provide a better user experience for investors seeking the best yields in DeFi. </p><p>Centralized and Fiat savings platforms are always limited by fees and cross-border payment regulations that limit investing in other countries. With Xend Finance, anyone, whether individuals, cooperatives or credit unions, anywhere in the world can save, lend and invest in different DeFi protocols and start earning interests instantly. </p><p>For more information about Xend Finance, please visit <a href=\"https://xend.finance/\">https://xend.finance</a>.  </p><p>For connecting with the Xend Finance Dev team:  via Telegram: <a href=\"https://t.me/XendFinanceDevs\">https://t.me/XendFinanceDevs</a>  and  via Discord: <a href=\"https://discord.gg/QPH2M3nbku\">https://discord.gg/QPH2M3nbku</a>.</p><p>This bug bounty program is focused on their smart contracts and is focused on preventing:</p><ul><li>Loss of user funds staked by freezing or theft</li><li>Theft of unclaimed yield</li><li>Unable to call smart contract</li><li>Smart contract fails to deliver promised returns</li><li>Temporary freezing of funds</li><li>Loss of governance funds</li><li>Loss of treasury funds</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain \")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain </strong></p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\"), mdx(\"p\", null, \"No PoC is required for smart contract bug reports. \"), mdx(\"p\", null, \"Known issues from their previous audits are considered out-of-scope:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://omniscia.io/xend-finance-x-vault/static-analysis\"\n  }, \"https://omniscia.io/xend-finance-x-vault/static-analysis\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://omniscia.io/xend-finance-polygon-xtokens/static-analysis\"\n  }, \"https://omniscia.io/xend-finance-polygon-xtokens/static-analysis\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mega.nz/file/OYUVjAqA#amYLyJOV82MSc5BHqOacoV_zxw9k9P6co35Gdd86iUY\"\n  }, \"https://mega.nz/file/OYUVjAqA#amYLyJOV82MSc5BHqOacoV_zxw9k9P6co35Gdd86iUY\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mega.nz/file/ad0y3YJS#oVAuekM1uc4VAQc4AeyEleJRBB025QD36CMwShUoTXA\"\n  }, \"https://mega.nz/file/ad0y3YJS#oVAuekM1uc4VAQc4AeyEleJRBB025QD36CMwShUoTXA\")), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Xend Finance\"), \" team directly and are denominated in USD. Payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDT\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.</p><p>No PoC is required for smart contract bug reports. </p><p>Known issues from their previous audits are considered out-of-scope:</p><p><a href=\"https://omniscia.io/xend-finance-x-vault/static-analysis\">https://omniscia.io/xend-finance-x-vault/static-analysis</a></p><p><a href=\"https://omniscia.io/xend-finance-polygon-xtokens/static-analysis\">https://omniscia.io/xend-finance-polygon-xtokens/static-analysis</a></p><p><a href=\"https://mega.nz/file/OYUVjAqA#amYLyJOV82MSc5BHqOacoV_zxw9k9P6co35Gdd86iUY\">https://mega.nz/file/OYUVjAqA#amYLyJOV82MSc5BHqOacoV_zxw9k9P6co35Gdd86iUY</a></p><p><a href=\"https://mega.nz/file/ad0y3YJS#oVAuekM1uc4VAQc4AeyEleJRBB025QD36CMwShUoTXA\">https://mega.nz/file/ad0y3YJS#oVAuekM1uc4VAQc4AeyEleJRBB025QD36CMwShUoTXA</a></p><p>Payouts are handled by the <strong>Xend Finance</strong> team directly and are denominated in USD. Payouts are done in <strong>USDT</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Xend Finance can be found at\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/xendfinance/x-vault\"\n  }, \"https://github.com/xendfinance/x-vault\"), \"\\nand\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/xendfinance/xAuto-Polygon\"\n  }, \"https://github.com/xendfinance/xAuto-Polygon\"), \"\\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Xend Finance can be found at\n<a href=\"https://github.com/xendfinance/x-vault\">https://github.com/xendfinance/x-vault</a>\nand\n<a href=\"https://github.com/xendfinance/xAuto-Polygon\">https://github.com/xendfinance/xAuto-Polygon</a>\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
