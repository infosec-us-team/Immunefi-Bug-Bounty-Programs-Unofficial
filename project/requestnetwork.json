{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "requestnetwork",
      "slug": "requestnetwork",
      "project": "Request Network",
      "maxBounty": 20000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/70vAgdAA4NiT94WwV25rVe/8ae83f32beaf7cee7e0a5b1dfe4f6165/Request_Network_logo.png",
      "launchDate": "2023-07-31T18:00+02:00",
      "updatedDate": "2023-08-16T20:33:19.231Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $5,000 to USD $20,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $1,000 to USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $1,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $2,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "6cFfQfNRdiR5HEXMXwZUmF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3cF63891928B8CeebB81C95426600a18cd59C03f#code",
          "description": "BatchConversionPayments on Ethereum"
        },
        {
          "id": "42VzWkQ84BUI6MMyfxx1RZ",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x3cF63891928B8CeebB81C95426600a18cd59C03f#code",
          "description": "BatchConversionPayments on Polygon"
        },
        {
          "id": "7kqiY3Qcvq3frkxjPSjbk3",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x3cF63891928B8CeebB81C95426600a18cd59C03f#code",
          "description": "BatchConversionPayments on BSC"
        },
        {
          "id": "65ZfXqyyMyHaP092vlMY4A",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x3cf63891928b8ceebb81c95426600a18cd59c03f#code",
          "description": "BatchConversionPayments on Arbitrum One"
        },
        {
          "id": "6RP5Kkm4yMLMwcZLKNtWnY",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x3cF63891928B8CeebB81C95426600a18cd59C03f#code",
          "description": "BatchConversionPayments on Fantom"
        },
        {
          "id": "7n3GFLgW8qml7tB36MCRkY",
          "type": "smart_contract",
          "url": "https://snowtrace.io/address/0x3cf63891928b8ceebb81c95426600a18cd59c03f#code",
          "description": "BatchConversionPayments on Avalanche"
        },
        {
          "id": "xwp5nmvMpEJuPUxWCIxmi",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x3cF63891928B8CeebB81C95426600a18cd59C03f#code",
          "description": "BatchConversionPayments on Optimism"
        },
        {
          "id": "3xMLD5euD5jx3QysWtIPxC",
          "type": "smart_contract",
          "url": "https://moonscan.io/address/0x3cF63891928B8CeebB81C95426600a18cd59C03f#code",
          "description": "BatchConversionPayments on Moonbeam"
        },
        {
          "id": "6kuA2f1ZSCisI6hO02whFw",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0DD57FFe83a53bCbd657e234B16A3e74fEDb8fBA#code",
          "description": "BatchPayments on Ethereum"
        },
        {
          "id": "5jLRecu43iBUtqRpbeBvML",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x0DD57FFe83a53bCbd657e234B16A3e74fEDb8fBA#code",
          "description": "BatchPayments on Polygon"
        },
        {
          "id": "BLxGDlEHShQccg3k31uDb",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x0DD57FFe83a53bCbd657e234B16A3e74fEDb8fBA#code",
          "description": "BatchPayments on BSC"
        },
        {
          "id": "7M1UKX5OEK3VDEULCDua69",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x0DD57FFe83a53bCbd657e234B16A3e74fEDb8fBA#code",
          "description": "BatchPayments on Fantom"
        },
        {
          "id": "3kc4NrbT9Nq1tWo9rBzObD",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x0DD57FFe83a53bCbd657e234B16A3e74fEDb8fBA#code",
          "description": "BatchPayments on Arbitrum One"
        },
        {
          "id": "3milORomQNRYoI7XSQN25w",
          "type": "smart_contract",
          "url": "https://snowtrace.io/address/0x0DD57FFe83a53bCbd657e234B16A3e74fEDb8fBA#code",
          "description": "BatchPayments on Avalanche"
        },
        {
          "id": "1Dp55WiFKLXzCBn49UpxKR",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x0DD57FFe83a53bCbd657e234B16A3e74fEDb8fBA#code",
          "description": "BatchPayments on Optimism"
        },
        {
          "id": "yoQIMwiDGgPvfiElb0z58",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xC5519f3fcECC8EC85caaF8836563dEe9a00080f9#code",
          "description": "ChainlinkConversionPath v0.1.0 on Ethereum"
        },
        {
          "id": "pKXF2OJvIUS8gzmhFqL8P",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xEEc4790306C43DC00cebbE4D0c36Fadf8634B533#code",
          "description": "ChainlinkConversionPath v0.1.0 on Polygon, used by Erc20Conversion / Erc20SwapConversion"
        },
        {
          "id": "3ZXnixjNwsFAE9bIqWzPA6",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x0818Ad7016138f0A40DFAe30F64a923c2A8F61bA#code",
          "description": "ChainlinkConversionPath v0.2.0 on Polygon, used by Batch / EthConversion"
        },
        {
          "id": "2i7gqPTQiKELi36ZpjKDkr",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xEEc4790306C43DC00cebbE4D0c36Fadf8634B533#code",
          "description": "ChainlinkConversionPath v0.1.0 on Fantom, used by Erc20Conversion / Erc20SwapConversion"
        },
        {
          "id": "4Nvgqucq1hmK9zxbHfy2KX",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x0818Ad7016138f0A40DFAe30F64a923c2A8F61bA#code",
          "description": "ChainlinkConversionPath v0.2.0 on Fantom, used by Batch / EthConversion"
        },
        {
          "id": "4DWFd1D1ic766vZ0ejXH4G",
          "type": "smart_contract",
          "url": "https://gnosisscan.io/address/0xeec4790306c43dc00cebbe4d0c36fadf8634b533#code",
          "description": "ChainlinkConversionPath v0.1.0 on Gnosis"
        },
        {
          "id": "2feVvTUWKXG4b8lAo5TkDg",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x0818Ad7016138f0A40DFAe30F64a923c2A8F61bA#code",
          "description": "ChainlinkConversionPath on Arbitrum One"
        },
        {
          "id": "5ehO2NFKBvsP4gmyn0jb4j",
          "type": "smart_contract",
          "url": "https://snowtrace.io/address/0x0818Ad7016138f0A40DFAe30F64a923c2A8F61bA#code",
          "description": "ChainlinkConversionPath on Avalanche"
        },
        {
          "id": "36x5u29A6mVAQeF9DFMDYY",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x0818Ad7016138f0A40DFAe30F64a923c2A8F61bA#code",
          "description": "ChainlinkConversionPath on BSC"
        },
        {
          "id": "5X1rwM4mN4syat2Idj2oc9",
          "type": "smart_contract",
          "url": "https://moonscan.io/address/0x0818Ad7016138f0A40DFAe30F64a923c2A8F61bA#code",
          "description": "ChainlinkConversionPath on Moonbeam"
        },
        {
          "id": "6t2vLLD3zUh78jusq8VTMh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe72Ecea44b6d8B2b3cf5171214D9730E86213cA2#code",
          "description": "Erc20ConversionProxy v0.1.0 on Ethereum"
        },
        {
          "id": "4wobwWjIUd6GDfRNoDcUoK",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xf0f49873C50765239F6f9534Ba13c4fe16eD5f2E#code",
          "description": "Erc20ConversionProxy v0.1.0 on Polygon"
        },
        {
          "id": "4fnpRGxVm0rlDAB9mIxD3H",
          "type": "smart_contract",
          "url": "https://gnosisscan.io/address/0xf0f49873C50765239F6f9534Ba13c4fe16eD5f2E#code",
          "description": "Erc20ConversionProxy v0.1.0 on Gnosis"
        },
        {
          "id": "2NZkNnLGAkbF3FasS6lRFx",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0xf0f49873C50765239F6f9534Ba13c4fe16eD5f2E#code",
          "description": "Erc20ConversionProxy v0.1.0 on BSC Testnet"
        },
        {
          "id": "17F5wvbLID9aQklYV65Yz5",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0xf0f49873C50765239F6f9534Ba13c4fe16eD5f2E#code",
          "description": "Erc20ConversionProxy v0.1.0 on Fantom"
        },
        {
          "id": "7oBDnyhORnmg3dSDcttVhf",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xbbd9c5D112343A4Aa2bc194245760CaeeaF118Be#code",
          "description": "Erc20ConversionProxy v0.1.2 on BSC"
        },
        {
          "id": "1baYoUibN3bNm2Ay4uQ3Bw",
          "type": "smart_contract",
          "url": "https://moonscan.io/address/0x1550A8C4F4E5afC67Ea07e8ac590fdcAdB4bBfb1#code",
          "description": "Erc20ConversionProxy v0.1.2 on Moonbeam"
        },
        {
          "id": "5lr9xo696zth2qhpWIzi13",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7DfD5955a1Ed6Bf74ccF8e24FF53E0a9A7e9F477#code",
          "description": "ERC20EscrowToPay on Ethereum"
        },
        {
          "id": "6zT9DI9b084HWXLwNRAL8E",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x937db37ffb67083242fbc6add472146bf10e01ec#code",
          "description": "ERC20EscrowToPay on Polygon"
        },
        {
          "id": "2im64Opr4Y6FMI0pYf2Jfj",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x26d4912fA5aC84F185843E19eeEdcc47f4Cc9F1a#code",
          "description": "ERC20EscrowToPay on Optimism"
        },
        {
          "id": "jDCZRMBCYabJyVTCK0nHw",
          "type": "smart_contract",
          "url": "https://moonscan.io/address/0x26d4912fa5ac84f185843e19eeedcc47f4cc9f1a#code",
          "description": "ERC20EscrowToPay on Moonbeam"
        },
        {
          "id": "6TJ4b14PPDWwZChjX5asA9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x370DE27fdb7D1Ff1e1BaA7D11c5820a324Cf623C#code",
          "description": "ERC20FeeProxy on Ethereum"
        },
        {
          "id": "6Nu65dHDXoifF1Ldz8PYc0",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x0DfbEe143b42B41eFC5A6F87bFD1fFC78c2f0aC9#code",
          "description": "ERC20FeeProxy on Polygon"
        },
        {
          "id": "5KenkSvCTIpSGKY8nFiEWL",
          "type": "smart_contract",
          "url": "https://explorer.fuse.io/address/0xee07ef5B414955188d2A9fF50bdCE784A49031Fc/contracts#address-tabs",
          "description": "ERC20FeeProxy on Fuse"
        },
        {
          "id": "1lg5NB4Ssh6bdSmVSuz5aq",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x0dfbee143b42b41efc5a6f87bfd1ffc78c2f0ac9#code",
          "description": "ERC20FeeProxy on BSC Testnet"
        },
        {
          "id": "2BfMI8cxEEQdS95OKgkqZ1",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x0dfbee143b42b41efc5a6f87bfd1ffc78c2f0ac9#code",
          "description": "ERC20FeeProxy on BSC"
        },
        {
          "id": "20Qaju2jcbYXWi5jvLIBIV",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x0DfbEe143b42B41eFC5A6F87bFD1fFC78c2f0aC9#code",
          "description": "ERC20FeeProxy on Fantom"
        },
        {
          "id": "1tWUnjxnSh9gvKlYNrC86K",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x399F5EE127ce7432E4921a61b8CF52b0af52cbfE#code",
          "description": "ERC20FeeProxy on Optimism"
        },
        {
          "id": "1xchStxyIcp35hvjqB6d7S",
          "type": "smart_contract",
          "url": "https://moonscan.io/address/0x399F5EE127ce7432E4921a61b8CF52b0af52cbfE#code",
          "description": "ERC20FeeProxy on Moonbeam"
        },
        {
          "id": "3eqpFNVrc6vAveAhmnsnbO",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5f821c20947ff9be22e823edc5b3c709b33121b3#code",
          "description": "ERC20Proxy on Ethereum"
        },
        {
          "id": "loQBkBtkiAHdBF9N5xKOv",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x3b4837C9F4A606b71e61FD56Db6241781194df92#code",
          "description": "Erc20SwapToConversion on Polygon"
        },
        {
          "id": "1ugayUi4cwyPgvt1RGxq2z",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3b4837C9F4A606b71e61FD56Db6241781194df92#code",
          "description": "Erc20SwapToConversion on Ethereum"
        },
        {
          "id": "2S6fr2LKblcPBxFY2ldU6r",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x80D1EE67ffAf7047d3E6EbF7317cF0eAd63FFc78#code",
          "description": "Erc20SwapToConversion on Optimism"
        },
        {
          "id": "2QEE874qpSFU2zuFHOqHX9",
          "type": "smart_contract",
          "url": "https://moonscan.io/address/0x80D1EE67ffAf7047d3E6EbF7317cF0eAd63FFc78#code",
          "description": "Erc20SwapToConversion on Moonbeam"
        },
        {
          "id": "2GyRFMqd8J9dm88Zvh5LuU",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xA9930c8e4638D9a96a3B73e7ABe73a636F986323#code",
          "description": "ERC20TransferableReceivable on Polygon"
        },
        {
          "id": "36BDmpgzGY7hHWSFTFFInp",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x6278949d3b4C10569BEB696Ff8864B5c772c740d#code",
          "description": "ERC20TransferableReceivable on Ethereum"
        },
        {
          "id": "6TmgsakswA9oWcOtCVYrzg",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7Ebf48a26253810629C191b56C3212Fd0D211c26#code",
          "description": "EthConversionProxy on Ethereum"
        },
        {
          "id": "6865TyEWwwkkys5pSjKhiU",
          "type": "smart_contract",
          "url": "https://ftmscan.com/address/0x7Ebf48a26253810629C191b56C3212Fd0D211c26#code",
          "description": "EthConversionProxy on Fantom"
        },
        {
          "id": "6cfMhGGhnq3XMVLewCisjY",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x7Ebf48a26253810629C191b56C3212Fd0D211c26#code",
          "description": "EthConversionProxy on BSC"
        },
        {
          "id": "ZiMqykF4ysI6M4Hv826fz",
          "type": "smart_contract",
          "url": "https://moonscan.io/address/0x7Ebf48a26253810629C191b56C3212Fd0D211c26#code",
          "description": "EthConversionProxy on Moonbeam"
        },
        {
          "id": "1WuLEgjCVzkfiiYxOcJDjj",
          "type": "smart_contract",
          "url": "https://snowtrace.io/address/0xfCFBcfc4f5A421089e3Df45455F7f4985FE2D6a8#code",
          "description": "EthereumFeeProxy on Avalanche"
        },
        {
          "id": "7f3A1ok9s3b95cSPZF89T5",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xfCFBcfc4f5A421089e3Df45455F7f4985FE2D6a8#code",
          "description": "EthereumFeeProxy on Polygon"
        },
        {
          "id": "5vmS7PNXTmdip6UeNNBjNj",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xfCFBcfc4f5A421089e3Df45455F7f4985FE2D6a8#code",
          "description": "EthereumFeeProxy on Arbitrum One"
        },
        {
          "id": "4FJpuTindluCHd9lCFzt62",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xfCFBcfc4f5A421089e3Df45455F7f4985FE2D6a8#code",
          "description": "EthereumFeeProxy on BSC"
        },
        {
          "id": "3YjbiytjEBFvn50x5pLzLw",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xfCFBcfc4f5A421089e3Df45455F7f4985FE2D6a8#code",
          "description": "EthereumFeeProxy on Ethereum"
        },
        {
          "id": "284CjpToj9vAmkyqr8afyS",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0xe11BF2fDA23bF0A98365e1A4c04A87C9339e8687#code",
          "description": "EthereumFeeProxy on Optimism"
        },
        {
          "id": "3DOylil8QFblLXOxPbWzZ1",
          "type": "smart_contract",
          "url": "https://moonscan.io/address/0xe11BF2fDA23bF0A98365e1A4c04A87C9339e8687#code",
          "description": "EthereumFeeProxy on Moonbeam"
        },
        {
          "id": "1g7Uj2fDnYoB1mN1IqLeWz",
          "type": "smart_contract",
          "url": "https://snowtrace.io/address/0x322F0037d272E980984F89E94Aae43BD0FC065E6#code",
          "description": "EthereumProxy on Avalanche"
        },
        {
          "id": "7vEVC5vF85HR2QPKd2fcBC",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x322F0037d272E980984F89E94Aae43BD0FC065E6#code",
          "description": "EthereumProxy on Polygon"
        },
        {
          "id": "3oDc4Q2EZ6MrePIbrt2yoE",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x322F0037d272E980984F89E94Aae43BD0FC065E6#code",
          "description": "EthereumProxy on Arbitrum One"
        },
        {
          "id": "3YPEcQPK7PJUBpCwUr9afq",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x322F0037d272E980984F89E94Aae43BD0FC065E6#code",
          "description": "EthereumProxy on BSC"
        },
        {
          "id": "5dc4UA3JTjpjZ8PmldLGBS",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x322F0037d272E980984F89E94Aae43BD0FC065E6#code",
          "description": "EthereumProxy on Ethereum"
        },
        {
          "id": "7EZDaVbLtx5qmh8wcaZowi",
          "type": "smart_contract",
          "url": "https://optimistic.etherscan.io/address/0x171Ee0881407d4c0C11eA1a2FB7D5b4cdED71e6e#code",
          "description": "EthereumProxy on Optimism"
        },
        {
          "id": "6YEfYelZjYc2IEYXnBsmDu",
          "type": "smart_contract",
          "url": "https://moonscan.io/address/0x171ee0881407d4c0c11ea1a2fb7d5b4cded71e6e#code",
          "description": "EthereumProxy on Moonbeam"
        },
        {
          "id": "2NqN4m50RPA6NntuFH8lRx",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x24a66afda3666fb0202f439708ece45c8121a9bb#code",
          "description": "RequestHashStorage on Ethereum"
        },
        {
          "id": "2sOA6xwcFwplmn1DLunSsD",
          "type": "smart_contract",
          "url": "https://gnosisscan.io/address/0x2256938E8225a998C498bf86B43c1768EE14b90B#code",
          "description": "RequestHashStorage on Gnosis"
        },
        {
          "id": "7eXkeAIneUxlGUI5aWI9DG",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa9cEaA10c12dcB33BAbC2D779e37732311504652#code",
          "description": "RequestOpenHashSubmitter on Ethereum"
        },
        {
          "id": "7J8axnBRxtI0embst2PYu9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8f8221afbb33998d8584a2b05749ba73c37a938a#code",
          "description": "RequestToken on Ethereum"
        },
        {
          "id": "6igzLE7fF5lmp0tzgGIZxM",
          "type": "smart_contract",
          "url": "https://gnosisscan.io/address/0x2171a0dc12a9E5b1659feF2BB20E54c84Fa7dB0C#contracts",
          "description": "lockForREQBurn on Gnosis"
        },
        {
          "id": "1TpAILCFJKW4KhQGjtdFby",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2cfa65dcb34311293c6a52f1d7beb8f4e31e5117#code",
          "description": "DaiBasedREQBurner on Ethereum"
        },
        {
          "id": "2whI1XPq7jzBwOGp2kkY43",
          "type": "websites_and_applications",
          "url": "https://create.request.network/",
          "description": "Request Create"
        },
        {
          "id": "3X9aU0Knu4GLMuPANyT85V",
          "type": "websites_and_applications",
          "url": "https://pay.request.network/",
          "description": "Request Pay"
        },
        {
          "id": "3FIEqJYiEabDxcCLd42aYj",
          "type": "websites_and_applications",
          "url": "https://xdai.gateway.request.network",
          "description": "Gnosis Gateway"
        },
        {
          "id": "4DiFooqvZ7VmKel2vRGiOx",
          "type": "websites_and_applications",
          "url": "https://mainnet.gateway.request.network",
          "description": "Ethereum Gateway"
        },
        {
          "id": "4Hf9b7KlwSequlvD7X3ryi",
          "type": "websites_and_applications",
          "url": "https://request.network/en/",
          "description": "Request Network Website"
        }
      ],
      "impacts": [
        {
          "id": "1LrJ0v1X0PgqEKxcG7hS0h",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3oOk7oyiBW3pj92T2EwXUS",
          "title": "Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "12Zjm9dZjspaVpv5gnOOOH",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4thYaV3gx8sodsuCjDZimt",
          "title": "Permanent freezing of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4V656xlnT9nDDFQJyHIKbs",
          "title": "Unintended alteration of what the NFT represents (e.g. token URI, payload, artistic content)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "42cM5KHyEpwlA6jTyXfJtY",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6y8DIk73gjDGOv19HFx0h0",
          "title": "Retrieve sensitive data/files from a running server such as: /etc/shadow, database passwords, blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "tdFNi6uJr4fSg5q0BYWSt",
          "title": "Taking down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5vXyOjK3R9S8gnPcpW4r0V",
          "title": "Taking down the NFT URI",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5mdkTqie4RMSNJ2LpxLC1m",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as: Changing registration information, Commenting, Voting, Making trades, Withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "RL7Vbpc3Sxkf8Liy48gR4",
          "title": "Changing the NFT metadata",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4ikDyFNFDO2SxBLtW4nbX9",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4qShfXYalrjp8VNkMKwj6Y",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "4hdJZAxQK4hq81PEsw95SR",
          "title": "Malicious interactions with an already-connected wallet such as: Modifying transaction arguments or parameters, Substituting contract addresses, Submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5ylQNGnvUT5iXRV4G0Qplk",
          "title": "Direct theft of user NFTs",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5BghncYI4uMqwGrUkF2aJD",
          "title": "Injection of malicious HTML or XSS through NFT metadata",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1rmTVpFha9tCgDKR5x9F3L",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2YKceWlb0wm94fU4HTYaBA",
          "title": "Temporary freezing NFTs",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "PflHcDe6kW4I97IMbLFua",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as: HTML injection without Javascript, Replacing existing text with arbitrary text, Arbitrary file uploads, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "4Csewfgawz38MITjh2Bay",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as: Email or password of the victim, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "1rZ3UxVynUyUlpxdFFMCJQ",
          "title": "Improperly disclosing confidential user information such as: Email address, Phone number, Physical address, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "5m3rvfzPZT3V29ueLZIaJm",
          "title": "Subdomain takeover without already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "4QvrbSjgb78h9VarvA9sPy",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "CfgREdiAOZ6zLtKbsePL4",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7BXQ2zCmlD6P1IIswydTV0",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "74eud9Iy0lfudQxj1w6XPi",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Request Network is the protocol for payment requests. Requests are stored immutably and processed without an intermediary. Companies and individuals pay & get paid in digital currencies on almost any EVM-compatible chain and NEAR.\n\nFor more information about Request Network, please visit [https://request.network/en/. ](https://request.network/en/) \n\nRequest Network provides rewards in REQ. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n__KYC Requirement__\n\nThe provision of KYC is required to receive a reward for this bug bounty program where the following information will be required to be provided.  This information should be included in the invoice sent via Request Finance, described in more detail, below.\n\n- Email Address\n- First and Last Name\n- Payment address on Ethereum or Polygon\n\nKYC information is only required on confirmation of the validity of a bug report.   \n\n__Invoicing Information__\n\nRequest Network requires all bug bounties be paid out via an invoice issued on Request Finance. Upon confirmation that a bug report is valid, Request Network will provide the following information so that the security researcher can create a “client”, to be included on the invoice under “Billed to”:\n\n- Legal Entity\n- Registered Address\n- Registration Number\n- Email where to send the invoice\n\n__Responsible Publication__\n\nRequest Network adheres to category 2. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication ](https://immunefi.com/responsible-publication/)page.\n\n__Primacy of Impact vs Primacy of Rules__\n\nRequest Network adheres to the Primacy of Impact for the following severity levels:\n- Smart Contract, Critical Severity Level\n- Smart Contract, High Severity Leve\n- Smart Contract, Medium Severity Level\n- Websites/Applications, Critical Severity Level\n- Websites/Applications, High Severity Level\n\nIf a category’s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nAll other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n\n__Known Issue Assurance__\n\nRequest Network commits to providing Known Issue Assurance to bug submissions through their program. This means that Request Network will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \n\n__Reward Calculation for Critical Level Reports__\n\nFor critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 20,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 5,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.    \n\n__Repeatable Attack Limitations__\n\nIn cases of repeatable attacks for smart contract bugs, only the first attack is considered if the smart contracts where the vulnerability exists can be upgraded, paused, or killed. If the attack impacts a smart contract directly holding funds that cannot be upgraded or paused, the amount of funds at risk will be calculated with the first attack being at 100% of the funds that could be stolen and then a reduction of 25% from the amount of the first attack for every 300 blocks the attack needs for subsequent attacks from the first attack, rounded down. For avoidance of doubt, if a second attack would happen at 600 blocks and then a third at 900 blocks, the funds at risk would be counted at 75% and 50% of the reward from the first attack, respectively.\n\n__Reward Calculation for High Level Reports__\n\nHigh smart contract vulnerabilities will be capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 5 blocks that the funds or NFTs could be temporarily frozen, rounded down to the nearest multiple of 5, up to the hard cap of USD 5,000. However, a minimum reward of USD 1,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.    \n\n__Restrictions on Security Researcher Eligibility __\n\nSecurity researchers who fall under any of the following are ineligible for a reward\n- Citizens and residents of OFAC-sanctioned countries\n\n__Previous Audits__\n\nRequest Network has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\n- [https://request.network/en/2020/07/07/request-encryption-audit-completed-by-cure53/ ](https://request.network/en/2020/07/07/request-encryption-audit-completed-by-cure53/)\n- [https://hacken.io/audits/request-network/ ](https://hacken.io/audits/request-network/)\n\nFor the section below, it should always be included. However, clients are welcome to modify the section as needed. \n\n__Feasibility Limitations__\n\nBug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be out of scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:\n\n- Losses or other negative effects of the attack are inflicted upon Request Network ecosystem participants \n- The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC is required for the following severity levels:\n- Smart Contract Critical Severity Level\n- Smart Contract High Severity Level\n- Smart Contract Medium Severity Level\n- Web & App Critical Severity Level\n- Web & App High Severity Level\n\nAll PoCs submitted must comply with the Immunefi-wide [PoC Guidelines and Rules. ](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\n\n__Reward Payment Terms__\n\nPayouts are handled by the Request Network team directly and are denominated in USD. However, payments are done in REQ. \n\nThe calculation of the net amount rewarded is based on the average price between CoinMarketCap.com and CoinGecko.com at the time the bug report was submitted. No adjustments are made based on liquidity availability. For avoidance of doubt, if the reward amount is USD 5 000 and the average price is USD 1.75 per token, then the reward will be 2857.142857 units of that token.\n",
      "outOfScopeAndRules": "These impacts are out of scope for this bug bounty program. \n\n__All Categories__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n\n__Smart Contracts__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks\n- Best practice recommendations\n\n__Web/App__\n\n- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n   - This does not exclude reflected HTML injection with or without JavaScript\n   - This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) \n- SPF/DMARC misconfigured records\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All code of Request Network can be found at [https://github.com/RequestNetwork/requestNetwork.](https://github.com/RequestNetwork/requestNetwork) Documentation for the assets provided in the table can be found at [https://docs.request.network/.](https://docs.request.network/)\n\nUnless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about [Reported Subdomain Takeovers](https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers).\n\nOther helpful links include:\n- near-contracts Repo - [https://github.com/RequestNetwork/near-contracts](https://github.com/RequestNetwork/near-contracts)\n- Payments subgraph repo - [https://github.com/RequestNetwork/payments-subgraph](https://github.com/RequestNetwork/payments-subgraph)\n- Storage subgraph repo - [https://github.com/RequestNetwork/storage-subgraph](https://github.com/RequestNetwork/storage-subgraph)\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH",
          "Fantom",
          "Fuse",
          "BSC",
          "Avalanche"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Rust",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $5,000 to USD $20,000"
          },
          {
            "level": "High",
            "payout": "USD $1,000 to USD $5,000"
          },
          {
            "level": "Medium",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $2,000"
          },
          {
            "level": "High",
            "payout": "USD $1,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Request Network is the protocol for payment requests. Requests are stored immutably and processed without an intermediary. Companies and individuals pay & get paid in digital currencies on almost any EVM-compatible chain and NEAR.\"), mdx(\"p\", null, \"For more information about Request Network, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://request.network/en/\"\n  }, \"https://request.network/en/. \"), \" \"), mdx(\"p\", null, \"Request Network provides rewards in REQ. For more details about the payment process, please view the Rewards by Threat Level section further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"KYC Requirement\")), mdx(\"p\", null, \"The provision of KYC is required to receive a reward for this bug bounty program where the following information will be required to be provided.  This information should be included in the invoice sent via Request Finance, described in more detail, below.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Email Address\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"First and Last Name\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Payment address on Ethereum or Polygon\")), mdx(\"p\", null, \"KYC information is only required on confirmation of the validity of a bug report.   \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Invoicing Information\")), mdx(\"p\", null, \"Request Network requires all bug bounties be paid out via an invoice issued on Request Finance. Upon confirmation that a bug report is valid, Request Network will provide the following information so that the security researcher can create a \\u201Cclient\\u201D, to be included on the invoice under \\u201CBilled to\\u201D:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Legal Entity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Registered Address\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Registration Number\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Email where to send the invoice\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Responsible Publication\")), mdx(\"p\", null, \"Request Network adheres to category 2. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/responsible-publication/\"\n  }, \"Responsible Publication \"), \"page.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Primacy of Impact vs Primacy of Rules\")), mdx(\"p\", null, \"Request Network adheres to the Primacy of Impact for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, Critical Severity Level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, High Severity Leve\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, Medium Severity Level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Websites/Applications, Critical Severity Level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Websites/Applications, High Severity Level\")), mdx(\"p\", null, \"If a category\\u2019s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\"), mdx(\"p\", null, \"All other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Known Issue Assurance\")), mdx(\"p\", null, \"Request Network commits to providing Known Issue Assurance to bug submissions through their program. This means that Request Network will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Request Network is the protocol for payment requests. Requests are stored immutably and processed without an intermediary. Companies and individuals pay &amp; get paid in digital currencies on almost any EVM-compatible chain and NEAR.</p><p>For more information about Request Network, please visit <a href=\"https://request.network/en/\">https://request.network/en/. </a> </p><p>Request Network provides rewards in REQ. For more details about the payment process, please view the Rewards by Threat Level section further below. </p><p><strong>KYC Requirement</strong></p><p>The provision of KYC is required to receive a reward for this bug bounty program where the following information will be required to be provided.  This information should be included in the invoice sent via Request Finance, described in more detail, below.</p><ul><li>Email Address</li><li>First and Last Name</li><li>Payment address on Ethereum or Polygon</li></ul><p>KYC information is only required on confirmation of the validity of a bug report.   </p><p><strong>Invoicing Information</strong></p><p>Request Network requires all bug bounties be paid out via an invoice issued on Request Finance. Upon confirmation that a bug report is valid, Request Network will provide the following information so that the security researcher can create a “client”, to be included on the invoice under “Billed to”:</p><ul><li>Legal Entity</li><li>Registered Address</li><li>Registration Number</li><li>Email where to send the invoice</li></ul><p><strong>Responsible Publication</strong></p><p>Request Network adheres to category 2. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our <a href=\"https://immunefi.com/responsible-publication/\">Responsible Publication </a>page.</p><p><strong>Primacy of Impact vs Primacy of Rules</strong></p><p>Request Network adheres to the Primacy of Impact for the following severity levels:</p><ul><li>Smart Contract, Critical Severity Level</li><li>Smart Contract, High Severity Leve</li><li>Smart Contract, Medium Severity Level</li><li>Websites/Applications, Critical Severity Level</li><li>Websites/Applications, High Severity Level</li></ul><p>If a category’s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.</p><p>All other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.</p><p><strong>Known Issue Assurance</strong></p><p>Request Network commits to providing Known Issue Assurance to bug submissions through their program. This means that Request Network will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Calculation for Critical Level Reports\")), mdx(\"p\", null, \"For critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 20,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 5,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.    \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Repeatable Attack Limitations\")), mdx(\"p\", null, \"In cases of repeatable attacks for smart contract bugs, only the first attack is considered if the smart contracts where the vulnerability exists can be upgraded, paused, or killed. If the attack impacts a smart contract directly holding funds that cannot be upgraded or paused, the amount of funds at risk will be calculated with the first attack being at 100% of the funds that could be stolen and then a reduction of 25% from the amount of the first attack for every 300 blocks the attack needs for subsequent attacks from the first attack, rounded down. For avoidance of doubt, if a second attack would happen at 600 blocks and then a third at 900 blocks, the funds at risk would be counted at 75% and 50% of the reward from the first attack, respectively.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Calculation for High Level Reports\")), mdx(\"p\", null, \"High smart contract vulnerabilities will be capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 5 blocks that the funds or NFTs could be temporarily frozen, rounded down to the nearest multiple of 5, up to the hard cap of USD 5,000. However, a minimum reward of USD 1,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.    \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Restrictions on Security Researcher Eligibility \")), mdx(\"p\", null, \"Security researchers who fall under any of the following are ineligible for a reward\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Citizens and residents of OFAC-sanctioned countries\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Previous Audits\")), mdx(\"p\", null, \"Request Network has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://request.network/en/2020/07/07/request-encryption-audit-completed-by-cure53/\"\n  }, \"https://request.network/en/2020/07/07/request-encryption-audit-completed-by-cure53/ \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hacken.io/audits/request-network/\"\n  }, \"https://hacken.io/audits/request-network/ \"))), mdx(\"p\", null, \"For the section below, it should always be included. However, clients are welcome to modify the section as needed. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Feasibility Limitations\")), mdx(\"p\", null, \"Bug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be out of scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Losses or other negative effects of the attack are inflicted upon Request Network ecosystem participants \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Proof of Concept (PoC) Requirements\")), mdx(\"p\", null, \"A PoC is required for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract Critical Severity Level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract High Severity Level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract Medium Severity Level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web & App Critical Severity Level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web & App High Severity Level\")), mdx(\"p\", null, \"All PoCs submitted must comply with the Immunefi-wide \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"PoC Guidelines and Rules. \"), \"Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Payment Terms\")), mdx(\"p\", null, \"Payouts are handled by the Request Network team directly and are denominated in USD. However, payments are done in REQ. \"), mdx(\"p\", null, \"The calculation of the net amount rewarded is based on the average price between CoinMarketCap.com and CoinGecko.com at the time the bug report was submitted. No adjustments are made based on liquidity availability. For avoidance of doubt, if the reward amount is USD 5 000 and the average price is USD 1.75 per token, then the reward will be 2857.142857 units of that token.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. </p><p><strong>Reward Calculation for Critical Level Reports</strong></p><p>For critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 20,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 5,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.    </p><p><strong>Repeatable Attack Limitations</strong></p><p>In cases of repeatable attacks for smart contract bugs, only the first attack is considered if the smart contracts where the vulnerability exists can be upgraded, paused, or killed. If the attack impacts a smart contract directly holding funds that cannot be upgraded or paused, the amount of funds at risk will be calculated with the first attack being at 100% of the funds that could be stolen and then a reduction of 25% from the amount of the first attack for every 300 blocks the attack needs for subsequent attacks from the first attack, rounded down. For avoidance of doubt, if a second attack would happen at 600 blocks and then a third at 900 blocks, the funds at risk would be counted at 75% and 50% of the reward from the first attack, respectively.</p><p><strong>Reward Calculation for High Level Reports</strong></p><p>High smart contract vulnerabilities will be capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 5 blocks that the funds or NFTs could be temporarily frozen, rounded down to the nearest multiple of 5, up to the hard cap of USD 5,000. However, a minimum reward of USD 1,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.    </p><p><strong>Restrictions on Security Researcher Eligibility </strong></p><p>Security researchers who fall under any of the following are ineligible for a reward</p><ul><li>Citizens and residents of OFAC-sanctioned countries</li></ul><p><strong>Previous Audits</strong></p><p>Request Network has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.</p><ul><li><a href=\"https://request.network/en/2020/07/07/request-encryption-audit-completed-by-cure53/\">https://request.network/en/2020/07/07/request-encryption-audit-completed-by-cure53/ </a></li><li><a href=\"https://hacken.io/audits/request-network/\">https://hacken.io/audits/request-network/ </a></li></ul><p>For the section below, it should always be included. However, clients are welcome to modify the section as needed. </p><p><strong>Feasibility Limitations</strong></p><p>Bug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be out of scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:</p><ul><li>Losses or other negative effects of the attack are inflicted upon Request Network ecosystem participants </li><li>The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem</li></ul><p><strong>Proof of Concept (PoC) Requirements</strong></p><p>A PoC is required for the following severity levels:</p><ul><li>Smart Contract Critical Severity Level</li><li>Smart Contract High Severity Level</li><li>Smart Contract Medium Severity Level</li><li>Web &amp; App Critical Severity Level</li><li>Web &amp; App High Severity Level</li></ul><p>All PoCs submitted must comply with the Immunefi-wide <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">PoC Guidelines and Rules. </a>Bug report submissions without a PoC when a PoC is required will not be provided with a reward.</p><p><strong>Reward Payment Terms</strong></p><p>Payouts are handled by the Request Network team directly and are denominated in USD. However, payments are done in REQ. </p><p>The calculation of the net amount rewarded is based on the average price between CoinMarketCap.com and CoinGecko.com at the time the bug report was submitted. No adjustments are made based on liquidity availability. For avoidance of doubt, if the reward amount is USD 5 000 and the average price is USD 1.75 per token, then the reward will be 2857.142857 units of that token.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These impacts are out of scope for this bug bounty program. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"All Categories\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts on test files and configuration files unless stated otherwise in the bug bounty program\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring basic economic and governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity impacts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts from Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web/App\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical impacts without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving attacks requiring physical access to the victim device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain text injection (e.g. url parameters, path, etc.)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude reflected HTML injection with or without JavaScript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude persistent plain text injection\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any impacts involving self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR without impact demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no state modifying security impact (e.g. logout CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D) without demonstration of impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts causing only the enumeration or confirmation of the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts that only require DDoS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UX and UI impacts that do not materially disrupt use of the platform\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SPF/DMARC misconfigured records\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Headers without demonstrated impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated scanner reports without demonstrated impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UI/UX best practice recommendations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Non-future-proof NFT rendering\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third-party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks that are executed against project assets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>These impacts are out of scope for this bug bounty program. </p><p><strong>All Categories</strong></p><ul><li>Impacts requiring attacks that the reporter has already exploited themselves, leading to damage</li><li>Impacts caused by attacks requiring access to leaked keys/credentials</li><li>Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code</li><li>Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production</li><li>Best practice recommendations</li><li>Feature requests</li><li>Impacts on test files and configuration files unless stated otherwise in the bug bounty program</li></ul><p><strong>Smart Contracts</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Impacts requiring basic economic and governance attacks (e.g. 51% attack)</li><li>Lack of liquidity impacts</li><li>Impacts from Sybil attacks</li><li>Impacts involving centralization risks</li><li>Best practice recommendations</li></ul><p><strong>Web/App</strong></p><ul><li>Theoretical impacts without any proof or demonstration</li><li>Impacts involving attacks requiring physical access to the victim device</li><li>Reflected plain text injection (e.g. url parameters, path, etc.)<ul><li>This does not exclude reflected HTML injection with or without JavaScript</li><li>This does not exclude persistent plain text injection</li></ul></li><li>Any impacts involving self-XSS</li><li>Captcha bypass using OCR without impact demonstration</li><li>CSRF with no state modifying security impact (e.g. logout CSRF)</li><li>Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact</li><li>Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces</li><li>Impacts causing only the enumeration or confirmation of the existence of users or tenants</li><li>Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows</li><li>Lack of SSL/TLS best practices</li><li>Impacts that only require DDoS</li><li>UX and UI impacts that do not materially disrupt use of the platform</li><li>Impacts primarily caused by browser/plugin defects</li><li>Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)</li><li>Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) </li><li>SPF/DMARC misconfigured records</li><li>Missing HTTP Headers without demonstrated impact</li><li>Automated scanner reports without demonstrated impact</li><li>UI/UX best practice recommendations</li><li>Non-future-proof NFT rendering</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet</li><li>Any testing with pricing oracles or third-party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks that are executed against project assets</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All code of Request Network can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/RequestNetwork/requestNetwork\"\n  }, \"https://github.com/RequestNetwork/requestNetwork.\"), \" Documentation for the assets provided in the table can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.request.network/\"\n  }, \"https://docs.request.network/.\")), mdx(\"p\", null, \"Unless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers\"\n  }, \"Reported Subdomain Takeovers\"), \".\"), mdx(\"p\", null, \"Other helpful links include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"near-contracts Repo - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RequestNetwork/near-contracts\"\n  }, \"https://github.com/RequestNetwork/near-contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Payments subgraph repo - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RequestNetwork/payments-subgraph\"\n  }, \"https://github.com/RequestNetwork/payments-subgraph\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Storage subgraph repo - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/RequestNetwork/storage-subgraph\"\n  }, \"https://github.com/RequestNetwork/storage-subgraph\"))));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All code of Request Network can be found at <a href=\"https://github.com/RequestNetwork/requestNetwork\">https://github.com/RequestNetwork/requestNetwork.</a> Documentation for the assets provided in the table can be found at <a href=\"https://docs.request.network/\">https://docs.request.network/.</a></p><p>Unless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers\">Reported Subdomain Takeovers</a>.</p><p>Other helpful links include:</p><ul><li>near-contracts Repo - <a href=\"https://github.com/RequestNetwork/near-contracts\">https://github.com/RequestNetwork/near-contracts</a></li><li>Payments subgraph repo - <a href=\"https://github.com/RequestNetwork/payments-subgraph\">https://github.com/RequestNetwork/payments-subgraph</a></li><li>Storage subgraph repo - <a href=\"https://github.com/RequestNetwork/storage-subgraph\">https://github.com/RequestNetwork/storage-subgraph</a></li></ul>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
