{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "palmswap",
      "slug": "palmswap",
      "project": "Palmswap",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6na3X0qr1KoKIVena2h47N/45d86449776a138890cfd6c9bc899e7a/PalmLogoPositive_Icon.png",
      "launchDate": "2023-09-18T18:00+03:00",
      "updatedDate": "2023-09-21T17:46:16.296Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $10,000 to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $2,500",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $7,500",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $2,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "6R2WUFDPmGypRtXY9qU3Yj",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0xE274eBdb1b76C548cb35F0E24d01D4b1F537a5e2",
          "description": "Vault"
        },
        {
          "id": "2bLheR76Nl62ZECPkMG0oM",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x57685078bd9a1778fCf6298663a568cA749720ba",
          "description": "VaultPriceFeed"
        },
        {
          "id": "3O0BWW2Ephd8LePgYmuYDu",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0xA983D3b2E1ca315b4459c578A3b48FD5FFCD68af",
          "description": "PositionManager"
        },
        {
          "id": "4RTIYO5DkRAWDlC6uhXdOq",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0xF1F03E00003481653570913046d2E08E857F9005",
          "description": "PositionRouter"
        },
        {
          "id": "2jQsKUBljU0Hmdmt9NcQmm",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x36e14e9a5894C7B16b1E02906F2B393c33Dd43a7",
          "description": "Router"
        },
        {
          "id": "7BBjbpcmIy7LPRRjHxmvso",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0xE76035674F2D9De0Ad7Af9eA43a3946cA7e08d04",
          "description": "PLPManager"
        },
        {
          "id": "MsLd12Axn9mj97iBFHSBS",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x17C14dC9C05f5C6A95a32af8c7D50d877C62aC28",
          "description": "ShortsTracker"
        },
        {
          "id": "5GyblZlLZbK8N1UvYwaU0P",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0xd7a4b1A8f070FC2Dd387F7c836e3E7aB40fFdd9B",
          "description": "ShortsTrackerTimelock"
        },
        {
          "id": "79MpXfKm8jVRSIoZgp54YF",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x9bB9Bf11357638c58d2A5C65cf2a03491eDB22F6",
          "description": "Timelock"
        },
        {
          "id": "2g1vZTbFuRTSgsNyX9Mkyz",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x3922dB631487c99AE5388FEacCaBF598a5F45A49",
          "description": "Trade2Earn"
        },
        {
          "id": "4xa02Kwvgb89t1CqaINdqs",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x4eD6B5B5a4d68e6C5bEe27f4E117693afBE26707",
          "description": "PLP"
        },
        {
          "id": "5dLnxOYV7p94TjlIQT9mQl",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x5C7ee464432bd055EE1444CC07Edb77999De299d",
          "description": "FastPriceEvents"
        },
        {
          "id": "2uBrfPJYWAEFvuSkjqUepe",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x58C1f93E3F2426Aed2a70F4dbb55EDC178D9084d",
          "description": "FastPriceFeed"
        },
        {
          "id": "2SPdQggiYVslWYoGQNRxO8",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x001E18f60e7b8781F5e21c532F175d271Fb619B5",
          "description": "OrderBook"
        },
        {
          "id": "3UDDyTJ0HtibMU5Y7V6rC4",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x76DC7058ce94b1e4a06ec1c5fAE808a9103E08B1",
          "description": "ReferralStorage"
        },
        {
          "id": "1SCetV6BY9SFG6Z094d2ll",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x23899ae33d3570401597d67dF2F840Dc49e6CCB8",
          "description": "PalmRewardDistributor"
        },
        {
          "id": "1EkFjEhbqOs2sKOYBrb5kT",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0xb2d127eAb9fa1b82761DcA2d775445C4b40A3a19",
          "description": "PalmRewardRouter"
        },
        {
          "id": "fuiYbsPJunOyhYU6F6j6f",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x0a82142240cbBf19adf8d066ed532809E0d26D8d",
          "description": "PalmRewardTracker"
        },
        {
          "id": "6ij9fu3NUcGSGYUS6PSFVy",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0xD4FA281640EbAc296Fae3f9734AF0EC2eB86ff3B",
          "description": "PlpRewardDistributor"
        },
        {
          "id": "42f5FOftAPmPCzOPSktot9",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x20886AF213d8F7C71d73D9ac33E4c8A172dc6038",
          "description": "PlpRewardRouter"
        },
        {
          "id": "1IXrh11fDJ2GSPLNQK6CWo",
          "type": "smart_contract",
          "url": "https://testnet.bscscan.com/address/0x126Ad13031D840A0AC98Cddbf3Da577Ab638b1b4",
          "description": "PlpRewardTracker"
        },
        {
          "id": "3l1eDXJv8YpOthE64iUMwt",
          "type": "websites_and_applications",
          "url": "https://dev.synthetic.palmswap.org/",
          "description": "Trading App"
        }
      ],
      "impacts": [
        {
          "id": "2IKYaJHCtuejYoZILkyIsQ",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1YNFRzL2GZAY4VwFLNQaIr",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6TlvbnKnOpoNSByuQRmGU1",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5qSuZQnQ7L5I5JLz3H8vWu",
          "title": "Retrieve sensitive data/files from a running server such as: /etc/shadow, database passwords, blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7kacweAuGS7A6h1bYh6zbV",
          "title": "Taking down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "AdvlOL4Nn1wjZF27UzJLb",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2ggVnxuJpMKMaDXV5U6ll6",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7IVG83qM9B8xL6N0GJi8Q9",
          "title": "Thefts and freezing of unclaimed yield of any amount",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5fGLWCceAqQurXmRC9YRPP",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as: Email or password of the victim, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "5Vu8cqPkCARH2DnbdUdbFT",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7h8QhqGFEZz43BX01OaLE9",
          "title": "Block stuffing",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "ohGl00wtMm3R1nqpr4yci",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7Bxg8IILgw7FqLK1e0RJ9c",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2TKzMV6A5Xt2uWECznn7T1",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4yBFLJP942XhF5T6naG9pV",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as: Changing the name of user, Enabling/disabling notifications",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "5n6av3rlFQjD2gI20vCSuK",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        }
      ],
      "programOverview": "Palmswap is a perpetual DEX built on BSC. Through its synthetic architecture and the use of single-asset pools, it’s more capital efficient, providing low slippage, zero price impact and fast order execution to traders.\n\nFurther resources regarding Palmswap can be found on their website: [https://palmswap.org/](https://palmswap.org/)\n\nThe bug bounty program is focused around Palmswap’s smart contracts and is mostly concerned with the loss of user funds. \n\nPalmswap provides rewards in USDT. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n__Responsible Publication__\n\nPalmswap adheres to category Category 3: Approval Required. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication ](https://immunefi.com/responsible-publication/)page.\n\n__Primacy of Impact vs Primacy of Rules__\n\nPalmswap adheres to the Primacy of Impact for the following severity levels:\n- Smart Contract - Critical\n- Smart Contract - High\n- Smart Contract - Medium\n- Web/App - Critical\n- Web/App - High\n- Web/App - Medium\n\nIf a category’s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nAll other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n\n__Known Issue Assurance__\n\nPalmswap commits to providing Known Issue Assurance to bug submissions through their program. This means that Palmswap will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \n\n__Immunefi Standard Badge__\n\nPalmswap has satisfied the requirements for the [Immunefi Standard Badge,](https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-) which is given to projects that adhere to our best practices. \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \n\n__Reward Calculation for Critical Level Reports__\n\nFor critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 50 000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 10 000 is to be rewarded in order to incentivize security researchers against withholding a bug report.   \n\n__Repeatable Attack Limitations__\n\nIn cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\n\n__Public Disclosure of Known Issues__\n\nBug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. \n- The leading cause for the exploit was that the PalmSwap team did not enable the protection against the flashloan (cooldownDuration in the Manager contract), making the attack possible with significant liquidity. The secondary cause was that PalmSwap opened deposits directly to the Vault. This should have been turned off after the deployment ( inManagerMode  flag for the Vault) until the end of the accumulation of enough liquidity in the Vault.\n\n__Previous Audits__\n\nPalmswap has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\n- [https://2474115411-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FgSs7UmtCefVntVTkogKf%2Fuploads%2Fu9FNEjoK2kztwmuTa5o8%2FPalmSwap-audit-report.pdf?alt=media&token=120b83f0-1a98-4c59-919c-986c81dae7ad](https://2474115411-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FgSs7UmtCefVntVTkogKf%2Fuploads%2Fu9FNEjoK2kztwmuTa5o8%2FPalmSwap-audit-report.pdf?alt=media&token=120b83f0-1a98-4c59-919c-986c81dae7ad)\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC is required for the following severity levels:\n- Smart Contract - Critical\n- Smart Contract - High\n- Smart Contract - Medium\n- Web/App - Critical\n- Web/App - High\n- Web/App - Medium\n\nAll PoCs submitted must comply with the Immunefi-wide [PoC Guidelines and Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules) Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\n\n__Reward Payment Terms__\n\nPayouts are handled by the Palmswap team directly and are denominated in USD. However, payments are done in USDT. \n",
      "outOfScopeAndRules": "These impacts are out of scope for this bug bounty program. \n\n__All Categories__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n\n__Smart Contracts and Blockchain/DLT__ \n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks\n- Best practice recommendations\n- If the PLP pool has a high utilization not all PLP tokens will be immediately redeemable, the borrowing fee should increase in this case and is considered regular operation\n\n__Web/App__ \n\n- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n   - This does not exclude reflected HTML injection with or without JavaScript\n   - This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) \n- SPF/DMARC misconfigured records\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "Documentation for the assets provided in the table can be found at [https://docs.palmswap.org/. ](https://docs.palmswap.org/)\n\nUnless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about [Reported Subdomain Takeovers.](https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers)\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Derivatives"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "BSC"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $10,000 to USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,500"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $7,500"
          },
          {
            "level": "High",
            "payout": "USD $2,000"
          },
          {
            "level": "Medium",
            "payout": "USD $1,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Palmswap is a perpetual DEX built on BSC. Through its synthetic architecture and the use of single-asset pools, it\\u2019s more capital efficient, providing low slippage, zero price impact and fast order execution to traders.\"), mdx(\"p\", null, \"Further resources regarding Palmswap can be found on their website: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://palmswap.org/\"\n  }, \"https://palmswap.org/\")), mdx(\"p\", null, \"The bug bounty program is focused around Palmswap\\u2019s smart contracts and is mostly concerned with the loss of user funds. \"), mdx(\"p\", null, \"Palmswap provides rewards in USDT. For more details about the payment process, please view the Rewards by Threat Level section further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Responsible Publication\")), mdx(\"p\", null, \"Palmswap adheres to category Category 3: Approval Required. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/responsible-publication/\"\n  }, \"Responsible Publication \"), \"page.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Primacy of Impact vs Primacy of Rules\")), mdx(\"p\", null, \"Palmswap adheres to the Primacy of Impact for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Medium\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App - Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App - High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App - Medium\")), mdx(\"p\", null, \"If a category\\u2019s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\"), mdx(\"p\", null, \"All other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Known Issue Assurance\")), mdx(\"p\", null, \"Palmswap commits to providing Known Issue Assurance to bug submissions through their program. This means that Palmswap will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Immunefi Standard Badge\")), mdx(\"p\", null, \"Palmswap has satisfied the requirements for the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-\"\n  }, \"Immunefi Standard Badge,\"), \" which is given to projects that adhere to our best practices. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Palmswap is a perpetual DEX built on BSC. Through its synthetic architecture and the use of single-asset pools, it’s more capital efficient, providing low slippage, zero price impact and fast order execution to traders.</p><p>Further resources regarding Palmswap can be found on their website: <a href=\"https://palmswap.org/\">https://palmswap.org/</a></p><p>The bug bounty program is focused around Palmswap’s smart contracts and is mostly concerned with the loss of user funds. </p><p>Palmswap provides rewards in USDT. For more details about the payment process, please view the Rewards by Threat Level section further below. </p><p><strong>Responsible Publication</strong></p><p>Palmswap adheres to category Category 3: Approval Required. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our <a href=\"https://immunefi.com/responsible-publication/\">Responsible Publication </a>page.</p><p><strong>Primacy of Impact vs Primacy of Rules</strong></p><p>Palmswap adheres to the Primacy of Impact for the following severity levels:</p><ul><li>Smart Contract - Critical</li><li>Smart Contract - High</li><li>Smart Contract - Medium</li><li>Web/App - Critical</li><li>Web/App - High</li><li>Web/App - Medium</li></ul><p>If a category’s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.</p><p>All other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.</p><p><strong>Known Issue Assurance</strong></p><p>Palmswap commits to providing Known Issue Assurance to bug submissions through their program. This means that Palmswap will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. </p><p><strong>Immunefi Standard Badge</strong></p><p>Palmswap has satisfied the requirements for the <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-\">Immunefi Standard Badge,</a> which is given to projects that adhere to our best practices. </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Calculation for Critical Level Reports\")), mdx(\"p\", null, \"For critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 50 000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 10 000 is to be rewarded in order to incentivize security researchers against withholding a bug report.   \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Repeatable Attack Limitations\")), mdx(\"p\", null, \"In cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Public Disclosure of Known Issues\")), mdx(\"p\", null, \"Bug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The leading cause for the exploit was that the PalmSwap team did not enable the protection against the flashloan (cooldownDuration in the Manager contract), making the attack possible with significant liquidity. The secondary cause was that PalmSwap opened deposits directly to the Vault. This should have been turned off after the deployment ( inManagerMode  flag for the Vault) until the end of the accumulation of enough liquidity in the Vault.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Previous Audits\")), mdx(\"p\", null, \"Palmswap has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://2474115411-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FgSs7UmtCefVntVTkogKf%2Fuploads%2Fu9FNEjoK2kztwmuTa5o8%2FPalmSwap-audit-report.pdf?alt=media&token=120b83f0-1a98-4c59-919c-986c81dae7ad\"\n  }, \"https://2474115411-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FgSs7UmtCefVntVTkogKf%2Fuploads%2Fu9FNEjoK2kztwmuTa5o8%2FPalmSwap-audit-report.pdf?alt=media&token=120b83f0-1a98-4c59-919c-986c81dae7ad\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Proof of Concept (PoC) Requirements\")), mdx(\"p\", null, \"A PoC is required for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract - Medium\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App - Critical\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App - High\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App - Medium\")), mdx(\"p\", null, \"All PoCs submitted must comply with the Immunefi-wide \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"PoC Guidelines and Rules.\"), \" Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Payment Terms\")), mdx(\"p\", null, \"Payouts are handled by the Palmswap team directly and are denominated in USD. However, payments are done in USDT. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. </p><p><strong>Reward Calculation for Critical Level Reports</strong></p><p>For critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 50 000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 10 000 is to be rewarded in order to incentivize security researchers against withholding a bug report.   </p><p><strong>Repeatable Attack Limitations</strong></p><p>In cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.</p><p><strong>Public Disclosure of Known Issues</strong></p><p>Bug reports covering previously-discovered bugs acknowledged below are not eligible for any reward through the bug bounty program. </p><ul><li>The leading cause for the exploit was that the PalmSwap team did not enable the protection against the flashloan (cooldownDuration in the Manager contract), making the attack possible with significant liquidity. The secondary cause was that PalmSwap opened deposits directly to the Vault. This should have been turned off after the deployment ( inManagerMode  flag for the Vault) until the end of the accumulation of enough liquidity in the Vault.</li></ul><p><strong>Previous Audits</strong></p><p>Palmswap has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.</p><ul><li><a href=\"https://2474115411-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FgSs7UmtCefVntVTkogKf%2Fuploads%2Fu9FNEjoK2kztwmuTa5o8%2FPalmSwap-audit-report.pdf?alt=media&amp;token=120b83f0-1a98-4c59-919c-986c81dae7ad\">https://2474115411-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FgSs7UmtCefVntVTkogKf%2Fuploads%2Fu9FNEjoK2kztwmuTa5o8%2FPalmSwap-audit-report.pdf?alt=media&amp;token=120b83f0-1a98-4c59-919c-986c81dae7ad</a></li></ul><p><strong>Proof of Concept (PoC) Requirements</strong></p><p>A PoC is required for the following severity levels:</p><ul><li>Smart Contract - Critical</li><li>Smart Contract - High</li><li>Smart Contract - Medium</li><li>Web/App - Critical</li><li>Web/App - High</li><li>Web/App - Medium</li></ul><p>All PoCs submitted must comply with the Immunefi-wide <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">PoC Guidelines and Rules.</a> Bug report submissions without a PoC when a PoC is required will not be provided with a reward.</p><p><strong>Reward Payment Terms</strong></p><p>Payouts are handled by the Palmswap team directly and are denominated in USD. However, payments are done in USDT. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These impacts are out of scope for this bug bounty program. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"All Categories\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain/DLT\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring basic economic and governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity impacts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts from Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving centralization risks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If the PLP pool has a high utilization not all PLP tokens will be immediately redeemable, the borrowing fee should increase in this case and is considered regular operation\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web/App\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical impacts without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving attacks requiring physical access to the victim device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving attacks requiring access to the local network of the victim\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain text injection (e.g. url parameters, path, etc.)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude reflected HTML injection with or without JavaScript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude persistent plain text injection\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any impacts involving self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR without impact demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no state modifying security impact (e.g. logout CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D) without demonstration of impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts causing only the enumeration or confirmation of the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts that only require DDoS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UX and UI impacts that do not materially disrupt use of the platform\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SPF/DMARC misconfigured records\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Headers without demonstrated impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated scanner reports without demonstrated impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UI/UX best practice recommendations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Non-future-proof NFT rendering\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third-party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks that are executed against project assets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>These impacts are out of scope for this bug bounty program. </p><p><strong>All Categories</strong></p><ul><li>Impacts requiring attacks that the reporter has already exploited themselves, leading to damage</li><li>Impacts caused by attacks requiring access to leaked keys/credentials</li><li>Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code</li><li>Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production</li><li>Best practice recommendations</li></ul><p><strong>Smart Contracts and Blockchain/DLT</strong> </p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Impacts requiring basic economic and governance attacks (e.g. 51% attack)</li><li>Lack of liquidity impacts</li><li>Impacts from Sybil attacks</li><li>Impacts involving centralization risks</li><li>Best practice recommendations</li><li>If the PLP pool has a high utilization not all PLP tokens will be immediately redeemable, the borrowing fee should increase in this case and is considered regular operation</li></ul><p><strong>Web/App</strong> </p><ul><li>Theoretical impacts without any proof or demonstration</li><li>Impacts involving attacks requiring physical access to the victim device</li><li>Impacts involving attacks requiring access to the local network of the victim</li><li>Reflected plain text injection (e.g. url parameters, path, etc.)<ul><li>This does not exclude reflected HTML injection with or without JavaScript</li><li>This does not exclude persistent plain text injection</li></ul></li><li>Any impacts involving self-XSS</li><li>Captcha bypass using OCR without impact demonstration</li><li>CSRF with no state modifying security impact (e.g. logout CSRF)</li><li>Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact</li><li>Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces</li><li>Impacts causing only the enumeration or confirmation of the existence of users or tenants</li><li>Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows</li><li>Lack of SSL/TLS best practices</li><li>Impacts that only require DDoS</li><li>UX and UI impacts that do not materially disrupt use of the platform</li><li>Impacts primarily caused by browser/plugin defects</li><li>Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)</li><li>Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) </li><li>SPF/DMARC misconfigured records</li><li>Missing HTTP Headers without demonstrated impact</li><li>Automated scanner reports without demonstrated impact</li><li>UI/UX best practice recommendations</li><li>Non-future-proof NFT rendering</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet</li><li>Any testing with pricing oracles or third-party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks that are executed against project assets</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Documentation for the assets provided in the table can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.palmswap.org/\"\n  }, \"https://docs.palmswap.org/. \")), mdx(\"p\", null, \"Unless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers\"\n  }, \"Reported Subdomain Takeovers.\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Documentation for the assets provided in the table can be found at <a href=\"https://docs.palmswap.org/\">https://docs.palmswap.org/. </a></p><p>Unless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers\">Reported Subdomain Takeovers.</a></p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
