{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "apeswap",
      "slug": "apeswap",
      "project": "ApeSwap",
      "maxBounty": 10000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7uJHFpUPzG8fcpRJJ6htXf/be4a7f7dd3d076d24aa4e10a7e0caec7/ApeSwap.jpeg",
      "launchDate": "2021-06-04T00:00-05:00",
      "updatedDate": "2023-06-20T18:20:40.776Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "up to USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $2,250",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $2,250",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "5ETjpTgJV9ty7ZEmaDTwaq",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x5c8D727b265DBAfaba67E050f2f739cAeEB4A6F9",
          "description": "(BSC) - MasterApe"
        },
        {
          "id": "rOhaLs3BlAki9KFTHiGiz",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x211cBF06441BeB429677a011eAd947Eb6716054E",
          "description": "(BSC) - TimelockV2 Secure"
        },
        {
          "id": "dAIyVYq5vk2Hb0ZurlIFU",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xA0528d54E722eDDA62A844431dCE7Ebb1c70325e",
          "description": "(BSC) -TimelockV2 General"
        },
        {
          "id": "25xDu1No6LMYqNRiWcxIPv",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x1B7722871c06Acc4cfB13e7A7503eA3DEaE78Ec8",
          "description": "(BSC) - ProxyAdmin"
        },
        {
          "id": "Vd6JXKHbBdthaAbSEapfE",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x0841BD0B734E4F5853f0dD8d7Ea041c241fb0Da6",
          "description": "(BSC) - Ape LP Factory"
        },
        {
          "id": "5XvADe4bcd6l1gALeIY2dY",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7",
          "description": "(BSC) - ApeRouter"
        },
        {
          "id": "2su7qw15hWQLc97zFuHaKE",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x5c8d727b265dbafaba67e050f2f739caeeb4a6f9",
          "description": "(BSC) - MasterApe"
        },
        {
          "id": "2ESu3LQZtVMInRkLsm2gjw",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95",
          "description": "(BSC) - BANANA"
        },
        {
          "id": "01rcrEz3xKNpxf90C5YE2z",
          "type": "smart_contract",
          "url": "https://www.bscscan.com/address/0xddb3bd8645775f59496c821e4f55a7ea6a6dc299",
          "description": "(BSC) - GNANA"
        },
        {
          "id": "5xaadoyAhk5qETe5MIQFBf",
          "type": "smart_contract",
          "url": "https://www.bscscan.com/address/0xec4b9d1fd8A3534E31fcE1636c7479BcD29213aE",
          "description": "(BSC) - GNANA Treasury"
        },
        {
          "id": "EXvDgzVJsCWVjYqgLwiva",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x5711a833c943ad1e8312a9c7e5403d48c717e1aa",
          "description": "(BSC) - VaultApe (Autocompounding)"
        },
        {
          "id": "4E6m0xX3TjrgDngwTzgItM",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x7bfcd7d5d95b7ce2c4cf30d9e0ab535ed5d34968",
          "description": "(BSC) - DEX LP Fee Collector"
        },
        {
          "id": "XUrJEcKtR0GAvaxPkkOvt",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0xbe18142aa6338627c7476509a368979680c6d146",
          "description": "(BSC) - TokenVestingFactory"
        },
        {
          "id": "3YQM17CtOebsa116C9FMx0",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x6afC012783e3a6eF8C5f05F8EeE2eDeF6a052Ec4",
          "description": "NFA V2"
        },
        {
          "id": "5YwblwRJoQZJI8O5zNJEj7",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x7E060D0e0563fbD4CD2b3B845a992Eab31e47f8b",
          "description": "Zap Contract"
        },
        {
          "id": "vLEkG9s0mN8flqTkGcKky",
          "type": "smart_contract",
          "url": "https://bscscan.com/address/0x38f010F1005fC70239d6Bc2173896CA35D624e8d",
          "description": "Maximizer Vault Ape"
        },
        {
          "id": "5oPI7uD19BKOIxbtnKQ5Vv",
          "type": "smart_contract",
          "url": "https://github.com/ApeSwapFinance/apestrong-covid-relief",
          "description": "(BSC) - COVID Relief"
        },
        {
          "id": "2cLmXwRv3eGz9rdDfHEHDo",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xCf083Be4164828f00cAE704EC15a36D711491284",
          "description": "(Polygon) - ApeFactoryV2)"
        },
        {
          "id": "6OdO5rfDmheZI1m8r9B7aS",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0xC0788A3aD43d79aa53B09c2EaCc313A787d1d607",
          "description": "(Polygon) - ApeRouterV2"
        },
        {
          "id": "4D2VlP5doZmzIkY9ho2qge",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x54aff400858dcac39797a81894d9920f16972d1d",
          "description": "(Polygon) - BANANA Token MiniApeV2"
        },
        {
          "id": "424yP8UpfHudnxH0kjVpHu",
          "type": "smart_contract",
          "url": "https://polygonscan.com/address/0x5d47baba0d66083c52009271faf3f50dcc01023c",
          "description": "(Polygon) - BANANA Token"
        },
        {
          "id": "5rHmhwtAH7FsVOSulArykD",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xBAe5dc9B19004883d0377419FeF3c2C8832d7d7B",
          "description": "(Ethereum) - ApeFactory"
        },
        {
          "id": "5EGK5dDFAPZbRLWIq5eTD9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5f509a3C3F16dF2Fba7bF84dEE1eFbce6BB85587",
          "description": "(Ethereum) - ApeRouter"
        },
        {
          "id": "6LWHZrBAWOQyn0P8e3UC3i",
          "type": "websites_and_applications",
          "url": "https://www.teloscan.io/address/0xb9667Cf9A495A123b0C43B924f6c2244f42817BE#contract",
          "description": "ApeRouter"
        },
        {
          "id": "5DuaakNVgruBRr5Y0pTu2s",
          "type": "smart_contract",
          "url": "https://www.teloscan.io/address/0x411172Dfcd5f68307656A1ff35520841C2F7fAec#contract",
          "description": "Ape LP Factory"
        },
        {
          "id": "7m3US78of3AMWAUltMyDta",
          "type": "websites_and_applications",
          "url": "https://apeswap.finance",
          "description": "Ape LP Factory"
        }
      ],
      "impacts": [
        {
          "id": "3HOtAqTa1ngzngtXFVEC2h",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7rxHV9SXsZ10DOSM8Hl76y",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "N2z8s2CiLRRtGr6LczSVe",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4Nfq1xLVSBgSzn6nmoiD5M",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2WJ3JSxLKvPsweunrcZt7S",
          "title": "Retrieve sensitive data/files from a running server such as /etc/shadow, database passwords, and blockchain keys(this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1H0sqQEUgPk6wxcmkXPSxp",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "118hdjXB5PynlCsZne6h8p",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3FQxbUquC7TdsqKIEqJw3G",
          "title": "Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1MtFefmv3QHIbf0xcyobqh",
          "title": "Taking down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2ybkgY0iCOIKF73seRWOAi",
          "title": "Taking state-modifying authenticated actions (with blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "73l0VLIhQCibD8MoPYryyK",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6LCZmMG8IJGNl8wy2CEVPC",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        }
      ],
      "programOverview": "ApeSwap is a Decentralized Exchange / Automated Market Maker, Yield Farming, and Staking platform running on Binance Smart Chain, with lots of other features that let you earn and win tokens. ApeSwap was built by DeFi Apes, for DeFi Apes. They have a dedicated team of experienced monkeys, who have been in the crypto space for years. BANANA is the native currency of our platform. Stake, pool, and earn $BANANA (along with many other tokens) all on ApeSwap.\nFor more information about ApeSwap, please visit [https://apeswap.finance/](https://apeswap.finance/).  \n\nThe bug bounty program covers its smart contracts and apps and is focused on the prevention of loss of user funds.",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - Including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll bug reports must come with a PoC in order to be accepted. All bug reports without a PoC will be rejected with a request for a PoC.\n\nThe reward for critical smart contract vulnerabilities is further capped at 10% of economic damage, taking into account things like funds that are directly at risk.\n\nPayouts are handled by the __ApeSwap__ team directly and are denominated in USD. Payouts are done in __BANANA__ or __BUSD__, at the discretion of the __ApeSwap__ team. ",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Discord Invite Links\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table and the subdomain highlighted are accepted within the bug bounty program. All others are out-of-scope.\n\nOther smart contracts in production for ApeSwap not listed in this table may also be considered for the bug bounty program, especially if it affects user funds. \n\nAdditionally, the following GitHub repositories are shared for reference as they relate to the assets listed in the table. However, only vulnerabilities that affect the assets in production are considered as in-scope of the bug bounty program.\n\n__DEX__\n[https://github.com/ApeSwapFinance/apeswap-dex](https://github.com/ApeSwapFinance/apeswap-dex)\n\n__MasterApe and Timelock__\n[https://github.com/ApeSwapFinance/apeswap-banana-farm](https://github.com/ApeSwapFinance/apeswap-banana-farm)\n\n__BANANA Token, Golden Banana, and Treasury__\n[https://github.com/ApeSwapFinance/apeswap-golden-banana](https://github.com/ApeSwapFinance/apeswap-golden-banana)\n\n__ApeRouter__\n[https://github.com/ApeSwapFinance/apeswap-swap-periphery](https://github.com/ApeSwapFinance/apeswap-swap-periphery)\n\n__ApeFactory__\n[https://github.com/ApeSwapFinance/apeswap-swap-core](https://github.com/ApeSwapFinance/apeswap-swap-core)\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "AMM",
          "DEX"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "BSC"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "up to USD $10,000"
          },
          {
            "level": "High",
            "payout": "USD $2,250"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $2,250"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"ApeSwap is a Decentralized Exchange / Automated Market Maker, Yield Farming, and Staking platform running on Binance Smart Chain, with lots of other features that let you earn and win tokens. ApeSwap was built by DeFi Apes, for DeFi Apes. They have a dedicated team of experienced monkeys, who have been in the crypto space for years. BANANA is the native currency of our platform. Stake, pool, and earn $BANANA (along with many other tokens) all on ApeSwap.\\nFor more information about ApeSwap, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://apeswap.finance/\"\n  }, \"https://apeswap.finance/\"), \".  \"), mdx(\"p\", null, \"The bug bounty program covers its smart contracts and apps and is focused on the prevention of loss of user funds.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>ApeSwap is a Decentralized Exchange / Automated Market Maker, Yield Farming, and Staking platform running on Binance Smart Chain, with lots of other features that let you earn and win tokens. ApeSwap was built by DeFi Apes, for DeFi Apes. They have a dedicated team of experienced monkeys, who have been in the crypto space for years. BANANA is the native currency of our platform. Stake, pool, and earn $BANANA (along with many other tokens) all on ApeSwap.\nFor more information about ApeSwap, please visit <a href=\"https://apeswap.finance/\">https://apeswap.finance/</a>.  </p><p>The bug bounty program covers its smart contracts and apps and is focused on the prevention of loss of user funds.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Including rounding errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Congestion and scalability\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including running out of gas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including block stuffing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including susceptibility to frontrunning\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consensus failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to block timestamp manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remote Code Execution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vertical Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML External Entities Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFI/RFI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Horizontal Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stored XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflective XSS with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct object reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal SSRF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Session fixation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insecure Deserialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOM XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL misconfigurations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL/TLS issues (weak crypto, improper setup)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL redirect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clickjacking (must be accompanied with PoC)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Misleading Unicode text (e.g. using right to left override characters)\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain</strong> </p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>Including rounding errors</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks<ul><li>including flash loan attacks</li></ul></li><li>Congestion and scalability<ul><li>including running out of gas</li><li>including block stuffing</li><li>including susceptibility to frontrunning</li></ul></li><li>Consensus failures</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Susceptibility to block timestamp manipulation</li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Remote Code Execution</li><li>Trusting trust/dependency vulnerabilities</li><li>Vertical Privilege Escalation</li><li>XML External Entities Injection</li><li>SQL Injection</li><li>LFI/RFI</li><li>Horizontal Privilege Escalation</li><li>Stored XSS</li><li>Reflective XSS with impact</li><li>CSRF with impact</li><li>Direct object reference</li><li>Internal SSRF</li><li>Session fixation</li><li>Insecure Deserialization</li><li>DOM XSS</li><li>SSL misconfigurations</li><li>SSL/TLS issues (weak crypto, improper setup)</li><li>URL redirect</li><li>Clickjacking (must be accompanied with PoC)</li><li>Misleading Unicode text (e.g. using right to left override characters)</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \"), mdx(\"p\", null, \"All bug reports must come with a PoC in order to be accepted. All bug reports without a PoC will be rejected with a request for a PoC.\"), mdx(\"p\", null, \"The reward for critical smart contract vulnerabilities is further capped at 10% of economic damage, taking into account things like funds that are directly at risk.\"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ApeSwap\"), \" team directly and are denominated in USD. Payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BANANA\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BUSD\"), \", at the discretion of the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ApeSwap\"), \" team. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. </p><p>All bug reports must come with a PoC in order to be accepted. All bug reports without a PoC will be rejected with a request for a PoC.</p><p>The reward for critical smart contract vulnerabilities is further capped at 10% of economic damage, taking into account things like funds that are directly at risk.</p><p>Payouts are handled by the <strong>ApeSwap</strong> team directly and are denominated in USD. Payouts are done in <strong>BANANA</strong> or <strong>BUSD</strong>, at the discretion of the <strong>ApeSwap</strong> team. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discord Invite Links\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\")), mdx(\"p\", null, \"The following activities are prohibited by bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles</li><li>Not to exclude oracle manipulation/flash loan attacks</li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Discord Invite Links</li><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li></ul><p>The following activities are prohibited by bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only web/app vulnerabilities that \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"directly\"), \" affect the web/app assets listed in this table and the subdomain highlighted are accepted within the bug bounty program. All others are out-of-scope.\"), mdx(\"p\", null, \"Other smart contracts in production for ApeSwap not listed in this table may also be considered for the bug bounty program, especially if it affects user funds. \"), mdx(\"p\", null, \"Additionally, the following GitHub repositories are shared for reference as they relate to the assets listed in the table. However, only vulnerabilities that affect the assets in production are considered as in-scope of the bug bounty program.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DEX\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ApeSwapFinance/apeswap-dex\"\n  }, \"https://github.com/ApeSwapFinance/apeswap-dex\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MasterApe and Timelock\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ApeSwapFinance/apeswap-banana-farm\"\n  }, \"https://github.com/ApeSwapFinance/apeswap-banana-farm\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BANANA Token, Golden Banana, and Treasury\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ApeSwapFinance/apeswap-golden-banana\"\n  }, \"https://github.com/ApeSwapFinance/apeswap-golden-banana\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ApeRouter\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ApeSwapFinance/apeswap-swap-periphery\"\n  }, \"https://github.com/ApeSwapFinance/apeswap-swap-periphery\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ApeFactory\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/ApeSwapFinance/apeswap-swap-core\"\n  }, \"https://github.com/ApeSwapFinance/apeswap-swap-core\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only web/app vulnerabilities that <strong>directly</strong> affect the web/app assets listed in this table and the subdomain highlighted are accepted within the bug bounty program. All others are out-of-scope.</p><p>Other smart contracts in production for ApeSwap not listed in this table may also be considered for the bug bounty program, especially if it affects user funds. </p><p>Additionally, the following GitHub repositories are shared for reference as they relate to the assets listed in the table. However, only vulnerabilities that affect the assets in production are considered as in-scope of the bug bounty program.</p><p><strong>DEX</strong>\n<a href=\"https://github.com/ApeSwapFinance/apeswap-dex\">https://github.com/ApeSwapFinance/apeswap-dex</a></p><p><strong>MasterApe and Timelock</strong>\n<a href=\"https://github.com/ApeSwapFinance/apeswap-banana-farm\">https://github.com/ApeSwapFinance/apeswap-banana-farm</a></p><p><strong>BANANA Token, Golden Banana, and Treasury</strong>\n<a href=\"https://github.com/ApeSwapFinance/apeswap-golden-banana\">https://github.com/ApeSwapFinance/apeswap-golden-banana</a></p><p><strong>ApeRouter</strong>\n<a href=\"https://github.com/ApeSwapFinance/apeswap-swap-periphery\">https://github.com/ApeSwapFinance/apeswap-swap-periphery</a></p><p><strong>ApeFactory</strong>\n<a href=\"https://github.com/ApeSwapFinance/apeswap-swap-core\">https://github.com/ApeSwapFinance/apeswap-swap-core</a></p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
