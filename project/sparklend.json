{
  "pageProps": {
    "bounty": {
      "contentfulId": "2uUkNnL5eBvlNehNdyOjdQ",
      "id": "sparklend",
      "slug": "sparklend",
      "project": "SparkLend",
      "maxBounty": 5000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5bhaKyLr9geuB0Ic7G8yCc/4b09ba1da880cdc7b7a6c81c4facd454/WjD9qgbk_400x400.jpg",
      "launchDate": "2023-11-01T15:00:00.000Z",
      "endDate": null,
      "updatedDate": "2024-07-19T08:11:57.819Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000 to USD $5,000,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000 to USD $100,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "Website - USD $5,000 & Application - USD $25,000 to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "Website - USD $2,500 & Application - USD $5,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "Website - USD $1,000 & Application - USD $2,500",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "3GHGWmfr9y31pqM9lpZ66s",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x8105f69D9C41644c6A0803fDA7D03Aa70996cFD9",
          "description": "AaveOracle",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4zMeRrtbIa6FjJSvPjupMs",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xdA135Cd78A086025BcdC87B038a1C462032b510C",
          "description": "ACLManager",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3GbqIPm2l8C1DJF7pb8t2p",
          "type": "smart_contract",
          "url": "https://github.com/marsfoundation/aave-v3-core/blob/master/contracts/protocol/tokenization/AToken.sol",
          "description": "AToken (proxy)",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6jOuExkwfiWJjZY6gpreCn",
          "type": "smart_contract",
          "url": "https://github.com/marsfoundation/sparklend/blob/master/src/DaiInterestRateStrategy.sol",
          "description": "DaiInterestRateStrategy",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7fGwer3KaIMfuzCjq4YzEq",
          "type": "smart_contract",
          "url": "https://github.com/marsfoundation/aave-v3-core/blob/master/contracts/protocol/pool/DefaultReserveInterestRateStrategy.sol",
          "description": "DefaultReserveInterestRateStrategy",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6S3xBTuM1YwChjAdrdKavP",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xf09e48dd4CA8e76F63a57ADd428bB06fee7932a4",
          "description": "EmissionsManager",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7dRMSbVnkN2U8i1xIMEMWF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x4370D3b6C9588E02ce9D22e684387859c7Ff5b34",
          "description": "Incentives (proxy)",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7HkT95DCBFeQZ0x0iE8PE3",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xC13e21B648A5Ee794902342038FF3aDAB66BE987",
          "description": "Pool (proxy)",
          "isPrimacyOfImpact": null
        },
        {
          "id": "ajIv39zyu3dPYo9b19bOj",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x02C3eA4e34C0cBd694D2adFa2c690EECbC1793eE",
          "description": "PoolAddressProvider",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5ftB5PUSpKYFlKu6Q2lmaM",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x03cFa0C4622FF84E50E75062683F44c9587e6Cc1",
          "description": "PoolAddressProviderRegistry",
          "isPrimacyOfImpact": null
        },
        {
          "id": "24rlyxmwBl4MPDAcBQ3LP2",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x542DBa469bdE58FAeE189ffB60C6b49CE60E0738",
          "description": "PoolConfigurator (proxy)",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2tQeD1bKwjKHDwYOiraB65",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb9E6DBFa4De19CCed908BcbFe1d015190678AB5f",
          "description": "SavingsDaiOracle",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2rYq1WxGbLNiZC2L6sjXZO",
          "type": "smart_contract",
          "url": "https://github.com/marsfoundation/aave-v3-core/blob/master/contracts/protocol/tokenization/StableDebtToken.sol",
          "description": "StableDebtToken (proxy)",
          "isPrimacyOfImpact": null
        },
        {
          "id": "4WGlHIwLYwYtwgDdJjfIl1",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb137E7d16564c81ae2b0C8ee6B55De81dd46ECe5",
          "description": "Treasury (proxy)",
          "isPrimacyOfImpact": null
        },
        {
          "id": "2AwwbwnfhrfQ8ftgkSuGau",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x92eF091C5a1E01b3CE1ba0D0150C84412d818F7a",
          "description": "TreasuryController",
          "isPrimacyOfImpact": null
        },
        {
          "id": "5tT74lWj567OmwwiO0tTA6",
          "type": "smart_contract",
          "url": "https://github.com/marsfoundation/aave-v3-core/blob/master/contracts/protocol/tokenization/VariableDebtToken.sol",
          "description": "VariableDebtToken (proxy)",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1wTaOQ14KQpJn5ZgxmXNFn",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xBD7D6a9ad7865463DE44B05F04559f65e3B11704",
          "description": "WethGateway",
          "isPrimacyOfImpact": null
        },
        {
          "id": "3qopENbLZ2ZY4Rif8QeJeQ",
          "type": "smart_contract",
          "url": "https://immunefi.com/",
          "description": "Primacy of Impact",
          "isPrimacyOfImpact": true
        },
        {
          "id": "6r21gJOmPf63EDkxJvBJc",
          "type": "websites_and_applications",
          "url": "https://github.com/marsfoundation/spark-app",
          "description": "Spark Application (app.spark.fi)",
          "isPrimacyOfImpact": null
        },
        {
          "id": "6Q3Zg0N82UorgdZpi84Ex3",
          "type": "websites_and_applications",
          "url": "https://github.com/marsfoundation/spark-docs",
          "description": "Spark User Documentation (docs.spark.fi)",
          "isPrimacyOfImpact": null
        },
        {
          "id": "12ZBZvSuKk7aejrTAQoFTB",
          "type": "websites_and_applications",
          "url": "https://github.com/marsfoundation/spark-dev-docs",
          "description": "Spark Developer Documentation (devs.spark.fi)",
          "isPrimacyOfImpact": null
        }
      ],
      "impacts": [
        {
          "id": "6rNLsRV1xzaZ8tHhYVrmyc",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "398ODr8xpeOoESv1WveMjF",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "77udaAMJ7ZP1DXYFkKyHaf",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2C4DvNLhUbzCkf9SGjCGYE",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6DpNB27C9ICwDNBc9Jb6jQ",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3qytfidESnamvDQGZeRPfS",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as, changing registration information, commenting, voting, making trades, withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3ghyKHgVBtBhTbil6n6fCV",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "VhkUQLLsYrSAGnTWr6zGX",
          "title": "Malicious interactions with an already-connected wallet such as modifying transaction arguments or parameters, substituting contract addresses, submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "D0OZs8CbV2yXQ7PBM3Wt5",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2l8FRmDWcXl09z6gNL4COH",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "319adr3N4lrYbFsrbJMn95",
          "title": "Temporary freezing of funds (see out of scope impacts for scenarios where this does not apply)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5iqGl9Rgpyc7nex9Ct9oxC",
          "title": "Taking down the Spark website (spark.fi) or documentation portals (docs.spark.fi / devs.spark.fi)",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "CL5dcOuWz1tsRBtgQ8DIy",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as HTML injection without Javascript, replacing existing text with arbitrary text, arbitrary file uploads, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "5nJThh1h7HR1Rj4xxwL1vd",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as email or password of the victim, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "616rEnPD1yEt6yWY3Qqm7v",
          "title": "Improperly disclosing confidential user information such as email address, phone number, physical address, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "18hzMSOrt1GaiwMVxTRqLH",
          "title": "Subdomain takeover without already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "7DOkMaGAIN9n87LaQQGcb1",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "1jZ6abrswR6wB2LtbTJDJl",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as changing the first/last name of user, or en/disabling notification",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "IDZ26hBFkoJbiyGTpju7l",
          "title": "Injecting/modifying the static content on the target application without Javascript (Reflected) such as reflected HTML injection or loading external site data",
          "type": "websites_and_applications",
          "severity": "medium"
        }
      ],
      "programOverview": "SparkLend is a DAI-centric decentralised non-custodial liquidity market protocol where users can participate as suppliers or borrowers. Suppliers provide liquidity to the market to earn a passive income, while borrowers are able to borrow in an overcollateralised (perpetually) or undercollateralised (one-block liquidity) fashion. \n\nFor more information about Spark, please visit [https://spark.fi/ ](https://spark.fi/)\n\nSparkLend provides rewards in DAI. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n__Responsible Publication__\n\nSparkLend adheres to category 3. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication](https://immunefi.com/responsible-publication/) page.\n\n__Primacy of Impact vs Primacy of Rules__\n\nSparkLend adheres to the Primacy of Impact for the following impacts:\n- Smart Contract - Critical \n\nIf an impact is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nTestnet and mock files are not covered under the Primacy of Impact. \n\nAll other impacts are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n\n__Known Issue Assurance__\n\nSparkLend commits to providing Known Issue Assurance to bug submissions through their program. This means that SparkLend will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \n\n__Immunefi Standard Badge__\n\nSparkLend has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209), which is given to projects that adhere to our best practices.",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \n\n__Reward Calculation for Critical Level Reports__\n\nFor critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 5 000 000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 50 000 is to be rewarded in order to incentivize security researchers against withholding a bug report.  \n\n__Repeatable Attack Limitations__\n\nIn cases of repeatable attacks for smart contract bugs, only the first attack is considered if the smart contracts where the vulnerability exists can be upgraded, paused, or killed. If the attack impacts a smart contract directly holding funds that cannot be upgraded or paused, the  amount of funds at risk will be calculated with the impact of the first attack being at 100% and then for every 300 blocks the attack needs for subsequent attacks from the first attack the impact will be counted at a reduction of 25% from the impact of the first attack, rounded down. For avoidance of doubt, if a second attack would happen at 600 blocks and then a third at 900 blocks, the funds at risk would be counted at 50% and 25% of the reward from the first attack, respectively.\n\nHowever, for smart contracts directly holding funds that cannot be paused, if a discovered vulnerability includes the temporary locking of funds that could otherwise be withdrawn and thus prevented from being stolen but still accessible to the exploiter to take the funds, the time is extended to the exact same time as temporary locking. Extensions of the temporary locking that introduce a gap where withdrawals can happen will not be considered. \n\nWe do not consider funds locked if:\n- Funds are not used as collateral and can eventually be recovered by a governance action\n\n__Reward Calculation for High Level Reports__\n\nHigh smart contract impacts will be capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 300 blocks that the funds could be temporarily frozen, rounded down to the nearest multiple of 300, up to the hard cap of USD 100 000. However, if it is within the hard cap, there is a further hard cap of 1000% of the funds affected. \n\nHowever, a temporary freezing impact with less than 150 blocks will be rewarded the flat amount of  USD 10 000.\n\nWe do not consider funds frozen if:\n- Funds are not used as collateral and can eventually be recovered by a governance action\n\n\n__Restrictions on Security Researcher Eligibility__\n\nSecurity researchers who fall under any of the following are ineligible for a reward\n- Compensated contributors of Spark and/or MakerDAO who have written code for at least one of the assets in scope below\n\n__Previous Audits__\n\nSparkLend has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\n- [https://devs.spark.fi/security/security-and-audits ](https://devs.spark.fi/security/security-and-audits)\n\n__Feasibility Limitations__\n\nBug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be downgraded or rejected entirely. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:\n- Losses or other negative effects of the attack are inflicted upon SparkLend ecosystem participants \n- The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC is required for the following severity levels:\n- Smart Contract - Critical\n- Smart Contract - High\n\nAll PoCs submitted must comply with the Immunefi-wide [PoC Guidelines and Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules) Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\n\n__Other Terms and Information__\n\n- In the calculation of the USD value of the total value locked metric in determining the funds at risk, it does not include outstanding borrows.\n- Referenced libraries, proxy implementations and inherited contracts of all listed assets in scope are also considered in scope of the bug bounty program.\n   - In selecting an asset in scope that is impacted, please select the most relevant asset.\n- In order to be eligible for a reward, the vulnerability must exist in the deployed smart contract and not just the GitHub file. In the event that a vulnerability exists on the GitHub file but not on the most recently deployed contract, this may be due to a fix to address a vulnerability but done in a discreet manner until proper communication can be done. \n\n__Reward Payment Terms__\n\nReward Denomination:\nPayments are denominated in USD. However, payouts are done in DAI assuming a full 1:1 ratio with the USD. However, if the price of DAI deviates from the USD value by more than 1%, the amount of DAI will be adjusted.\n\nPayout Process:\nAll bounty payouts are handled by MakerDAO governance. Upon confirmation, bug bounty payouts should be included in the next possible ‘executive spell’, which is a governance vote with an onchain payload attached to it. This would involve sending DAI directly from the protocol’s buffer to the whitehat hacker.\n\nImmunefi will publicly contact one of the Governance Facilitators with the request, including a specification of the respective vulnerability report, the requested amount and the Ethereum mainnet addresses of the beneficiaries. This should also include the payment details of the Immunefi fee, if it applies. Immunefi and the Maker Governance Facilitators should make sure the payout occurs up to one full calendar month after the report was approved.\n\nFor bug bounty rewards over USD 1 000 000, after the first million is paid out, the remaining amount is paid out over time with up to USD 1 000 000 per consecutive month until the determined amount for payout is reached.",
      "outOfScopeAndRules": "These impacts are out of scope for this bug bounty program. \n\n__All Categories__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Impacts relying on attacks involving the depegging of an external stablecoin or asset (e.g., wstETH) where the attacker does not directly cause the depegging due to a bug in code\n- We do not consider funds frozen if: Funds are not used as collateral and can eventually be recovered by a governance action\n- Such impacts are therefore out of scope.\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n\n__Smart Contracts__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks\n\n__Websites and Applications__\n- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n- This does not exclude reflected HTML injection with or without JavaScript\n- This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, Github tokens, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass)\n- SPF/DMARC misconfigured records)\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering\n\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All code of SparkLend can be found in the following repositories: \n- [https://github.com/marsfoundation/sparklend ](https://github.com/marsfoundation/sparklend)\n- [https://github.com/marsfoundation/aave-v3-core/ ](https://github.com/marsfoundation/aave-v3-core/)\n- [https://github.com/marsfoundation/aave-v3-periphery/ ](https://github.com/marsfoundation/aave-v3-periphery/)\n- [https://github.com/marsfoundation/spark-app](https://github.com/marsfoundation/spark-app)\n\nDocumentation for the assets provided in the table can be found at [https://devs.spark.fi/](https://devs.spark.fi/)\n\nAssets in scope for Applications - [http://app.spark.fi](http://app.spark.fi)\n\nAssets in scope for Websites - [spark.fi](spark.fi), [docs.spark.fi](docs.spark.fi), [devs.spark.fi](devs.spark.fi), [api-v2.spark.fi](api-v2.spark.fi)",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Lending"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 to USD $5,000,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000 to USD $100,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "Website - USD $5,000 & Application - USD $25,000 to USD $50,000"
          },
          {
            "level": "High",
            "payout": "Website - USD $2,500 & Application - USD $5,000"
          },
          {
            "level": "Medium",
            "payout": "Website - USD $1,000 & Application - USD $2,500"
          }
        ]
      },
      "websiteUrl": null,
      "description": "SparkLend is a DAI-centric decentralised non-custodial liquidity market protocol where users can participate as suppliers or borrowers. Suppliers provide liquidity to the market to earn a passive income, while borrowers are able to borrow in an overcollateralised (perpetually) or undercollateralised (one-block liquidity) fashion. ",
      "githubUrl": null,
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)\n",
      "defaultProhibitedActivites": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)\n",
      "premiumTriaging": true
    },
    "project": {
      "premiumTriaging": true,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "SparkLend Bug Bounties | Immunefi",
      "description": "Find bugs and vulnerabilities on SparkLend and get paid up to $5,000,000.",
      "url": "https://immunefi.com/bug-bounty/sparklend",
      "ogImg": "/api/bounty/og-image?project=SparkLend"
    },
    "bbpPageV2Enabled": true,
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
