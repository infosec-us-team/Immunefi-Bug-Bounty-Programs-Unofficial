{
  "pageProps": {
    "bounty": {
      "contentfulId": "3k2ksVQuBWuV2t6GO0r0FO",
      "id": "eigenlayer",
      "slug": "eigenlayer",
      "project": "EigenLayer",
      "maxBounty": 2000000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1fGXCRkOEb10n2rbNzZuEx/e1a710a7a3af9141424011913bbc58be/Eigenlayer_logo.jpeg",
      "launchDate": "2023-06-14T21:00:00.000Z",
      "endDate": null,
      "updatedDate": "2024-11-14T19:36:34.777Z",
      "kyc": false,
      "rewards": [
        {
          "id": 8247,
          "assetType": "smart_contract",
          "severity": "critical",
          "rewardModel": "range",
          "maxReward": 2000000,
          "minReward": 250000,
          "rewardCalculationPercentage": 10
        },
        {
          "id": 5566,
          "assetType": "smart_contract",
          "severity": "high",
          "rewardModel": "range",
          "maxReward": 250000,
          "minReward": 50000
        },
        {
          "id": 5567,
          "assetType": "smart_contract",
          "severity": "medium",
          "rewardModel": "range",
          "maxReward": 30000,
          "minReward": 10000
        },
        {
          "id": 5568,
          "assetType": "websites_and_applications",
          "severity": "critical",
          "rewardModel": "range",
          "maxReward": 100000,
          "minReward": 50000,
          "otherImpactMaxReward": 0
        },
        {
          "id": 5569,
          "assetType": "websites_and_applications",
          "severity": "high",
          "rewardModel": "range",
          "maxReward": 25000,
          "minReward": 10000
        },
        {
          "id": 5570,
          "assetType": "websites_and_applications",
          "severity": "medium",
          "rewardModel": "range",
          "maxReward": 5000,
          "minReward": 2000
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "JqnoCoYebktgXPKnC52MZ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
          "description": "DelegationManager.sol - Transparent Upgradeable Proxy - the current implementation is considered in-scope",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-06-14T21:21:13.327Z"
        },
        {
          "id": "DSt63fX0Xl6Fr13luWjYJ",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
          "description": "StrategyManager.sol - Transparent Upgradeable Proxy - the current implementation is considered in-scope",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-06-14T21:21:48.872Z"
        },
        {
          "id": "2c6anFFU8K7luRLwLASaCy",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x1BeE69b7dFFfA4E2d53C2a2Df135C388AD25dCD2",
          "description": "StrategyBase.sol - Transparent Upgradeable Proxy - the current implementation is considered in-scope",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-06-14T21:22:27.895Z"
        },
        {
          "id": "2dvhockeQXi2FGDiLY7R2k",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7Fe7E9CC0F274d2435AD5d56D5fa73E47F6A23D8",
          "description": "DelayedWithdrawalRouter.sol - Transparent Upgradeable Proxy - the current implementation is considered in-scope",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-06-14T21:22:42.900Z"
        },
        {
          "id": "2b9xsQXGH7m2QKDNvPOxm8",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5a2a4F2F3C18f09179B6703e63D9eDD165909073",
          "description": "EigenPod.sol - Upgradeable Beacon Proxy - the current implementation is considered in-scope",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-06-14T21:22:56.570Z"
        },
        {
          "id": "4wPLGcs0RSTwjLKey2r1kV",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
          "description": "EigenPodManager.sol - Transparent Upgradeable Proxy - the current implementation is considered in-scope",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-06-14T21:23:13.487Z"
        },
        {
          "id": "3d038dn1o8dOoLc9CXXW28",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0c431C66F4dE941d089625E5B423D00707977060",
          "description": "PauserRegistry.sol",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-06-14T21:23:28.032Z"
        },
        {
          "id": "UYhgYKkZUqnElM6Xc29mK",
          "type": "websites_and_applications",
          "url": "https://app.eigenlayer.xyz/",
          "description": "DelayedWithdrawalRouter.sol",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-06-14T21:23:41.601Z"
        },
        {
          "id": "5bQd4c0tlAFFxkkiq30wEn",
          "type": "smart_contract",
          "url": "https://immunefi.com",
          "description": "Primacy of Impact",
          "isPrimacyOfImpact": true,
          "isSafeHarbor": null,
          "addedAt": "2023-10-05T15:29:03.600Z"
        },
        {
          "id": "5Mw1QvQb1ppdWflVCDH0dE",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x135dda560e946695d6f155dacafc6f1f25c1f5af",
          "description": "AVSDirectory.sol - Transparent Upgradeable Proxy - the current implementation is considered in-scope",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-04-10T12:27:45.678Z"
        }
      ],
      "impacts": [
        {
          "id": 23,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed yield"
        },
        {
          "id": 25,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed yield"
        },
        {
          "id": 4293,
          "type": "websites_and_applications",
          "severity": "high",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as: HTML injection without Javascript, Replacing existing text with arbitrary text, Arbitrary file uploads, etc."
        },
        {
          "id": 49,
          "type": "websites_and_applications",
          "severity": "high",
          "title": "Subdomain takeover without already-connected wallet interaction"
        },
        {
          "id": 29,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Smart contract unable to operate due to lack of token funds"
        },
        {
          "id": 4294,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol) where the damage to users far exceeds the cost to attackers."
        },
        {
          "id": 4295,
          "type": "websites_and_applications",
          "severity": "medium",
          "title": "Injecting/modifying the static content on the target application without Javascript (Reflected) such as: Reflected HTML injection, Loading external site data"
        },
        {
          "id": 52,
          "type": "websites_and_applications",
          "severity": "medium",
          "title": "Redirecting users to malicious websites (open redirect)"
        },
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 17,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds"
        },
        {
          "id": 4296,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Retrieve sensitive data/files from a running server such as: /etc/shadow, database passwords, blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)"
        },
        {
          "id": 37,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Taking down the application/website"
        },
        {
          "id": 4297,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as: Changing registration information, Commenting, Voting, Making trades, Withdrawals, etc."
        },
        {
          "id": 41,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Subdomain takeover with already-connected wallet interaction"
        },
        {
          "id": 42,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Direct theft of user funds"
        },
        {
          "id": 4298,
          "type": "websites_and_applications",
          "severity": "critical",
          "title": "Malicious interactions with an already-connected wallet such as: Modifying transaction arguments or parameters, Substituting contract addresses, Submitting malicious transactions"
        }
      ],
      "programOverview": "EigenLayer is a protocol built on Ethereum that introduces restaking, a new primitive in cryptoeconomic security. This primitive enables the reuse of ETH on the consensus layer. Users that stake ETH natively or with a liquid staking token (LST) can opt-in to EigenLayer smart contracts to restake their ETH or LST and extend cryptoeconomic security to additional applications on the network to earn additional rewards. \n\nFor more information about EigenLayer, please visit [https://www.eigenlayer.xyz/.](https://www.eigenlayer.xyz/)  \n\nEigenLayer provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n\n__Primacy of Impact vs Primacy of Rules__\n\nEigenLayer adheres to the Primacy of Impact for the following severity levels:\n\n- Smart Contract, Critical Severity Level\n- Smart Contract, High Severity Level\n- Smart Contract, Medium Severity Level\n\nIf a category’s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nTestnet and mock files are not covered under the Primacy of Impact. Additionally, if the impact is primarily limited to code that is currently paused, EigenLayer reserves the right to downgrade or reject the report.\n\nAll other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n\n\n__Immunefi Standard Badge__\n\nEigenLayer has satisfied the requirements for the [Immunefi Standard Badge,](https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-) which is given to projects that adhere to our best practices.",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \n\n__Reward Calculation for Critical Level Reports__\n\nFor critical Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 2,000,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 250,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.   \nFor Critical website and application bug reports,  the reward amount is 10% of the funds directly affected up to a maximum of USD 100,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 50,000 is to be rewarded in order to incentivize security researchers against withholding a bug report.   \n\n__Repeatable Attack Limitations__\n\nIn cases of repeatable attacks for smart contract bugs, only the first attack will be counted, regardless of whether the smart contract is upgradable, pausable, or killable.\n\n__Reward Calculation for High Level Reports__\n\nFor High Smart Contract bugs, the reward amount is 10% of the funds directly affected up to a maximum of USD 250,000. The calculation of the amount of funds at risk is based on the time and date the bug report is submitted. However, a minimum reward of USD 50,000 is to be rewarded in order to incentivize security researchers against withholding a bug report. \n\n__Previous Audits__\n\nEigenLayer has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\n\n- Any audits listed at https://github.com/Layr-Labs/eigenlayer-contracts/tree/mainnet/audits \n- Any audits listed at https://docs.eigenlayer.xyz/eigenlayer/security/audits \n\n__Feasibility Limitations__\n\nBug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be out of scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:\n- Losses or other negative effects of the attack are inflicted upon EigenLayer ecosystem participants \n- The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem\n\nIf issues are associated with the pausing functionality of the contract, then the severity will depend on whether the feature was paused or not at the time of the report.\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC is required for the following severity levels:\n- Smart Contracts, Critical Severity Level\n- Smart Contracts, High Severity Level\n- Smart Contracts, Medium Severity Level\n\nAll PoCs submitted must comply with the Immunefi-wide [PoC Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules). Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\n\n__Reward Payment Terms__\n\nPayouts are handled by the EigenLayer team directly and are denominated in USD. However, payments are done in USDC.",
      "outOfScopeAndRules": null,
      "assetsBodyV2": "Check “releases” to view code from the most recent mainnet deployment.\n\nMost of EigenLayer’s smart contracts are pausable. For any pausable contract, functions which are currently paused are considered out-of-scope, unless an exploit includes a means to bypass pausability.  \n\nMost of EigenLayer’s smart contracts are upgradeable. For any upgradeable contract, the current implementation on ETH mainnet is considered in-scope, while no-longer-used implementations are considered out-of-scope.\nDeployed contract addresses on ETH mainnet should be documented in [https://github.com/Layr-Labs/eigenlayer-contracts/#deployments](https://github.com/Layr-Labs/eigenlayer-contracts/#deployments) \n\nUnless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about [Reported Subdomain Takeovers.](https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers)",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Required",
          "Primacy of Impact"
        ],
        "productType": [
          "Restaking"
        ],
        "projectType": [
          "Infrastructure"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "JavaScript",
          "Solidity"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $250,000 to USD $2,000,000"
          },
          {
            "level": "High",
            "payout": "USD $50,000 to USD $250,000"
          },
          {
            "level": "Medium",
            "payout": "USD $10,000 to USD $30,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000 to USD $100,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000 to $25,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,000 to USD $5,000"
          }
        ]
      },
      "websiteUrl": null,
      "description": "EigenLayer is a protocol built on Ethereum that introduces restaking, a new primitive in cryptoeconomic security. This primitive enables the reuse of ETH on the consensus layer. Users that stake ETH natively or with a liquid staking token (LST) can opt-in to EigenLayer smart contracts to restake their ETH or LST and extend cryptoeconomic security to additional applications on the network to earn additional rewards.",
      "githubUrl": null,
      "feasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)\n",
      "prohibitedActivites": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)\n",
      "responsiblePublicationCategory": "category_3",
      "knownIssues": [],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": null,
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": "- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n  - This does not exclude reflected HTML injection with or without JavaScript\n  - This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Server-side non-confidential information disclosure, such as IPs, server names, and most stack traces\n- Impacts causing only the enumeration or confirmation of the existence of users or tenants\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass)\n- SPF/DMARC misconfigured records)\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- UI/UX best practice recommendations\n- Non-future-proof NFT rendering",
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": "- Impacts from malicious upgrades to third party contracts utilized by EigenLayer",
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum",
      "rewardsToken": "USDC",
      "eligibilityCriteria": [],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [
        {
          "id": 134,
          "title": "EigenLayer Codebase",
          "description": "Program Codebase",
          "url": "https://github.com/Layr-Labs/eigenlayer-contracts"
        }
      ],
      "programDocumentations": [],
      "primacy": "primacy_of_impact",
      "newProgramRewardsEnabled": true,
      "findingsUrl": null,
      "premiumTriaging": false
    },
    "project": {
      "premiumTriaging": false,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "EigenLayer Bug Bounties",
      "description": "Find bugs and vulnerabilities on EigenLayer and get paid up to $2,000,000.",
      "url": "https://immunefi.com/bug-bounty/eigenlayer",
      "ogImg": "/api/bounty/og-image?project=EigenLayer"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
