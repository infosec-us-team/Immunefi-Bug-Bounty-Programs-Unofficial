{
  "pageProps": {
    "bounty": {
      "contentfulId": "4vtnTRuUDARjTmiTGoy1vj",
      "id": "dodo",
      "slug": "dodo",
      "project": "DODO",
      "maxBounty": 100000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3gUM6wDJxYyzDVoWpLQX4o/b521d1e6620ff23b80cc0c439666a5d1/DODO.svg",
      "launchDate": "2021-05-25T05:00:00.000Z",
      "endDate": null,
      "updatedDate": "2024-11-18T12:03:26.280Z",
      "kyc": false,
      "rewards": [
        {
          "id": 6161,
          "assetType": "smart_contract",
          "severity": "high",
          "rewardModel": "up_to",
          "maxReward": 10000
        },
        {
          "id": 6162,
          "assetType": "smart_contract",
          "severity": "medium",
          "rewardModel": "up_to",
          "maxReward": 5000
        },
        {
          "id": 6163,
          "assetType": "smart_contract",
          "severity": "low",
          "rewardModel": "up_to",
          "maxReward": 1000
        },
        {
          "id": 8289,
          "assetType": "smart_contract",
          "severity": "critical",
          "rewardModel": "up_to",
          "maxReward": 100000,
          "rewardCalculationPercentage": 10
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "5aUDZ9q69rcMvR9s0AsBur",
          "type": "smart_contract",
          "url": "https://github.com/DODOEX/contractV2/tree/main",
          "description": null,
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2022-04-07T13:11:28.146Z"
        },
        {
          "id": "1fkxBhXuwloqJpWFI5ALjM",
          "type": "smart_contract",
          "url": "https://github.com/DODOEX/dodo-route-contract/blob/main/contracts/SmartRoute/DODORouteProxy.sol",
          "description": null,
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2022-12-27T12:16:21.403Z"
        },
        {
          "id": "6TQHEMshKredGvNtH4E93",
          "type": "smart_contract",
          "url": "https://github.com/DODOEX/dodo-limit-order/blob/main/src/DODOLimitOrder.sol",
          "description": null,
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2023-02-21T23:04:07.092Z"
        }
      ],
      "impacts": [
        {
          "id": 34,
          "type": "smart_contract",
          "severity": "low",
          "title": "Contract fails to deliver promised returns, but doesn't lose value"
        },
        {
          "id": 23,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed yield"
        },
        {
          "id": 25,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed yield"
        },
        {
          "id": 27,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of funds"
        },
        {
          "id": 29,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Smart contract unable to operate due to lack of token funds"
        },
        {
          "id": 495,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Block stuffing for profit"
        },
        {
          "id": 31,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)"
        },
        {
          "id": 32,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Theft of gas"
        },
        {
          "id": 33,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Unbounded gas consumption"
        },
        {
          "id": 496,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Any governance voting result manipulation"
        },
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 17,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds"
        },
        {
          "id": 497,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Miner-extractable value (MEV)"
        },
        {
          "id": 22,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Protocol insolvency"
        }
      ],
      "programOverview": "DODO is a decentralized exchange platform powered by the Proactive Market Maker (PMM) algorithm. It features highly capital-efficient liquidity pools that support single-token provision, reduce impermanent loss, and minimize slippage for traders. The trading platform also offers SmartTrade, a decentralized liquidity aggregation service that routes to and compares various liquidity sources to quote the optimal prices between any two tokens. In addition, DODO removed all roadblocks hindering liquidity pool creation for the issuance of new assets - asset ratios, liquidity depths, fee rates, and other parameters can all be freely customized and configured in real-time. Based on this breakthrough, DODO has developed Crowdpooling, a permissionless, equal opportunity liquidity offering mechanic, as well as customizable technical solutions geared towards professional on-chain market makers.\n\nMore information about DODO can be found on their website, [https://dodoex.io/](https://dodoex.io/).   \n\nThis bug bounty program is focused around its smart contracts and is mostly concerned with the prevention of the loss of user funds.",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards for Smart Contract vulnerabilities are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nThe calculation of the final reward amounts will be based on the economic impact of the discovered vulnerabilities, as well as the level of difficulty in discovering these vulnerabilities. As for the economic impact, this is capped at 10% of economic damage, which accounts for direct funds at risk as well as other aspects at the discretion of the DODO team. \n\nTo qualify for a reward, please include as much information about the vulnerability as possible in your report, including:\n\n  - The conditions on which reproducing the bug is contingent\n  - The steps needed to reproduce the bug or, preferably, a proof of concept\n  - The potential implications of the vulnerability being abused\n\n\nPayouts up to __USD 100 000__ are handled by the __DODO__ team directly and are denominated in USD. However, payouts are done in __DODO__.",
      "outOfScopeAndRules": null,
      "assetsBodyV2": "The following smart contracts [DODOMemberSystem](https://github.com/DODOEX/contractV2/tree/main/contracts/DODOMemberSystem/) and [https://github.com/DODOEX/contractV2/tree/main/contracts/external](https://github.com/DODOEX/contractV2/tree/main/contracts/external) are not included in this bug bounty program.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Not Required",
          "PoC Not Required"
        ],
        "productType": [
          "AMM",
          "Bridge",
          "Crosschain Liquidity",
          "DEX",
          "Liquid Staking"
        ],
        "projectType": [
          "Defi",
          "Exchange"
        ],
        "ecosystem": [
          "Arbitrum",
          "Aurora",
          "Avalanche",
          "BSC",
          "Base",
          "Conflux",
          "ETH",
          "Linea",
          "Manta",
          "Mantle",
          "Optimism",
          "Polygon",
          "Scroll"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $100,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $5,000"
          },
          {
            "level": "Low",
            "payout": "Up to USD $1,000"
          }
        ],
        "web_rewards": []
      },
      "websiteUrl": null,
      "description": "DODO is a decentralized exchange platform powered by the Proactive Market Maker (PMM) algorithm. It features highly capital-efficient liquidity pools that support single-token provision, reduce impermanent loss, and minimize slippage for traders. The trading platform also offers SmartTrade, a decentralized liquidity aggregation service that routes to and compares various liquidity sources to quote the optimal prices between any two tokens.",
      "githubUrl": null,
      "feasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)\n",
      "prohibitedActivites": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)\n",
      "responsiblePublicationCategory": "category_3",
      "knownIssues": [],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": null,
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": null,
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": "The following contracts are out of scope and NO bounty will be paid:\n\n- contracts/CollateralVault/\n- contracts/DODODrops\n- contracts/Factory/Registries/DODONFTRegistry.sol\n- contracts/Factory/DODONFT.sol\n- contracts/Factory/DODONFT1155.sol\n- contracts/Factory/NFTTokenFactory.sol\n- contracts/GeneralizedFragment/\n- contracts/NFTPool/\n- contracts/SmartRoute/helper/DODONFTRouteHelper.sol\n- contracts/SmartRoute/proxies/DODODropsProxy.sol\n- contracts/SmartRoute/proxies/DODONFTPoolProxy.sol\n- contracts/SmartRoute/proxies/DODONFTProxy.sol\n- contracts/SmartRoute/DODONFTApprove.sol\n\n\n- Best practice critiques\n  - FeeRouteProxy exclusions: FeeRouteProxy.sol won't left any tokens in normal swap, so we don't abandon using tokens in the proxy through specific swap method\n",
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum, Arbitrum",
      "rewardsToken": "DODO",
      "eligibilityCriteria": [],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [],
      "programDocumentations": [],
      "primacy": "primacy_of_rules",
      "newProgramRewardsEnabled": true,
      "findingsUrl": null,
      "premiumTriaging": false
    },
    "project": {
      "features": [],
      "premiumTriaging": false,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "metaData": {
      "title": "DODO Bug Bounties",
      "description": "Find bugs and vulnerabilities on DODO and get paid up to $100,000.",
      "url": "https://immunefi.com/bug-bounty/dodo/",
      "ogImg": "/api/bounty/og-image/?project=DODO&slug=dodo"
    },
    "layoutProps": {
      "headerMarginBottom": "mb-3 lg:mb-15",
      "footerMarginTop": "mt-0"
    }
  },
  "__N_SSG": true
}
