{
  "pageProps": {
    "isAttackathon": true,
    "academyContent": {
      "slug": "ethereum-protocol-attackathon",
      "programSlug": "ethereum-protocol-attackathon",
      "meta": {
        "title": "Ethereum protocol Attackathon Educational Resources",
        "description": "Here you will find tailored educational resources to make your hunt on the Ethereum protocol Attackathon on Immunefi a success. From understanding Ether and Ethereum accounts, to in-depth explorations of the layers of Ethereum, you’ll get the insights you need to hunt with confidence.",
        "ogImg": "/academy/og-academy-ethereum.jpg"
      },
      "og": {
        "program": "Ethereum Protocol Attackathon",
        "bg": "/academy/og-background-ethereum.jpg"
      },
      "hero": {
        "img": "/academy/hero-bg-ethereum.jpg",
        "title": "Ethereum Protocol Attackathon Academy",
        "text": "Ethereum is a decentralized blockchain that exists whenever there are connected computers running software following the Ethereum protocol and adding to the Ethereum blockchain.",
        "ctaText": "View Attackathon",
        "ctaUrl": "/audit-competition/ethereum-protocol-attackathon/?utm_source=hero_academy"
      },
      "whatIs": {
        "title": "What's an Attackathon?",
        "text": "Attackathons are education-based bug hunting competitions where security researchers compete over a reward pool by submitting impactful bugs in the project's code. Here’s how they work:\n\n**Before the Attackathon**<br/> Immunefi works with the project to host a security-focused education period, providing top tier education and support to security researchers.\n\n**During the Attackathon**<br/> Security researchers experience the optimal hunting conditions, with direct project support, responsiveness, and duplicate rewards.\n\n**After the Attackathon**<br/> Immunefi spotlights the security accomplishments, with a custom leaderboard, Attackathon Findings Report, Bug Fix Reviews, and NFT awards.\n\nUltimately, Attackathons serve to secure projects, develop their security ecosystem, and create new opportunities for security researchers."
      },
      "resources": [
        {
          "id": 100,
          "title": "Ethereum 101",
          "items": [
            {
              "id": 101,
              "title": "Introduction to Ethereum",
              "description": "Learn about the basics of Ethereum, a decentralized platform that enables smart contracts and decentralized applications (dApps) to be built and run without any downtime, fraud, control, or interference.",
              "url": "https://ethereum.org/en/developers/docs/intro-to-ethereum/",
              "type": "General",
              "level": "Beginner"
            },
            {
              "id": 102,
              "title": "Understanding Ether",
              "description": "Explore what Ether (ETH) is, its role in the Ethereum network, and how it powers transactions and smart contracts within the ecosystem.",
              "url": "https://ethereum.org/en/developers/docs/intro-to-ether/",
              "type": "General",
              "level": "Beginner"
            },
            {
              "id": 103,
              "title": "Exploring Ethereum Accounts",
              "description": "Understand the different types of accounts in Ethereum, including externally owned accounts (EOAs) and contract accounts, and how they interact with the blockchain.",
              "url": "https://ethereum.org/en/developers/docs/accounts/",
              "type": "General",
              "level": "Beginner"
            },
            {
              "id": 104,
              "title": "Understanding Transactions",
              "description": "Delve into the mechanics of transactions on the Ethereum network, including how they are created, signed, and executed.",
              "url": "https://ethereum.org/en/developers/docs/transactions/",
              "type": "General",
              "level": "Beginner"
            },
            {
              "id": 105,
              "title": "What Are Ethereum Blocks?",
              "description": "Discover the structure and function of blocks in the Ethereum blockchain, including how they store transaction data and help maintain network security.",
              "url": "https://ethereum.org/en/developers/docs/blocks/",
              "type": "General",
              "level": "Beginner"
            },
            {
              "id": 106,
              "title": "Components of a Node: Nodes and Clients",
              "description": "Learn about the different components that make up an Ethereum node, the role of nodes and clients, and how they contribute to the network's operation.",
              "url": "https://ethereum.org/en/developers/docs/nodes-and-clients/",
              "type": "General",
              "level": "Beginner"
            },
            {
              "id": 107,
              "title": "Introduction to Cryptography and Signatures",
              "description": "Get an overview of the cryptographic techniques used in Ethereum, including digital signatures, which ensure the integrity and authenticity of transactions.",
              "url": "https://medium.com/immunefi/intro-to-cryptography-and-signatures-in-ethereum-2025b6a4a33d",
              "type": "General",
              "level": "Beginner"
            },
            {
              "id": 108,
              "title": "Understanding Merkle-Patricia Trie",
              "description": "Explore the data structure known as the Merkle-Patricia Trie, which is used by Ethereum to store key-value pairs in a secure and efficient manner.",
              "url": "https://ethereum.org/en/developers/docs/data-structures-and-encoding/patricia-merkle-trie/",
              "type": "General",
              "level": "Intermediate"
            },
            {
              "id": 109,
              "title": "What is an Ethereum Improvement Proposal (EIP)?",
              "description": "Learn about Ethereum Improvement Proposals (EIPs), the process by which changes and upgrades to the Ethereum network are proposed, discussed, and implemented.",
              "url": "https://ethereum.org/en/eips/#introduction-to-ethereum-improvement-proposals",
              "type": "General",
              "level": "Beginner"
            },
            {
              "id": 110,
              "title": "Proof-of-Stake Consensus Mechanism",
              "description": "Understand the Proof-of-Stake (PoS) consensus mechanism, how it differs from Proof-of-Work (PoW), and its benefits for the Ethereum network.",
              "url": "https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/",
              "type": "Consensus Layer",
              "level": "Beginner"
            },
            {
              "id": 111,
              "title": "How Block Proposals Work in Proof-of-Stake",
              "description": "Discover how blocks are proposed and validated in a Proof-of-Stake system, including the roles of validators and attestations.",
              "url": "https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/block-proposal/",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 112,
              "title": "An Introduction to the Beacon Chain",
              "description": "Get to know the Beacon Chain, its role in Ethereum 2.0, and how it helps manage and coordinate the Proof-of-Stake network.",
              "url": "https://kb.beaconcha.in/v2beta/introduction",
              "type": "Consensus Layer",
              "level": "Beginner"
            },
            {
              "id": 113,
              "title": "What is the Ethereum Virtual Machine (EVM)?",
              "description": "Explore the Ethereum Virtual Machine (EVM), the runtime environment for smart contracts on Ethereum, and its importance in executing decentralized applications.",
              "url": "https://ethereum.org/en/developers/docs/evm/",
              "type": "Execution Layer",
              "level": "Beginner"
            },
            {
              "id": 114,
              "title": "Ethereum Node Architecture Explained",
              "description": "Learn about the architecture of an Ethereum node, including its components and how they work together to maintain the blockchain.",
              "url": "https://geth.ethereum.org/docs/fundamentals/node-architecture",
              "type": "Consensus + Execution Layer",
              "level": "Beginner"
            },
            {
              "id": 115,
              "title": "Engine API: A Visual Guide",
              "description": "A visual guide to the Engine API, which helps developers interact with and build on the Ethereum network more efficiently.",
              "url": "https://hackmd.io/@danielrachi/engine_api#Engine-API-A-Visual-Guide",
              "type": "Consensus + Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 116,
              "title": "Understanding Ethereum's Networking Layer",
              "description": "Delve into the networking layer of Ethereum, which ensures secure and reliable communication between nodes in the decentralized network.",
              "url": "https://ethereum.org/en/developers/docs/networking-layer/",
              "type": "Consensus + Execution Layer",
              "level": "Intermediate"
            }
          ]
        },
        {
          "id": 200,
          "title": "Cryptography",
          "items": [
            {
              "id": 201,
              "title": "Foundational Cryptography in Ethereum",
              "description": "An in-depth look at the cryptographic principles and methods that underpin the security and functionality of the Ethereum blockchain.",
              "url": "https://github.com/ethereumbook/ethereumbook/blob/develop/04keys-addresses.asciidoc",
              "type": "General",
              "level": "Advanced"
            }
          ]
        },
        {
          "id": 300,
          "title": "Consensus Layer",
          "items": [
            {
              "id": 301,
              "title": "In-Depth Look into the Beacon Chain",
              "description": "A comprehensive examination of the Beacon Chain, detailing its structure, functionality, and significance in the Ethereum 2.0 upgrade.",
              "url": "https://0xfoobar.substack.com/p/ethereum-proof-of-stake",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 302,
              "title": "Overview of the Gasper Finality Mechanism",
              "description": "Understand the Gasper finality mechanism used in Ethereum's Proof-of-Stake consensus, ensuring blocks are finalized and part of the canonical chain.",
              "url": "https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/gasper/",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 303,
              "title": "Understanding Weak Subjectivity in Proof-of-Stake",
              "description": "Learn about weak subjectivity in the context of Proof-of-Stake, including its implications for network security and validator responsibilities.",
              "url": "https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/weak-subjectivity/",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 304,
              "title": "What Are Attestations in Ethereum?",
              "description": "Discover the concept of attestations in Ethereum, how they are used in the consensus process, and their importance in maintaining network integrity.",
              "url": "https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/attestations/",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 305,
              "title": "Rewards and Penalties in Proof-of-Stake",
              "description": "Explore the system of rewards and penalties for validators in Ethereum's Proof-of-Stake mechanism, incentivizing honest behavior and network participation.",
              "url": "https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/rewards-and-penalties/",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 306,
              "title": "Proof-of-Stake: Attack and Defense Mechanisms",
              "description": "Learn about the various attack vectors in a Proof-of-Stake system and the defensive measures in place to protect the network.",
              "url": "https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/attack-and-defense/",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 307,
              "title": "Ethereum Consensus Specification",
              "description": "An overview of the Ethereum consensus specification, detailing the rules and protocols that ensure the blockchain's consistency and security.",
              "url": "https://github.com/ethereum/consensus-specs",
              "type": "Consensus Layer",
              "level": "Advanced"
            },
            {
              "id": 308,
              "title": "In-Depth Look at Casper Finality Mechanism",
              "description": "A deep dive into the Casper finality mechanism, which helps achieve consensus in Ethereum's Proof-of-Stake network.",
              "url": "https://arxiv.org/pdf/1710.09437",
              "type": "Consensus Layer",
              "level": "Advanced"
            }
          ]
        },
        {
          "id": 400,
          "title": "Execution Layer",
          "items": [
            {
              "id": 401,
              "title": "EVM Deep Dive Part 1",
              "description": "The first part of an in-depth exploration of the Ethereum Virtual Machine (EVM), covering its architecture and functionality.",
              "url": "https://noxx.substack.com/p/evm-deep-dives-the-path-to-shadowy?s=r&ref=decipherclub.com",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 402,
              "title": "EVM Deep Dive Part 2",
              "description": "The second part of the exploration of the EVM, focusing on advanced topics and deeper technical details.",
              "url": "https://github.com/ethereumbook/ethereumbook/blob/develop/13evm.asciidoc",
              "type": "Execution Layer",
              "level": "Advanced"
            },
            {
              "id": 403,
              "title": "Understanding Gas and Fees",
              "description": "Learn about gas and fees in Ethereum, how they work, and their role in incentivizing miners and validators to process transactions.",
              "url": "https://ethereum.org/en/developers/docs/gas/",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 404,
              "title": "Exploring EVM Opcodes",
              "description": "An in-depth look at EVM opcodes, the low-level instructions executed by the Ethereum Virtual Machine.",
              "url": "https://ethereum.org/en/developers/docs/evm/opcodes/",
              "type": "Execution Layer",
              "level": "Advanced"
            }
          ]
        },
        {
          "id": 500,
          "title": "Dencun",
          "items": [
            {
              "id": 501,
              "title": "Introduction to Optimistic Rollups",
              "description": "Understand optimistic rollups, a layer 2 scaling solution for Ethereum that aims to increase transaction throughput and reduce costs.",
              "url": "https://ethereum.org/en/developers/docs/scaling/optimistic-rollups/",
              "type": "Data Availability Layer",
              "level": "Intermediate"
            },
            {
              "id": 502,
              "title": "Dencun Upgrade Part 1",
              "description": "Start with an overview of the Dencun upgrade, outlining the changes and improvements in the upcoming Cancun-Deneb hard fork on Ethereum. This includes a detailed exploration of two Cancun-specific execution layer upgrades: EIP-6780 and EIP-5656.",
              "url": "https://consensys.io/blog/ethereum-dencun-upgrade-explained-part-1",
              "type": "Consensus + Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 503,
              "title": "Dencun Upgrade Part 2",
              "description": "Examine key upgrades focused on staking and validators, specifically EIP-7044 and EIP-7045.",
              "url": "https://consensys.io/blog/ethereum-evolved-dencun-upgrade-part-2-eip-7044-eip-7045",
              "type": "Consensus + Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 504,
              "title": "Dencun Upgrade Part 3",
              "description": "Explore EIP-4788, an upgrade aimed at reducing trust assumptions in staking pools and restaking arrangements.",
              "url": "https://consensys.io/blog/ethereum-evolved-dencun-upgrade-part-3-eip-4788",
              "type": "Consensus + Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 505,
              "title": "Dencun Upgrade Part 4",
              "description": "Understand EIP-7514, which will modify the validator churn limit, and EIP-1153, which introduces transient storage opcodes to the EVM execution layer.",
              "url": "https://consensys.io/blog/ethereum-evolved-dencun-upgrade-part-4-eip-7514-and-eip-1153",
              "type": "Consensus + Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 506,
              "title": "Dencun Upgrade Part 5",
              "description": "Discover EIP-4844, also known as “proto-danksharding,” which will significantly reduce the cost of posting L2 rollup data to the Ethereum mainnet using “blobs.”",
              "url": "https://consensys.io/blog/ethereum-evolved-dencun-upgrade-part-5-eip-4844",
              "type": "Consensus + Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 507,
              "title": "Introduction to Dank Sharding",
              "description": "An introduction to Dank Sharding, a proposed scaling solution for Ethereum that aims to increase the network's capacity and efficiency.",
              "url": "https://ethereum.org/en/roadmap/danksharding/",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 508,
              "title": "Dank Sharding FAQ",
              "description": "Frequently asked questions about Dank Sharding, providing answers and clarifications about this scaling solution.",
              "url": "https://notes.ethereum.org/@vbuterin/proto_danksharding_faq",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 509,
              "title": "Understanding Verkle Trees",
              "description": "Explore Verkle Trees, a new cryptographic data structure proposed for Ethereum to improve scalability and efficiency.",
              "url": "https://verkle.info/",
              "type": "General",
              "level": "Advanced"
            }
          ]
        },
        {
          "id": 600,
          "title": "Solidity Compiler",
          "items": [
            {
              "id": 601,
              "title": "Solidity 101: Introduction to Smart Contracts",
              "description": "A beginner's guide to Solidity, Ethereum's programming language for writing smart contracts, including basic concepts and examples.",
              "url": "https://docs.soliditylang.org/en/latest/introduction-to-smart-contracts.html",
              "type": "Execution Layer",
              "level": "Beginner"
            },
            {
              "id": 602,
              "title": "Analyzing Compilation Output in Solidity",
              "description": "Learn how to analyze the compilation output of Solidity contracts, understanding the generated bytecode and its implications.",
              "url": "https://docs.soliditylang.org/en/latest/analysing-compilation-output.html",
              "type": "Execution Layer",
              "level": "Beginner"
            },
            {
              "id": 603,
              "title": "Layout of State Variables in Storage",
              "description": "Understand how state variables are laid out in Ethereum's storage, affecting gas costs and contract interactions.",
              "url": "https://docs.soliditylang.org/en/latest/internals/layout_in_storage.html",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 604,
              "title": "Layout of State Variables in Memory",
              "description": "Discover how state variables are organized in memory during contract execution, impacting performance and efficiency.",
              "url": "https://docs.soliditylang.org/en/latest/internals/layout_in_memory.html",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 605,
              "title": "Layout of State Variables in Calldata",
              "description": "Explore how state variables are managed in calldata, a data location used for function arguments in Solidity contracts.",
              "url": "https://docs.soliditylang.org/en/latest/internals/layout_in_calldata.html",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 606,
              "title": "Understanding the Solidity Optimizer",
              "description": "Learn about the Solidity optimizer, a tool that improves the efficiency of compiled smart contract code, reducing gas costs.",
              "url": "https://docs.soliditylang.org/en/latest/internals/optimizer.html",
              "type": "Execution Layer",
              "level": "Advanced"
            },
            {
              "id": 607,
              "title": "SMTChecker and Formal Verification",
              "description": "An overview of SMTChecker and formal verification tools in Solidity, used to ensure the correctness and security of smart contracts.",
              "url": "https://docs.soliditylang.org/en/latest/smtchecker.html",
              "type": "Execution Layer",
              "level": "Advanced"
            }
          ]
        },
        {
          "id": 700,
          "title": "Vyper Compiler",
          "items": [
            {
              "id": 701,
              "title": "Vyper Documentation",
              "description": "Explore the official Vyper documentation, offering in-depth guides, syntax explanations, and best practices for writing secure and efficient Ethereum smart contracts using the Vyper language.",
              "url": "https://docs.vyperlang.org/en/latest/index.html",
              "type": "Execution Layer",
              "level": "Beginner"
            },
            {
              "id": 702,
              "title": "How Vyper Compiles into Bytecode",
              "description": "Learn about the process by which Vyper source code is transformed into Ethereum bytecode, enabling the deployment of smart contracts to the blockchain and providing insights into the bytecode structure.",
              "url": "https://hackmd.io/@pcaversaccio/how-vyper-compiles-into-bytecode",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 703,
              "title": "A Guide to Vyper Jump Tables",
              "description": "Delve into jump tables in Vyper, an advanced technique used to optimize contract execution by improving the efficiency of conditional branching, leading to reduced gas costs and streamlined logic.",
              "url": "https://hackmd.io/-P5_J7AUQoGg0Cdt8DQPmg",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 704,
              "title": "Past Compiler Vulnerabilities",
              "description": "Review notable vulnerabilities discovered in the Vyper compiler over time, and gain insights into how these issues have shaped the current security practices in Vyper development.",
              "url": "https://github.com/vyperlang/vyper/security/advisories",
              "type": "Execution Layer",
              "level": "Advanced"
            }
          ]
        },
        {
          "id": 800,
          "title": "Running a Proof of Concept (PoC)",
          "items": [
            {
              "id": 801,
              "title": "Attacknet: Chaos Testing Blockchain Nodes",
              "description": "An overview of Attacknet, a tool and testing methodology for subjecting blockchain devnets to simulated network and side channel attacks.",
              "url": "https://blog.trailofbits.com/2024/03/18/releasing-the-attacknet-a-new-tool-for-finding-bugs-in-blockchain-nodes-using-chaos-testing/",
              "type": "Consensus + Execution Layer",
              "level": "Beginner"
            },
            {
              "id": 802,
              "title": "How to PoC execution layer bugs",
              "description": "Documentation on the execution-spec-tests framework used to help uncover issues in the execution layer.",
              "url": "https://ethereum.github.io/execution-spec-tests/v3.0.0/",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 803,
              "title": "How to PoC consensus bugs",
              "description": "Documentation on using PySpec to run tests for the Ethereum consensus layer.",
              "url": "https://github.com/ethereum/consensus-specs/tree/dev/tests/core/pyspec",
              "type": "Consensus Layer",
              "level": "Advanced"
            },
            {
              "id": 804,
              "title": "Setting Up and Installing the Solidity Compiler",
              "description": "A step-by-step guide on how to set up and install the Solidity compiler, including building from source.",
              "url": "https://docs.soliditylang.org/en/latest/installing-solidity.html#building-from-source",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 805,
              "title": "How to run Solidity Compiler Tests",
              "description": "Instructions on how to run PoC tests for the Solidity compiler, helping to identify and fix potential issues.",
              "url": "https://docs.soliditylang.org/en/latest/contributing.html#running-the-compiler-tests",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 806,
              "title": "How to run Vyper Compiler Tests",
              "description": "Instructions on how to run PoC tests for the Vyper compiler, helping to identify and fix potential issues.",
              "url": "https://github.com/vyperlang/vyper?tab=readme-ov-file#testing-using-pytest",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 807,
              "title": "How to run Client Tests",
              "description": "A compilation of instructions on how to run PoC tests for individual client software.",
              "url": "https://immunefi.slite.com/app/docs/JFep5UJMfd9fhi",
              "type": "Consensus + Execution Layer",
              "level": "Advanced"
            }
          ]
        },
        {
          "id": 900,
          "title": "Audits & Known Issues",
          "items": [
            {
              "id": 901,
              "title": "Consensus Layer Public Disclosures Part 1",
              "description": "Public disclosures related to the consensus layer of Ethereum, detailing identified issues and their resolutions.",
              "url": "https://github.com/ethereum/public-disclosures/blob/master/disclosures/CL-2021-12-01.md",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 902,
              "title": "Consensus Layer Public Disclosures Part 2",
              "description": "The second part of public disclosures for the consensus layer, providing updates on new findings and fixes.",
              "url": "https://github.com/ethereum/public-disclosures/blob/master/disclosures/CL-2023-05-03.md",
              "type": "Consensus Layer",
              "level": "Intermediate"
            },
            {
              "id": 903,
              "title": "Execution Layer Public Disclosures Part 1",
              "description": "Public disclosures for the execution layer of Ethereum, covering known vulnerabilities and their mitigations.",
              "url": "https://github.com/ethereum/public-disclosures/blob/master/disclosures/EL-2021-12-01.md",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 904,
              "title": "Execution Layer Public Disclosures Part 2",
              "description": "The second part of public disclosures for the execution layer, discussing additional vulnerabilities and fixes.",
              "url": "https://github.com/ethereum/public-disclosures/blob/master/disclosures/EL-2023-05-03.md",
              "type": "Execution Layer",
              "level": "Intermediate"
            },
            {
              "id": 905,
              "title": "Further Known Issues",
              "description": "A compiled list of known issues from client and language teams, providing insights into current limitations and bugs.",
              "url": "https://immunefi.slite.com/app/docs/npGhR5rBwFfnTi",
              "type": "Execution Layer",
              "level": "Intermediate"
            }
          ]
        },
        {
          "id": 1000,
          "title": "Technical FAQ",
          "items": [
            {
              "id": 1001,
              "title": "Client Diversity",
              "description": "An analysis of client diversity in the Ethereum network, examining the distribution of different clients and their impact on the network's security and decentralization.",
              "url": "https://clientdiversity.org/",
              "type": "General",
              "level": "Beginner"
            },
            {
              "id": 1002,
              "title": "Ethereum Terminology Guide",
              "description": "A comprehensive guide to the terminology used in the Ethereum ecosystem, helping newcomers understand key concepts and jargon.",
              "url": "https://ethereum.org/en/developers/docs/intro-to-ethereum/#terminology",
              "type": "General",
              "level": "Beginner"
            },
            {
              "id": 1003,
              "title": "The Ethereum White Paper",
              "description": "The Ethereum white paper which outlines the vision, principles, and technical foundation of Ethereum.",
              "url": "https://ethereum.org/en/whitepaper/",
              "type": "General",
              "level": "Advanced"
            },
            {
              "id": 1004,
              "title": "The Ethereum Yellow Paper",
              "description": "A detailed technical specification of Ethereum, known as the Yellow Paper, which provides an in-depth look at the protocol's mechanics and architecture.",
              "url": "https://ethereum.github.io/yellowpaper/paper.pdf",
              "type": "General",
              "level": "Advanced"
            },
            {
              "id": 1005,
              "title": "Further Resources",
              "description": "All further resources will be available via the following Slite page.",
              "url": "https://immunefi.slite.page/p/fJaOCFZcD84Asc/Ethereum-protocol-Attackathon-Resources",
              "type": "",
              "level": ""
            }
          ]
        }
      ]
    },
    "ethereumAttackathonSponsors": {
      "tier1SponsorsTitle": "Unicorn Sponsors",
      "tier1SponsorsLogos": [
        {
          "title": "Bybit",
          "src": "https://images.ctfassets.net/t3wqy70tc3bv/4bQ3hooQaX5KvDq9OGYx1g/c433d0d5b17cc49357547303240cea80/bybit.svg"
        }
      ],
      "tier2SponsorsTitle": "Panda Sponsors",
      "tier2SponsorsLogos": [
        {
          "title": "Wormhole",
          "src": "https://images.ctfassets.net/t3wqy70tc3bv/4LRjq9ONKy3fs17czzdJkm/c361cab872e3d498f44a5ce47d1e7f24/Wordmark_white_.svg"
        },
        {
          "title": "Arbitrum",
          "src": "https://images.ctfassets.net/t3wqy70tc3bv/6E7iRBC44LYJOPLGtKQ0WN/ab698bd40771085e696bc722c59fb2b3/Arbitrum-logo.svg"
        },
        {
          "title": "The Graph",
          "src": "https://images.ctfassets.net/t3wqy70tc3bv/3zMrQwIgYX3hYAwW5a7smD/3b66b97a4a65779d9b4618650907bd23/The_Graph_-_Logo_-_Light.svg"
        }
      ],
      "tier3SponsorsTitle": "Blobfish Sponsors",
      "tier3SponsorsLogos": [
        {
          "title": "GMX Logo",
          "src": "https://images.ctfassets.net/t3wqy70tc3bv/2Tm6cHUrfOyxs1kR3VpxMA/b8f73503a1a0060a055b07154acb492f/GMX__1_.svg"
        },
        {
          "title": "Base",
          "src": "https://images.ctfassets.net/t3wqy70tc3bv/7yeZh4lJqrT9RjvFzcT6qh/c53f5b820b18290b561a06ac1e63b4d8/Base_Wordmark_White.svg"
        }
      ]
    },
    "project": {
      "features": [
        "Attackathon",
        "Managed Triage: Time Saver",
        "Vault"
      ],
      "premiumTriaging": true,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "bounty": {
      "contentfulId": "2v6xPiTqjqBo2MR2S3dye3",
      "id": "ethereum-protocol-attackathon",
      "slug": "ethereum-protocol-attackathon",
      "project": "Attackathon | Ethereum Protocol",
      "maxBounty": 1500000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6itRuATvu87slB9sHlEDxS/680a257b5c3950fea7a3e835ca522fb4/eth-diamond-purple.7929ed26__1_.png",
      "launchDate": "2024-11-25T14:00:00.000Z",
      "endDate": "2025-01-25T14:00:00.000Z",
      "updatedDate": "2025-05-22T15:57:48.375Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "blockchain_dlt",
          "level": "critical",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "high",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "medium",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "blockchain_dlt",
          "level": "low",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "Portion of the Reward Pool",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "222985PqOCS8Gnts6UPije",
          "type": "blockchain_dlt",
          "url": "https://github.com/ethereum/consensus-specs",
          "description": "Specification - Consensus Specification",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "1H0KtzBZ6r6neNdl08UTcX",
          "type": "blockchain_dlt",
          "url": "https://github.com/ethereum/execution-specs",
          "description": "Specification - Execution Specification",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "7s5Lv6frbz7ziSnqDyNvYg",
          "type": "blockchain_dlt",
          "url": "https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/deposit-contract.md",
          "description": "Specification - Deposit Contract Specification",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "7KUEbgJx3RhMK6RIsDh3IF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x00000000219ab540356cBB839Cbe05303d7705Fa#code",
          "description": "DepositContract.sol - [110]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "31ThCJ2OekWDmGdvw8ILu4",
          "type": "blockchain_dlt",
          "url": "https://github.com/prysmaticlabs/prysm",
          "description": "Prysm - [400k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "4Mz83vIDD7AhGb65TuvTDQ",
          "type": "blockchain_dlt",
          "url": "https://github.com/ethereum/go-ethereum",
          "description": "Go Ethereum - [200k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "2EgdxWQYKwHoyvoiyxpUhI",
          "type": "blockchain_dlt",
          "url": "https://github.com/sigp/lighthouse",
          "description": "Lighthouse - [200k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "45IxDPEk4E1DkcanqKm3ba",
          "type": "blockchain_dlt",
          "url": "https://github.com/NethermindEth/nethermind",
          "description": "Nethermind - [250k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "1lGcRezwotn9RNyRMBRYVZ",
          "type": "blockchain_dlt",
          "url": "https://github.com/Consensys/teku",
          "description": "Teku - [350k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "22IF2w58Lup0QFpVjiykzj",
          "type": "blockchain_dlt",
          "url": "https://github.com/hyperledger/besu",
          "description": "Besu - [100k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "264yATywWGOKplWZrpBRjp",
          "type": "blockchain_dlt",
          "url": "https://github.com/status-im/nimbus-eth2",
          "description": "Nimbus Eth2 - [100k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "2B3YBOlp0W89OHd75y12bP",
          "type": "blockchain_dlt",
          "url": "https://github.com/ledgerwatch/erigon",
          "description": "Erigon - [350k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "2t6BghXiSnXYi2wSAJN9l7",
          "type": "blockchain_dlt",
          "url": "https://github.com/paradigmxyz/reth",
          "description": "Reth - [150k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "J5ENB1Y4K5Pj4WrrvI2j2",
          "type": "blockchain_dlt",
          "url": "https://github.com/chainsafe/lodestar",
          "description": "Lodestar - [100k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "4tSde70EV2ABSBX0eQsAXV",
          "type": "smart_contract",
          "url": "https://github.com/ethereum/solidity",
          "description": "Solidity Compiler - [124k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "2DQBywvEv3ikGV831m8tNj",
          "type": "smart_contract",
          "url": "https://github.com/vyperlang/vyper",
          "description": "Vyper - [19k]",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "7rT6szeYlH5ZrzA6EwlPRx",
          "type": "smart_contract",
          "url": "https://immunefi.com",
          "description": "Primacy of Impact [Critical]",
          "isPrimacyOfImpact": true,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        },
        {
          "id": "6oGiUhKiUT4EyBdrmaTPCY",
          "type": "blockchain_dlt",
          "url": "https://immunefi.com",
          "description": "Primacy of Impact [Critical, High]",
          "isPrimacyOfImpact": true,
          "isSafeHarbor": null,
          "addedAt": "2024-11-25T14:00:00.000Z",
          "fund": null
        }
      ],
      "impacts": [
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 5226,
          "type": "blockchain_dlt",
          "severity": "critical",
          "title": "Unintended permanent chain split affecting greater than or equal to 25% of the network, requiring hard fork (network partition requiring hard fork)"
        },
        {
          "id": 17,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds"
        },
        {
          "id": 5227,
          "type": "blockchain_dlt",
          "severity": "critical",
          "title": "Direct loss of funds"
        },
        {
          "id": 5228,
          "type": "blockchain_dlt",
          "severity": "critical",
          "title": "Permanent freezing of funds (fix requires hardfork)"
        },
        {
          "id": 5229,
          "type": "blockchain_dlt",
          "severity": "critical",
          "title": "Network not being able to confirm new transactions (total network shutdown)"
        },
        {
          "id": 5230,
          "type": "blockchain_dlt",
          "severity": "high",
          "title": "Shutdown of greater than or equal to 33% of network processing nodes without brute force actions, but does not shut down the network"
        },
        {
          "id": 5231,
          "type": "blockchain_dlt",
          "severity": "high",
          "title": "Temporary freezing of network transactions by delaying one block by 500% or more of the average block time of the preceding 24 hours beyond standard difficulty adjustments affecting greater than or equal to 25% of the network"
        },
        {
          "id": 5233,
          "type": "blockchain_dlt",
          "severity": "medium",
          "title": "Temporary freezing of network transactions by delaying one block by 500% or more of the average block time of the preceding 24 hours beyond standard difficulty adjustments affecting less than 25% of the network"
        },
        {
          "id": 5234,
          "type": "blockchain_dlt",
          "severity": "medium",
          "title": "bug in the respective layer 0/1/2 network code that results in unintended smart contract behavior with no concrete funds at direct risk"
        },
        {
          "id": 5235,
          "type": "blockchain_dlt",
          "severity": "medium",
          "title": "Causing greater than or equal to 25% of network processing nodes to process transactions from the mempool beyond set parameters (e.g. prevents processing transactions from the mempool)"
        },
        {
          "id": 5236,
          "type": "blockchain_dlt",
          "severity": "medium",
          "title": "Increasing greater than or equal to 25% of network processing node resource consumption by at least 30% without brute force actions, compared to the preceding 24 hours"
        },
        {
          "id": 5237,
          "type": "blockchain_dlt",
          "severity": "medium",
          "title": "Shutdown of greater than or equal to 10% or equal to but less than 33% of network processing nodes without brute force actions, but does not shut down the network"
        },
        {
          "id": 5238,
          "type": "blockchain_dlt",
          "severity": "medium",
          "title": "Unintended chain split affecting greater than or equal to 25% of the network (Network partition)"
        },
        {
          "id": 5239,
          "type": "blockchain_dlt",
          "severity": "low",
          "title": "Causing less than 25% of network processing nodes to process transactions from the mempool beyond set parameters (e.g. prevents processing transactions from the mempool)"
        },
        {
          "id": 5240,
          "type": "blockchain_dlt",
          "severity": "low",
          "title": "Unintended chain split affecting less than 25% of the network (Network partition)"
        },
        {
          "id": 5241,
          "type": "blockchain_dlt",
          "severity": "low",
          "title": "Increasing less than 25% of network processing node resource consumption by at least 30% without brute force actions, compared to the preceding 24 hours"
        },
        {
          "id": 5242,
          "type": "blockchain_dlt",
          "severity": "low",
          "title": "Modification of transaction fees outside of design parameters"
        },
        {
          "id": 5243,
          "type": "blockchain_dlt",
          "severity": "low",
          "title": "Shutdown of less than 10% of network processing nodes without brute force actions, but does not shut down the network"
        },
        {
          "id": 5244,
          "type": "blockchain_dlt",
          "severity": "low",
          "title": "(Specifications) A bug in specifications with no direct impact on client implementations"
        },
        {
          "id": 5245,
          "type": "smart_contract",
          "severity": "critical",
          "title": "(Compiler) Elimination of security checks"
        },
        {
          "id": 5246,
          "type": "smart_contract",
          "severity": "high",
          "title": "(Compiler) Incorrect bytecode generation leading to incorrect behavior"
        },
        {
          "id": 5247,
          "type": "smart_contract",
          "severity": "medium",
          "title": "(Compiler) Memory-Related errors"
        },
        {
          "id": 5248,
          "type": "smart_contract",
          "severity": "medium",
          "title": "(Compiler) Encoding errors"
        },
        {
          "id": 5249,
          "type": "smart_contract",
          "severity": "low",
          "title": "(Compiler) Semantic analysis errors"
        },
        {
          "id": 5250,
          "type": "smart_contract",
          "severity": "low",
          "title": "(Compiler) Exception handling errors"
        },
        {
          "id": 5251,
          "type": "smart_contract",
          "severity": "low",
          "title": "(Compiler) Syntactic analysis errors"
        },
        {
          "id": 5252,
          "type": "smart_contract",
          "severity": "low",
          "title": "(Compiler) Optimization errors"
        },
        {
          "id": 5253,
          "type": "smart_contract",
          "severity": "low",
          "title": "(Compiler) Unexpected behavior"
        }
      ],
      "programOverview": "Ethereum is a decentralized, open-source blockchain protocol that supports the development and execution of smart contracts and decentralized applications (dApps). It enables a trustless, peer-to-peer network where participants can create, exchange, and secure digital assets without intermediaries.\n\nThe protocol's core is its Proof of Stake (PoS) consensus mechanism, which ensures the security and validation of transactions through a network of validators. Validators are responsible for proposing and validating blocks of transactions, while the system rewards them for their participation and secures the network from malicious actors.\n\nFor more information about Ethereum, please visit [https://ethereum.org](https://ethereum.org).\n\nThe Attackathon program spans end-to-end: from soundness of protocols (such as the blockchain consensus model, the wire and p2p protocols, proof of stake, etc.) and protocol/implementation compliance to network security and consensus integrity. Classical client security as well as security of cryptographic primitives are also part of the program.\n\nFor more details about the reward system, please refer to the \"Rewards by Threat Level\" section further below.\n\n- **For PoCs, test against the latest release**\n- **Code will not be frozen for this Attackathon, as assets are on mainnet**\n- **Make sure to check the list of [publicly known issues](https://immunefi.slite.com/app/docs/npGhR5rBwFfnTi) before submitting a report**",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "The following reward terms are a summary, for the full details read our [Ethereum Attackathon Reward Terms](https://immunefisupport.zendesk.com/hc/en-us/articles/30287460669841-Ethereum-Protocol-Attackathon-Reward-Terms).\n\nThe reward pool size varies based on the severity of bugs found:\n- If one or more Low severity bugs are found the reward pool will be **$250,000 USD**\n- If one or more Medium severity bugs are found the reward pool will be **$500,000 USD**\n- If one or more High severity bugs are found the reward pool will be **$900,000 USD**\n- If one or more Critical severity bugs are found the reward pool will be **$1,500,000 USD**\n\nPrivate known issues are considered valid.\n\n**Duplicates are not valid for this Attackathon.**\n\nPrivate known issues will unlock higher reward pools as though they were one severity level lower. For example, a Critical severity bug which was a private known issue would unlock the  reward pool conditional on a High severity bug being found.\n\nThe severity level of private known issues remains unchanged and SRs earn their portion of the reward pool and position on the leaderboard according to this unchanged severity level.\n\nPublic known issues are invalid as normal.\n\nRewards are distributed according to the impact of the vulnerability based on the Immunefi [Vulnerability Severity Classification System V2.3](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-3/).\n\n__Reward Payment Terms__\n\nPayouts are handled by the Immunefi team directly and are denominated in USD. However, payments are done in ETH\n\nRewards will be distributed all at once based on Immunefi’s distribution formula after the event has concluded and the final bug reports have been resolved.\n\n__Insight Rewards Payment Terms__\n\nInsight Rewards: Portion of the Rewards Pool\n\n- The \"Insight\" severity was introduced on Audit Competition & Attackathon programs to recognize contributions that extend beyond identifying immediate vulnerabilities. Currently, it's not an option to select the Insight severity when submitting a report. However, our team or program will designate it accordingly if applicable. \"Insights\" underscores our commitment to valuing all types of contributions that contribute to a more secure environment and will always be rewarded. [View more information about Insights](https://immunefisupport.zendesk.com/hc/en-us/articles/13333032674961-Severity-Classification-System?utm_source=immunefi).",
      "outOfScopeAndRules": "To be determined.",
      "assetsBodyV2": "__KYC Requirement__\n\nImmunefi will be requesting KYC information in order to pay for successful bug submissions to whitehats who earn $500 USD or more. The following information will be required:\n- Full name \n- Date of birth\n- Proof of address (either a redacted bank statement with address or a recent utility bill)\n- Copy of Passport or other Government issued ID\n\n__Eligibility Criteria__ \n\nSecurity researchers who wish to participate must adhere to the rules of engagement set forth in this program and cannot be:\n- On OFACs SDN list \n- From a restricted country or territory: North Korea, Iran, Cuba, Syria, certain regions of Ukraine (Crimea, Donetsk and Luhansk), West Bank and Gaza regions of Israel, Venezuela, Afghanistan\n- Official contributor, both past or present\n- Employees and/or individuals closely associated with the project \n- Security auditors that directly or indirectly participated in the audit review, or who work for the company which did the audit review\n- Employees and contractors of the Ethereum Foundation may participate in the program only in the accrual of points and will not receive monetary rewards. Client teams may participate in finding vulnerabilities in other client team’s projects, however employees and contractors of individual client teams who self report vulnerabilities will only result in accrual of points and will not receive monetary rewards\n\n__Asset Accuracy Assurance__\n\nBugs found on assets incorrectly listed in-scope will be considered valid and be rewarded.\n\n__Private Known Issues Reward Policy__\n\nPrivate known issues, meaning known issues that were not publicly disclosed or disclosed to Immunefi, are valid for a reward at one severity lower than what they’re confirmed as. However, bug reports that are private known issues do not unlock reward pool tiers. For example, a High bug that ended up being a private known issue, would be paid as a Medium and would not qualify for unlocking the $500k tier of the reward pool for this Attackathon.\n\n__Primacy of Impact vs Primacy of Rules__\n\nEthereum Foundation adheres to the Primacy of Impact for the following impacts:\n- Blockchain/DLT - Critical\n- Blockchain/DLT - High\n- Smart Contract - Critical\n\nPrimacy of Impact means that the impact is prioritized rather than a specific asset. This encourages security researchers to report on all bugs with an in-scope impact, even if the affected assets are not in scope. For more information, please see [Best Practices: Primacy of Impact](https://immunefisupport.zendesk.com/hc/en-us/articles/12340245635089-Best-Practices-Primacy-of-Impact).\n\nWhen submitting a report on Immunefi’s dashboard, the security researcher should select the Primacy of Impact asset placeholder. If the team behind this project has multiple programs, those other programs are not covered under Primacy of Impact for this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nIf the project has any testnet and/or mock files, those will not be covered under Primacy of Impact.\n\nAll other impacts are considered under the Primacy of Rules, which means that they are bound by the terms and conditions set within this program.\n\n__Responsible Publication__\n\nAfter the Attackathon concludes, whitehats may only publish more info on the fixed and paid bug reports that appear on the [Immunefi Audit Competitions Gitbook](https://reports.immunefi.com). Reports closed as invalid are also okay to publish after this time. This rule is to prevent premature publication of any bugs that will take considerable time to fix. \n\nImmunefi will also publish a leaderboard of the participants and their earnings.\n\n__Feasibility Limitations__\n\nThe project may receive reports that are valid (the bug and attack vector are real) and that cite assets and impacts in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of [feasibility limitation standards](https://immunefisupport.zendesk.com/hc/en-us/articles/16913132495377-Feasibility-Limitation-Standards) which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n\n__Immunefi Standard Badge__\n\nBy adhering to Immunefi’s best practice recommendations, Ethereum has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/9522048467857-Immunefi-Standard-Badge).",
      "impactsBody": "Each asset in scope listed above points to the latest changes which is the source of truth of what’s in scope.\n\nIf a bug in the specifications results in an impact on client implementations, the relevant impact should be selected from the Blockchain/DLT impacts list. If an impact of the specification bug cannot be identified, you are encouraged to submit it under the Low severity “A bug in specifications with no direct impact on client implementations”, at which point it will be evaluated and may have its severity increased at the discretion of the Ethereum Foundation.\n\nFor compiler impacts, only those issues which affect runtime logic will be considered as in scope. If a bug is the result of an anti-pattern of the language, enabling experimental features, or use of inline assembly, it may be downgraded or considered out of scope. If there are no affected applications, a vulnerability may be downgraded due to feasibility limitations of exploitability. Compiler bugs should be tested against the latest release version. Bugs which are not known issues which impact previous versions may be considered if an on-chain impact can be demonstrated.\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC, demonstrating the bug's impact, is required for this program and has to comply with the [Immunefi PoC Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules).\n\n__Whitehat Educational Resources & Technical Info Architecture documents:__\n\nConsensus client diversity will be calculated as an average of the following three data sources provided in https://clientdiversity.org/\n- Sigma Prime's Blockprint\n- Miga Labs\n- Rated.Network\n\nExecution client diversity will be calculated as an average of the following three data sources:\n- [https://clientdiversity.org/](https://clientdiversity.org/)\n- [https://ethernodes.org/](https://ethernodes.org/)\n- [https://explorer.rated.network/network?network=mainnet&timeWindow=1d&rewardsMetric=average&geoDistType=all&hostDistType=all&soloProDist=stake](https://explorer.rated.network/network?network=mainnet&timeWindow=1d&rewardsMetric=average&geoDistType=all&hostDistType=all&soloProDist=stake)\n\n__Is this an upgrade of an existing system? If so, which? And what are the main differences?__\n\nThe Ethereum Protocol is in scope, however, only the clients and codebases which are listed in the assets table above qualify for this program. The specifications of the consensus layer and execution layer are in scope, please see the following resource to understand how to find and report a bug in the specification documents.\n\n__Where do you suspect there may be bugs? Useful aspects of this question are:__\n\n- **Which parts of the code are you most concerned about?**\n    - We are most concerned about code related to consensus, validators, cryptography, networking (libp2p, devp2p)\n     - Bugs concerning the following mechanisms:\n        - beacon-chain.md files: Any bugs that may cause the beacon chain to stop or consensus failure.\n        - fork-choice.md files: This logic is likely the most complicated and requires a more sophisticated attack vector or fuzzing to detect potential bugs. Note that there are some known but too costly attacks. For example, accountable safety guarantees that no conflicting finalization can happen without 1/3 of the validator set being flashable.\n        - p2p-interface.md files: These docs are primarily written in English words instead of executable and tested Python code. Networking experts can refer to these documents to find DOS attack vectors.\n    - Bugs are mostly found in typing issues, such as:\n        - Receiving a U256 instance in a variable expecting a Uint\n        - Getting a Bytes20 in a Bytes slot\n    - Edge case behavior that deviates from \"true\" Ethereum can also cause issues, including:\n        - Opcode behavior at extremes (e.g., blockhash at 255/256 depth)\n        - Precompiles decoding their arguments differently\n    - Cryptography is a complex area where ensuring that libraries are correctly implemented and match mainnet behavior is crucial.\n    - Discrepancies between the optimized and non-optimized modules may also be a valuable source of bugs.\n\n- **What attack vectors are you most concerned about? Which part(s) of the system do you want whitehats to attempt to break the most?**\n    - Specifically for the specifications:\n        - Incorrect behavior is biggest attack vector, eg. What happens if a theoretical new Ethereum client follows the specification to the letter?\n        - We are interested in cases when the chosen algorithm may not be suitable for a production client, or when simplifying assumptions (e.g., no re-orgs) are impractical in real-world scenarios.\n\n- **Are there any assumed invariants that you want whitehats to attempt to break?**\n    - We use many Python assertions (`assert`) to explicitly indicate the invariants in the markdown files.\n    - We use [SSZ typing](https://github.com/ethereum/consensus-specs/blob/dev/ssz/simple-serialize.md) to determine the domain of variables.\n\n__What external dependencies are there?__\n\n- A functioning Ethereum execution client (geth, reth, etc.) to provide blocks\n- [https://github.com/ethereum/execution-specs/blob/1e9a6e518adab7ae55ebddb15d72f91041240c8a/setup.cfg#L113-L117](https://github.com/ethereum/execution-specs/blob/1e9a6e518adab7ae55ebddb15d72f91041240c8a/setup.cfg#L113-L117)\n- [https://github.com/ethereum/execution-specs/blob/1e9a6e518adab7ae55ebddb15d72f91041240c8a/setup.cfg#L152-L180](https://github.com/ethereum/execution-specs/blob/1e9a6e518adab7ae55ebddb15d72f91041240c8a/setup.cfg#L152-L180)\n\n__Where might whitehats confuse out-of-scope code to be in-scope?__\n\n- `docc` and its plugins are completely out of scope.\n- Anything under src/ethereum_spec_tools is likely out of scope, but bug reports are still appreciated.\n- Attacks that require manually making the JSON-RPC publicly available are not in scope for the execution layer or consensus layer. It is known that there are multiple attack vectors (DDoS) and it is not intended to make it public unless multiple layers of protection are in place.\n- The JSON RPC is out of scope. Users are told not to expose the JSON RPC to the public as they are a well known attack vector.\n\n__Are there any unusual points about your protocol that may confuse whitehats?__\n\n- For the specifications, correctness and readability trump everything else, including performance.\n- We use int64 FAR FUTURE EPOCH: 2**64 - 1 as a stab of the epoch time that is unlikely to reach. When testing the variables' bounds, we should consider the probability of occurrence when determining the impact.\n- The Electra specs and “features” specs (under https://github.com/ethereum/consensus-specs/tree/dev/specs/_features folder) are still in development, so they are not in the scope.\n- The deposit contract only accepts deposits. To withdraw funds, a validator must exit their node or do work. Learn more here.\n- We use Python SSZ implementation [remerkleable](https://github.com/protolambda/remerkleable) a lot in pyspec. The bugs caused by remerkleable are not considered in scope as pyspec itself is not a product. Bugs must be considered in the context of client implementations.\n\n__What is the test suite setup information?__\n\nPlease see each respective node software’s documentation regarding test suite setup.\n\n__What qualifies as a hard fork of the network?__\n\nA hard fork is the case when a potential attack’s damage is proven to be irreversible, and the only possible fix is splitting the network on a hard fork. It is a radical change to a network’s protocol that makes previously invalid blocks and transactions valid, or vice-versa. This means nodes (clients) that do not update to the new protocol will no longer be able to participate in or validate the same blockchain as the updated nodes.\n\nIf a hard fork is required for the uncle chain to fix consensus for those clients and continue building on the canonical chain, it does not qualify as critical, as the canonical chain remains unchanged and does not require a hard fork. The issue caused should have the downstream effect of clients needing to deploy patches to continue building blocks on the canonical chain.\n\n__Previous Audits & Public Disclosure of Known Issues__\n\nBug reports covering previously discovered bugs (listed below) are not eligible for a reward within this program. This includes known issues that the project is aware of but has consciously decided not to “fix”, necessary code changes, or any implemented operational mitigating procedures that can lessen potential risk. \n\nEthereum’s completed audit reports can be found at [https://github.com/ethereum/public-disclosures](https://github.com/ethereum/public-disclosures). Any unfixed vulnerabilities mentioned in these reports are not eligible for a reward.\n\nThere may be other findings tracked in these repositories’ GitHub issues which are not exhaustively listed here. Whitehat’s are responsible for ensuring a vulnerability is not publicly disclosed in the respective clients [known issues list or any previous audits](https://immunefi.slite.com/app/docs/npGhR5rBwFfnTi).\n\nFor reports related to the Solidity Compiler, rewards will not be issued for crashes of the solc compiler on maliciously generated data.",
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Required",
          "PoC Not Required",
          "Step-by-step PoC Required",
          "Primacy of Impact"
        ],
        "productType": [
          "L1"
        ],
        "projectType": [
          "Blockchain"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "language": [
          "Solidity",
          "Vyper"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Blockchain/DLT"
        ],
        "blockchain_rewards": [
          {
            "level": "Critical",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "High",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "Medium",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "Low",
            "payout": "Portion of the Reward Pool"
          }
        ],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "High",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "Medium",
            "payout": "Portion of the Reward Pool"
          },
          {
            "level": "Low",
            "payout": "Portion of the Reward Pool"
          }
        ],
        "web_rewards": []
      },
      "evaluationEndDate": "2025-05-22T12:56:05.879Z",
      "boostedIntroStartingIn": "Up to $1.5 million USD is available in Attackathon rewards during November 25th to January 20, 2025.\n\nWhen the $1.5 million Ethereum Protocol Attackathon has ended, Immunefi will publish a leaderboard, Attackathon findings report, whitehat spotlights, and bugfix reviews.\n\n**October 28th onward:**\n\nThe Ethereum Protocol Education Period is live. To help you learn the Ethereum Protocol quickly and deeply, we'll be providing the Ethereum Protocol Academy, a learning page designed for security researchers to help you upskill on the Ethereum protocol as well as the Ethereum clients. We’ll also host a series of technical walkthroughs, and both the Ethereum Protocol and Ethereum client teams will provide direct technical support. \n\nYou can ask the Ethereum Protocol or Ethereum client teams any questions directly in the [Ethereum Protocol Attackathon Discord channel](https://discord.com/invite/immunefi) on Immunefi's Discord. Just make sure to tag the appropriate Ethereum client team.\n\n**November 25th 2024 2pm UTC to January 20th 2025 2pm UTC:**\n\nEthereum Protocol’s Attackathon is live. Find bugs and earn rewards. \n\nDuring the Attackathon, the Ethereum Protocol and Ethereum client teams commit to responding within 48 hours on weekdays to all bug reports. \n\n[Sign up here for Ethereum Protocol Attackathon Updates](https://marketing.immunefi.com/eth-attackathon-signup).",
      "boostedIntroLive": "Up to $1.5 million USD is available in Attackathon rewards during November 25th to January 20, 2025.\n\nYou can ask the Ethereum Protocol team any questions directly in the [Ethereum Attackathon Discord channel](https://discord.gg/immunefi?utm_source=immunefi) on Immunefi's Discord. During the Attackathon, Ethereum Protocol commits to responding within 48 hours on weekdays to all bug reports.\n\nAfter the Attackathon, Immunefi will publish a leaderboard and Attackathon findings report, as well as whitehat spotlights and bugfix reviews for top placements.",
      "boostedIntroEvaluating": "",
      "boostedIntroFinished": "",
      "rewardsToken": "ETH",
      "rewardsPool": 1500000,
      "primaryPool": 1500000,
      "allStarsPool": 0,
      "podiumPool": 0,
      "sourceLinesOfCode": 0,
      "boostedSummaryReport": "https://drive.google.com/file/d/15lCy1jza9MsnDooWmponwdaTq_EjV2-m/view?usp=sharing",
      "inviteOnly": false,
      "hideAssetsInScope": null,
      "boostedLeaderboard": [
        {
          "high": 0,
          "name": "anatomist",
          "critical": 0,
          "earnings": 148677,
          "insights": 3,
          "mediumLow": 9,
          "totalValidBugs": 9
        },
        {
          "high": 0,
          "name": "gln",
          "critical": 0,
          "earnings": 146250,
          "insights": 0,
          "mediumLow": 7,
          "totalValidBugs": 7
        },
        {
          "high": 0,
          "name": "CertiK",
          "critical": 0,
          "earnings": 90801,
          "insights": 14,
          "mediumLow": 6,
          "totalValidBugs": 6
        },
        {
          "high": 0,
          "name": "Franfran",
          "critical": 0,
          "earnings": 33750,
          "insights": 0,
          "mediumLow": 3,
          "totalValidBugs": 3
        },
        {
          "high": 0,
          "name": "Blobism",
          "critical": 0,
          "earnings": 33750,
          "insights": 0,
          "mediumLow": 3,
          "totalValidBugs": 3
        },
        {
          "high": 0,
          "name": "Omik",
          "critical": 0,
          "earnings": 16590,
          "insights": 3,
          "mediumLow": 1,
          "totalValidBugs": 1
        },
        {
          "high": 0,
          "name": "troy_ar",
          "critical": 0,
          "earnings": 15134,
          "insights": 2,
          "mediumLow": 1,
          "totalValidBugs": 1
        },
        {
          "high": 0,
          "name": "br0nz3p1ck4x3",
          "critical": 0,
          "earnings": 4369,
          "insights": 3,
          "mediumLow": 0,
          "totalValidBugs": 0
        },
        {
          "high": 0,
          "name": "Pig46940",
          "critical": 0,
          "earnings": 2913,
          "insights": 2,
          "mediumLow": 0,
          "totalValidBugs": 0
        },
        {
          "high": 0,
          "name": "cheems",
          "critical": 0,
          "earnings": 2427,
          "insights": 1,
          "mediumLow": 0,
          "totalValidBugs": 0
        },
        {
          "high": 0,
          "name": "csludo",
          "critical": 0,
          "earnings": 2427,
          "insights": 1,
          "mediumLow": 0,
          "totalValidBugs": 0
        },
        {
          "high": 0,
          "name": "impermanentW",
          "critical": 0,
          "earnings": 1456,
          "insights": 1,
          "mediumLow": 0,
          "totalValidBugs": 0
        },
        {
          "high": 0,
          "name": "a3yip6",
          "critical": 0,
          "earnings": 1456,
          "insights": 1,
          "mediumLow": 0,
          "totalValidBugs": 0
        },
        {
          "high": 0,
          "name": "[redacted]",
          "critical": 0,
          "earnings": 0,
          "insights": 3,
          "mediumLow": 3,
          "totalValidBugs": 3
        },
        {
          "high": 0,
          "name": "[redacted]",
          "critical": 0,
          "earnings": 0,
          "insights": 1,
          "mediumLow": 0,
          "totalValidBugs": 0
        }
      ],
      "features": [
        "Attackathon",
        "Managed Triage: Time Saver",
        "Vault"
      ],
      "academyStartDate": "2024-10-28T08:00:00.000Z",
      "websiteUrl": null,
      "description": "Ethereum is a decentralized blockchain that exists whenver there are connected computers running software following the Ethereum protocol and adding to the Ethereum Blockchain. ",
      "githubUrl": null,
      "feasibilityLimitations": null,
      "prohibitedActivites": null,
      "responsiblePublicationCategory": null,
      "knownIssues": [],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": null,
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": "Only the targets which directly affect the Ethereum network are part of the Ethereum Protocol Attackathon. This means that for example our infrastructure; such as webpages, dns, email etc, are not part of the bounty-scope. ERC20 contract bugs are typically not included in the bounty scope. However, we can help reach out to affected parties, such as authors or exchanges in such cases. ENS is maintained by the ENS foundation, and is not part of the bounty scope. Vulnerabilities requiring the user to have publicly exposed an API, such as JSON-RPC or the Beacon API, is out of scope of the bug bounty program.\n\nThese impacts are out of scope for this bug bounty program. \n\n- Impacts on Example Code provided by Ethereum or smart contract code that was deployed by the user.\n\nBlockchain/DLT Specific:\n\n- Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum",
      "eligibilityCriteria": [
        "no_ofac_sdn",
        "no_official_contributor",
        "no_employee",
        "no_auditor"
      ],
      "eligibilityCriteriaAdditionalInformation": "From a restricted country or territory: North Korea, Iran, Cuba, Syria, certain regions of Ukraine (Crimea, Donetsk and Luhansk), West Bank and Gaza regions of Israel, Venezuela, Afghanistan; Employees and contractors of the Ethereum Foundation may participate in the program only in the accrual of points and will not receive monetary rewards. Client teams may participate in finding vulnerabilities in other client team’s projects, however employees and contractors of individual client teams who self report vulnerabilities will only result in accrual of points and will not receive monetary rewards",
      "programCodebases": [],
      "programDocumentations": [],
      "primacy": "primacy_of_rules",
      "newProgramRewardsEnabled": false,
      "findingsUrl": "https://reports.immunefi.com/ethereum-protocol-or-attackathon",
      "premiumTriaging": true
    },
    "layoutProps": {
      "headerMarginBottom": "mb-12 lg:mb-16"
    },
    "metaData": {
      "title": "Attackathon | Ethereum Protocol Bug Bounties",
      "description": "Find bugs and vulnerabilities on Attackathon | Ethereum Protocol and get paid up to $1,500,000.",
      "url": "https://immunefi.com/audit-competition/ethereum-protocol-attackathon/",
      "ogImg": "/api/bounty/og-image/?project=Attackathon+%7C+Ethereum+Protocol&slug=ethereum-protocol-attackathon"
    }
  },
  "__N_SSG": true
}
