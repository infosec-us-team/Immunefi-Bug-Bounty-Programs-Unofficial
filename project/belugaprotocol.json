{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "belugaprotocol",
      "slug": "belugaprotocol",
      "project": "Beluga Protocol",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6x86qQ3j2Jw0qJ2LcP07hX/7aa3042eb9b4eb20ee7b4907f65074ca/Beluga_Protocol_logo.jpeg",
      "launchDate": "2023-06-15T10:30+02:00",
      "updatedDate": "2023-06-20T08:16:58.882Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $3,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "high",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "medium",
          "payout": "USD $3,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "2wTXxj5zdzOidhbJeJaAjl",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x48945a091108bbbd54829b632b1df94bb50f81d7",
          "description": "Beluga Router"
        },
        {
          "id": "z0fVY8OTBmNlPpnupigfK",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x7fbdEb84D5966c1C325D8CB2E01593D74c9A41Cd",
          "description": "veBELA"
        },
        {
          "id": "DbFDVzbI1uR6IfhT0tO1f",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x2C4CAE3Cb50912AeEB6eE2812Ec6d0AACA32cDaF",
          "description": "MasterBelugaV3"
        },
        {
          "id": "FOdWHHOS3MmN2v06jujnW",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x7668bcbf650ae69297e411d2a8ec91e07dd91c0b",
          "description": "MasterChef"
        },
        {
          "id": "40oHNBl8Jm7n8bnTQ6mtjy",
          "type": "websites_and_applications",
          "url": "https://arb.beluga.so",
          "description": "Beluga Arbitrum "
        },
        {
          "id": "1OR4UhvlLEig6nZLR6e6JG",
          "type": "websites_and_applications",
          "url": "https://beluga.so",
          "description": "Beluga Default"
        }
      ],
      "impacts": [
        {
          "id": "2L0j4G2NGjvhkhaNzMLfCE",
          "title": "Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2sWDafFsfF0XdaIyEqASUL",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7dhLVMqBz8thVSOsZ5vgrK",
          "title": "Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4fBEEiFIWQ5nRsraWGeg8x",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "ZwzQDRDjgVzKzplKfqYkt",
          "title": "Permanent freezing of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3yrdoyzdRm92zC0Vnl6RDS",
          "title": "Unauthorized minting of NFTs",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "3XCCJzdNY7yXBpzprz183C",
          "title": "Predictable or manipulable RNG that results in abuse of the principal or NFT",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6FFUgi786ycN4DGyTuXFE2",
          "title": "Unintended alteration of what the NFT represents (e.g. token URI, payload, artistic content)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2LQtK5NyBJ4TFJ5g5KOxBn",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4Hc6kfdxVocNbPrVlg7m0L",
          "title": "Execute arbitrary system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6KglUwlnh06VQ8EEO0qtIX",
          "title": "Retrieve sensitive data/files from a running server such as: /etc/shadow, database passwords, blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3dT3eaZc4LO0bN2jQM3rN1",
          "title": "Taking down the application/website",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3HWwU2n05EKu71DPlVg2ii",
          "title": "Taking down the NFT URI",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "28E2HR5aT6PhsEiafo93wg",
          "title": "Taking state-modifying authenticated actions (with or without blockchain state interaction) on behalf of other users without any interaction by that user, such as: Changing registration information, Commenting, Voting, Making trades, Withdrawals, etc.",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1gnzuytHq26iTiAmPyHTht",
          "title": "Changing the NFT metadata",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1zVCFgoUeYxnigWYalR48C",
          "title": "Subdomain takeover with already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3tFY4e75t8EiHlzAxqtIfd",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2m5lxCPRpZkl0dOdlqBkwn",
          "title": "Malicious interactions with an already-connected wallet such as: Modifying transaction arguments or parameters, Substituting contract addresses, Submitting malicious transactions",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6n5EcczLkaJUCLPuW8mfev",
          "title": "Direct theft of user NFTs",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "3bbV5wcbINwdAOFkHjwal2",
          "title": "Injection of malicious HTML or XSS through NFT metadata",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6D92kmPinCdzaU9dA0kFrJ",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6vRHZjYIISiSTOBP44TCqe",
          "title": "Theft of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "OwEt3gnKN2eXFF6ZsjlIB",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7nSzNOHgFc0CIKxRJ358la",
          "title": "Permanent freezing of unclaimed royalties",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "uWPib6whl0qscn5PmvU4c",
          "title": "Temporary freezing of funds for a minimum of 6 hours",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5ZMIBJHBZdUWKT26SlmWTY",
          "title": "Temporary freezing NFTs",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6G1qAezzQnPi8uMwB8GoHf",
          "title": "Injecting/modifying the static content on the target application without Javascript (Persistent) such as: HTML injection without Javascript, Replacing existing text with arbitrary text, Arbitrary file uploads, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "3GH0SIx88EiJhTzHpTJfBA",
          "title": "Changing sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as: Email or password of the victim, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "3UwkfwvKuzPGKYFMUdHSDx",
          "title": "Improperly disclosing confidential user information such as: Email address, Phone number, Physical address, etc.",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "4bB91L0Uo3yQrG0g79Erkt",
          "title": "Subdomain takeover without already-connected wallet interaction",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "N791uHy9aaEy3odCH9cyZ",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5MIlBv0hyIxn0NhmPHkRX7",
          "title": "Block stuffing",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4dMCzNlgvrm2Fo2xM9z02W",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7kmGUGGdblAYuTZG7LRYpT",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3rN29NypSS4WtEVcmH6kK",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "42VbHvVV35yAUcscdS46eD",
          "title": "Changing non-sensitive details of other users (including modifying browser local storage) without already-connected wallet interaction and with up to one click of user interaction, such as: Changing the name of user, Enabling/disabling notifications",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "1LoTor2fJFfbZuTpsOYul7",
          "title": "Injecting/modifying the static content on the target application without Javascript (Reflected) such as: Reflected HTML injection, Loading external site data",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "2DqjTfI04m50Gr1KlCfiK8",
          "title": "Redirecting users to malicious websites (Open Redirect)",
          "type": "websites_and_applications",
          "severity": "medium"
        },
        {
          "id": "3JUpRaFKsMZUDbrWfOmpOG",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "7852XiqxXLsoHotVrQtdWK",
          "title": "Changing details of other users (including modifying browser local storage) without already-connected wallet interaction and with significant user interaction such as: Iframing leading to modifying the backend/browser state (demonstrate impact with PoC)",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "3JB33vCeLgG6aFg4zBkZQ",
          "title": "Taking over broken or expired outgoing links such as: Social media handles, etc.",
          "type": "websites_and_applications",
          "severity": "low"
        },
        {
          "id": "3XqHyScj7gnko6cQ1BIxEr",
          "title": "Temporarily disabling user to access target site, such as: Locking up the victim from login, Cookie bombing, etc.",
          "type": "websites_and_applications",
          "severity": "low"
        }
      ],
      "programOverview": "Beluga is a multi-chain stableswap AMM that aims to transform cross-chain swap with Layer3 Infrastructure.\n\nFor more information about Beluga Protocol, please visit [https://www.beluga.so/](https://www.beluga.so/).  \n\nBeluga Protocol provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. \n\n__Responsible Publication__\n\nBeluga Protocol adheres to category 1. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our [Responsible Publication](https://immunefi.com/responsible-publication/) page.\n\n__Primacy of Impact vs Primacy of Rules__\n\nBeluga Protocol adheres to the Primacy of Impact for the following impacts:\n\n- Smart Contract, Critical Severity Level, Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results\n- Smart Contract, Critical Severity Level, Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n- Smart Contract, Critical Severity Level, Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties\n- Smart Contract, Critical Severity Level, Permanent freezing of funds\n- Smart Contract, Critical Severity Level, Permanent freezing of NFTs\n- Smart Contract, Critical Severity Level, Protocol insolvency\n- Smart Contract, High Severity Level, Theft of unclaimed yield\n- Smart Contract, High Severity Level, Theft of unclaimed royalties\n- Web/App, Critical Severity Level, Execute arbitrary system commands\n- Web/App, Critical Severity Level, Retrieve sensitive data/files from a running server such as:\n   - /etc/shadow\n   - database passwords\n   - blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)\n- Web/App, Critical Severity Level, Taking down the application/website \n- Web/App, Critical Severity Level, Taking down the NFT URI\n\nIf an impact is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nTestnet and mock files are not covered under the Primacy of Impact. \n\nAll other impacts are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n\n__Known Issue Assurance__\n\nBeluga Protocol commits to providing Known Issue Assurance to bug submissions through their program. This means that Beluga Protocol will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \n\n__Immunefi Standard Badge__\n\nBeluga Protocol has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-), which is given to projects that adhere to our best practices. \n\n__Invoicing Information__\n\nIf needed by the security researcher, Beluga Protocol is able to provide the necessary information for the proper issuance of an invoice. This includes:\n- Person’s Name\n- Registered Address\n- Registration Number\n- Email where to send the invoice\n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \n\n__Repeatable Attack Limitations__\n\nIn cases of repeatable attacks for smart contract bugs, only the first attack is considered if the smart contracts where the vulnerability exists can be upgraded, paused, or killed. If the attack impacts a smart contract directly holding funds that cannot be upgraded or paused, the amount of funds at risk will be calculated with the first attack being at 100% of the funds that could be stolen and then a reduction of 25% from the amount of the first attack for every 5000 blocks the attack needs for subsequent attacks from the first attack, rounded down. For avoidance of doubt, if a second attack would happen at 10000 blocks and then a third at 15000 blocks, the funds at risk would be counted at 75% and 50% of the reward from the first attack, respectively.\n\n__Reward Calculation for High Level Reports__\n\nHigh smart contract vulnerabilities will be capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 5 blocks that the funds or NFTs could be temporarily frozen, rounded down to the nearest multiple of 5, up to the hard cap of USD $10,000. \n\n__Previous Audits__\n\nBeluga Protocol has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\n- [PUBLIC_RELEASE_REDACTED_Kudelski_BelugaDex_SCR_2022_Retest_Report.pdf](https://drive.google.com/file/d/1rckTbs9c40sNpgAcrp2aNaYiOT-CpvRX/view?usp=share_link)\n\n__Feasibility Limitations__\n\nBug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be out of scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:\n- Losses or other negative effects of the attack are inflicted upon Beluga Protocol ecosystem participants \n- The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem\n\n__Proof of Concept (PoC) Requirements__\n\nA PoC is required for the following severity levels:\n\n- Smart Contract, Critical Severity Level\n- Smart Contract, High Severity Level\n- Smart Contract, Medium Severity Level\n\nAll PoCs submitted must comply with the Immunefi-wide [PoC Guidelines and Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules). Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\n\n__Reward Payment Terms__\n\nPayouts are handled by the Beluga Protocol team directly and are denominated in USD. However, payments are done in USDC. \n",
      "outOfScopeAndRules": "These impacts are out of scope for this bug bounty program. \n\n__All Categories__\n\n- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n\n__Smart Contracts__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Best practice recommendations\n\n__Web/App__ \n\n- Theoretical impacts without any proof or demonstration\n- Impacts involving attacks requiring physical access to the victim device\n- Impacts involving attacks requiring access to the local network of the victim\n- Reflected plain text injection (e.g. url parameters, path, etc.)\n   - This does not exclude reflected HTML injection with or without JavaScript\n   - This does not exclude persistent plain text injection\n- Any impacts involving self-XSS\n- Captcha bypass using OCR without impact demonstration\n- CSRF with no state modifying security impact (e.g. logout CSRF)\n- Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact\n- Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\n- Lack of SSL/TLS best practices\n- Impacts that only require DDoS\n- UX and UI impacts that do not materially disrupt use of the platform\n- Impacts primarily caused by browser/plugin defects\n- Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\n- Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) \n- SPF/DMARC misconfigured records\n- Missing HTTP Headers without demonstrated impact\n- Automated scanner reports without demonstrated impact\n- Non-future-proof NFT rendering\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All code of Beluga Protocol can be found at [https://github.com/belugadex.](https://github.com/belugadex) Documentation for the assets provided in the table can be found at [https://docs.beluga.so/.](https://docs.beluga.so/)  \n\nUnless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about [Reported Subdomain Takeovers](https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers).\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "DEX"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Arbitrum"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $3,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $50,000"
          },
          {
            "level": "High",
            "payout": "USD $10,000"
          },
          {
            "level": "Medium",
            "payout": "USD $3,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Beluga is a multi-chain stableswap AMM that aims to transform cross-chain swap with Layer3 Infrastructure.\"), mdx(\"p\", null, \"For more information about Beluga Protocol, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.beluga.so/\"\n  }, \"https://www.beluga.so/\"), \".  \"), mdx(\"p\", null, \"Beluga Protocol provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Responsible Publication\")), mdx(\"p\", null, \"Beluga Protocol adheres to category 1. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/responsible-publication/\"\n  }, \"Responsible Publication\"), \" page.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Primacy of Impact vs Primacy of Rules\")), mdx(\"p\", null, \"Beluga Protocol adheres to the Primacy of Impact for the following impacts:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, Critical Severity Level, Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, Critical Severity Level, Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, Critical Severity Level, Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, Critical Severity Level, Permanent freezing of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, Critical Severity Level, Permanent freezing of NFTs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, Critical Severity Level, Protocol insolvency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, High Severity Level, Theft of unclaimed yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, High Severity Level, Theft of unclaimed royalties\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App, Critical Severity Level, Execute arbitrary system commands\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App, Critical Severity Level, Retrieve sensitive data/files from a running server such as:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/etc/shadow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"database passwords\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App, Critical Severity Level, Taking down the application/website \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web/App, Critical Severity Level, Taking down the NFT URI\")), mdx(\"p\", null, \"If an impact is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\"), mdx(\"p\", null, \"Testnet and mock files are not covered under the Primacy of Impact. \"), mdx(\"p\", null, \"All other impacts are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Known Issue Assurance\")), mdx(\"p\", null, \"Beluga Protocol commits to providing Known Issue Assurance to bug submissions through their program. This means that Beluga Protocol will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Immunefi Standard Badge\")), mdx(\"p\", null, \"Beluga Protocol has satisfied the requirements for the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-\"\n  }, \"Immunefi Standard Badge\"), \", which is given to projects that adhere to our best practices. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Invoicing Information\")), mdx(\"p\", null, \"If needed by the security researcher, Beluga Protocol is able to provide the necessary information for the proper issuance of an invoice. This includes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Person\\u2019s Name\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Registered Address\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Registration Number\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Email where to send the invoice\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Beluga is a multi-chain stableswap AMM that aims to transform cross-chain swap with Layer3 Infrastructure.</p><p>For more information about Beluga Protocol, please visit <a href=\"https://www.beluga.so/\">https://www.beluga.so/</a>.  </p><p>Beluga Protocol provides rewards in USDC. For more details about the payment process, please view the Rewards by Threat Level section further below. </p><p><strong>Responsible Publication</strong></p><p>Beluga Protocol adheres to category 1. This Policy determines what information whitehats are allowed to make public from their submitted bug reports. For more information about the category selected, please refer to our <a href=\"https://immunefi.com/responsible-publication/\">Responsible Publication</a> page.</p><p><strong>Primacy of Impact vs Primacy of Rules</strong></p><p>Beluga Protocol adheres to the Primacy of Impact for the following impacts:</p><ul><li>Smart Contract, Critical Severity Level, Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results</li><li>Smart Contract, Critical Severity Level, Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield</li><li>Smart Contract, Critical Severity Level, Direct theft of any user NFTs, whether at-rest or in-motion, other than unclaimed royalties</li><li>Smart Contract, Critical Severity Level, Permanent freezing of funds</li><li>Smart Contract, Critical Severity Level, Permanent freezing of NFTs</li><li>Smart Contract, Critical Severity Level, Protocol insolvency</li><li>Smart Contract, High Severity Level, Theft of unclaimed yield</li><li>Smart Contract, High Severity Level, Theft of unclaimed royalties</li><li>Web/App, Critical Severity Level, Execute arbitrary system commands</li><li>Web/App, Critical Severity Level, Retrieve sensitive data/files from a running server such as:<ul><li>/etc/shadow</li><li>database passwords</li><li>blockchain keys (this does not include non-sensitive environment variables, open source code, or usernames)</li></ul></li><li>Web/App, Critical Severity Level, Taking down the application/website </li><li>Web/App, Critical Severity Level, Taking down the NFT URI</li></ul><p>If an impact is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.</p><p>Testnet and mock files are not covered under the Primacy of Impact. </p><p>All other impacts are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.</p><p><strong>Known Issue Assurance</strong></p><p>Beluga Protocol commits to providing Known Issue Assurance to bug submissions through their program. This means that Beluga Protocol will either disclose known issues publicly or at the very least privately via a self-reported bug submission in order to allow for a more objective and streamlined mediation process to prove that an issue is known. Otherwise, assuming the bug report itself is valid, it would result in the bug report being considered in-scope and due 100% of the reward with respect to the bug bounty program terms. </p><p><strong>Immunefi Standard Badge</strong></p><p>Beluga Protocol has satisfied the requirements for the <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/6427157117713-The-Immunefi-Standard-Badge-\">Immunefi Standard Badge</a>, which is given to projects that adhere to our best practices. </p><p><strong>Invoicing Information</strong></p><p>If needed by the security researcher, Beluga Protocol is able to provide the necessary information for the proper issuance of an invoice. This includes:</p><ul><li>Person’s Name</li><li>Registered Address</li><li>Registration Number</li><li>Email where to send the invoice</li></ul>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Repeatable Attack Limitations\")), mdx(\"p\", null, \"In cases of repeatable attacks for smart contract bugs, only the first attack is considered if the smart contracts where the vulnerability exists can be upgraded, paused, or killed. If the attack impacts a smart contract directly holding funds that cannot be upgraded or paused, the amount of funds at risk will be calculated with the first attack being at 100% of the funds that could be stolen and then a reduction of 25% from the amount of the first attack for every 5000 blocks the attack needs for subsequent attacks from the first attack, rounded down. For avoidance of doubt, if a second attack would happen at 10000 blocks and then a third at 15000 blocks, the funds at risk would be counted at 75% and 50% of the reward from the first attack, respectively.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Calculation for High Level Reports\")), mdx(\"p\", null, \"High smart contract vulnerabilities will be capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 5 blocks that the funds or NFTs could be temporarily frozen, rounded down to the nearest multiple of 5, up to the hard cap of USD $10,000. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Previous Audits\")), mdx(\"p\", null, \"Beluga Protocol has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/1rckTbs9c40sNpgAcrp2aNaYiOT-CpvRX/view?usp=share_link\"\n  }, \"PUBLIC_RELEASE_REDACTED_Kudelski_BelugaDex_SCR_2022_Retest_Report.pdf\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Feasibility Limitations\")), mdx(\"p\", null, \"Bug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be out of scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Losses or other negative effects of the attack are inflicted upon Beluga Protocol ecosystem participants \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Proof of Concept (PoC) Requirements\")), mdx(\"p\", null, \"A PoC is required for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, Critical Severity Level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, High Severity Level\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract, Medium Severity Level\")), mdx(\"p\", null, \"All PoCs submitted must comply with the Immunefi-wide \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\"\n  }, \"PoC Guidelines and Rules\"), \". Bug report submissions without a PoC when a PoC is required will not be provided with a reward.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reward Payment Terms\")), mdx(\"p\", null, \"Payouts are handled by the Beluga Protocol team directly and are denominated in USD. However, payments are done in USDC. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact the vulnerability could otherwise cause based on the Impacts in Scope table further below. </p><p><strong>Repeatable Attack Limitations</strong></p><p>In cases of repeatable attacks for smart contract bugs, only the first attack is considered if the smart contracts where the vulnerability exists can be upgraded, paused, or killed. If the attack impacts a smart contract directly holding funds that cannot be upgraded or paused, the amount of funds at risk will be calculated with the first attack being at 100% of the funds that could be stolen and then a reduction of 25% from the amount of the first attack for every 5000 blocks the attack needs for subsequent attacks from the first attack, rounded down. For avoidance of doubt, if a second attack would happen at 10000 blocks and then a third at 15000 blocks, the funds at risk would be counted at 75% and 50% of the reward from the first attack, respectively.</p><p><strong>Reward Calculation for High Level Reports</strong></p><p>High smart contract vulnerabilities will be capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 5 blocks that the funds or NFTs could be temporarily frozen, rounded down to the nearest multiple of 5, up to the hard cap of USD $10,000. </p><p><strong>Previous Audits</strong></p><p>Beluga Protocol has provided these completed audit review reports for reference. Any unfixed vulnerability mentioned in these reports are not eligible for a reward.</p><ul><li><a href=\"https://drive.google.com/file/d/1rckTbs9c40sNpgAcrp2aNaYiOT-CpvRX/view?usp=share_link\">PUBLIC_RELEASE_REDACTED_Kudelski_BelugaDex_SCR_2022_Retest_Report.pdf</a></li></ul><p><strong>Feasibility Limitations</strong></p><p>Bug reports that require an attack that involve one or more other protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX), either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible, would be out of scope. However, they will be considered as in-scope and categorized according to the program rules as long as all of the following are true:</p><ul><li>Losses or other negative effects of the attack are inflicted upon Beluga Protocol ecosystem participants </li><li>The additional protocols used must have enough liquidity in various assets to allow the attack to succeed at the time of bug report submission. For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem</li></ul><p><strong>Proof of Concept (PoC) Requirements</strong></p><p>A PoC is required for the following severity levels:</p><ul><li>Smart Contract, Critical Severity Level</li><li>Smart Contract, High Severity Level</li><li>Smart Contract, Medium Severity Level</li></ul><p>All PoCs submitted must comply with the Immunefi-wide <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules\">PoC Guidelines and Rules</a>. Bug report submissions without a PoC when a PoC is required will not be provided with a reward.</p><p><strong>Reward Payment Terms</strong></p><p>Payouts are handled by the Beluga Protocol team directly and are denominated in USD. However, payments are done in USDC. </p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"These impacts are out of scope for this bug bounty program. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"All Categories\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts on test files and configuration files unless stated otherwise in the bug bounty program\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts requiring basic economic and governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity impacts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts from Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice recommendations\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Web/App\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical impacts without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving attacks requiring physical access to the victim device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts involving attacks requiring access to the local network of the victim\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflected plain text injection (e.g. url parameters, path, etc.)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude reflected HTML injection with or without JavaScript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This does not exclude persistent plain text injection\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any impacts involving self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR without impact demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no state modifying security impact (e.g. logout CSRF)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D) without demonstration of impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts that only require DDoS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UX and UI impacts that do not materially disrupt use of the platform\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impacts primarily caused by browser/plugin defects\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SPF/DMARC misconfigured records\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Headers without demonstrated impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated scanner reports without demonstrated impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Non-future-proof NFT rendering\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third-party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks that are executed against project assets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>These impacts are out of scope for this bug bounty program. </p><p><strong>All Categories</strong></p><ul><li>Impacts requiring attacks that the reporter has already exploited themselves, leading to damage</li><li>Impacts caused by attacks requiring access to leaked keys/credentials</li><li>Impacts caused by attacks requiring access to privileged addresses (governance, strategist) except in such cases where the contracts are intended to have no privileged access to functions that make the attack possible</li><li>Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code</li><li>Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production</li><li>Feature requests</li><li>Impacts on test files and configuration files unless stated otherwise in the bug bounty program</li></ul><p><strong>Smart Contracts</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Impacts requiring basic economic and governance attacks (e.g. 51% attack)</li><li>Lack of liquidity impacts</li><li>Impacts from Sybil attacks</li><li>Best practice recommendations</li></ul><p><strong>Web/App</strong> </p><ul><li>Theoretical impacts without any proof or demonstration</li><li>Impacts involving attacks requiring physical access to the victim device</li><li>Impacts involving attacks requiring access to the local network of the victim</li><li>Reflected plain text injection (e.g. url parameters, path, etc.)<ul><li>This does not exclude reflected HTML injection with or without JavaScript</li><li>This does not exclude persistent plain text injection</li></ul></li><li>Any impacts involving self-XSS</li><li>Captcha bypass using OCR without impact demonstration</li><li>CSRF with no state modifying security impact (e.g. logout CSRF)</li><li>Impacts related to missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”) without demonstration of impact</li><li>Impacts caused by vulnerabilities requiring un-prompted, in-app user actions that are not part of the normal app workflows</li><li>Lack of SSL/TLS best practices</li><li>Impacts that only require DDoS</li><li>UX and UI impacts that do not materially disrupt use of the platform</li><li>Impacts primarily caused by browser/plugin defects</li><li>Leakage of non sensitive API keys (e.g. Etherscan, Infura, Alchemy, etc.)</li><li>Any vulnerability exploit requiring browser bugs for exploitation (e.g. CSP bypass) </li><li>SPF/DMARC misconfigured records</li><li>Missing HTTP Headers without demonstrated impact</li><li>Automated scanner reports without demonstrated impact</li><li>Non-future-proof NFT rendering</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet</li><li>Any testing with pricing oracles or third-party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks that are executed against project assets</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All code of Beluga Protocol can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/belugadex\"\n  }, \"https://github.com/belugadex.\"), \" Documentation for the assets provided in the table can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.beluga.so/\"\n  }, \"https://docs.beluga.so/.\"), \"  \"), mdx(\"p\", null, \"Unless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers\"\n  }, \"Reported Subdomain Takeovers\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All code of Beluga Protocol can be found at <a href=\"https://github.com/belugadex\">https://github.com/belugadex.</a> Documentation for the assets provided in the table can be found at <a href=\"https://docs.beluga.so/\">https://docs.beluga.so/.</a>  </p><p>Unless explicitly listed, only pages of the web/app assets in addition to the direct link are considered in-scope of the bug bounty program. Other subdomains are not considered as in-scope. However, for subdomain takeovers that lead to an impact on the in-scope asset, please refer to our page about <a href=\"https://immunefisupport.zendesk.com/hc/en-us/articles/14352199704593-Reported-Subdomain-Takeovers\">Reported Subdomain Takeovers</a>.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
