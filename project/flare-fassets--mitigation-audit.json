{
  "pageProps": {
    "isAttackathon": false,
    "academyContent": null,
    "ethereumAttackathonSponsors": null,
    "project": {
      "features": [
        "Boost",
        "Vault",
        "Managed Triage: Signal Booster"
      ],
      "premiumTriaging": true,
      "isSafeHarborActive": false,
      "performanceMetrics": {}
    },
    "bounty": {
      "contentfulId": "2eA3UdE0ZgCM4oe8en8ZZI",
      "id": "flare-fassets--mitigation-audit",
      "slug": "flare-fassets--mitigation-audit",
      "project": "Mitigation Audit | Flare | FAssets",
      "maxBounty": 25000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1JzpONYtkc9rdKHoU36rbo/04803c1136f97e969cf93c7a77b20ee6/Flare.png",
      "launchDate": "2025-09-18T10:00:00.000Z",
      "endDate": "2025-09-25T10:00:00.000Z",
      "updatedDate": "2025-09-24T10:36:16.731Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Portion of Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Portion of Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Portion of Reward Pool",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "Portion of Reward Pool",
          "pocRequired": true
        }
      ],
      "audits": [
        {
          "id": "jiWQmbK8Tppe0B6eYSPi6",
          "url": "https://dev.flare.network/support/audits/",
          "auditor": "All Audits",
          "date": "2025-04-01"
        },
        {
          "id": "17MP0yQRt99lnDME6BySuK",
          "url": "https://reports.immunefi.com/flare-fassets",
          "auditor": "Immunefi",
          "date": "2025-08-25"
        }
      ],
      "assets": [
        {
          "id": "72Gdp3p81Pt25jDEtiPFAg",
          "type": "smart_contract",
          "url": "https://github.com/flare-foundation/fassets/commit/59373cee12e6d2a9fa0a9cc8735bb486faa51b36",
          "description": "Fix of Report - 45439",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-09-18T10:00:00.000Z",
          "fund": null
        },
        {
          "id": "7LBgYGXPY1kzYtiL1vbHlE",
          "type": "smart_contract",
          "url": "https://github.com/flare-foundation/fassets/commit/2abc918d3dec2ea6c4f34ca972a6eeb89b4ecafc",
          "description": "Fix of Report - 45478",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-09-18T10:00:00.000Z",
          "fund": null
        },
        {
          "id": "6jtjACTIFW4wz8P00O8tw4",
          "type": "smart_contract",
          "url": "https://github.com/flare-foundation/fassets/commit/7aa02b62285cd5313032103710c2e083b166bf60",
          "description": "Fix of Report - 45533",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-09-18T10:00:00.000Z",
          "fund": null
        },
        {
          "id": "4qgCuj27NYYUdx256TQGC0",
          "type": "smart_contract",
          "url": "https://github.com/flare-foundation/fassets/commit/92e1e2bdc6e8f75f61cfd9f10ddb05df4a7c8c6b",
          "description": "Fix of Report - 45893",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-09-18T10:00:00.000Z",
          "fund": null
        },
        {
          "id": "7DwOhGihEk2D9RG11V2txD",
          "type": "smart_contract",
          "url": "https://github.com/flare-foundation/fassets/commit/29d4370abb61ca0e2df4d741245537a15cdf2e2e",
          "description": "Fix of Report - 45897",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-09-18T10:00:00.000Z",
          "fund": null
        },
        {
          "id": "70nxgTeBC03Eu7bXSADrHq",
          "type": "smart_contract",
          "url": "https://github.com/flare-foundation/fassets/commit/5f82ac58e9c74f58a927c66a0df50df25b67e60b",
          "description": "Fix of Report - 45904",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-09-18T10:00:00.000Z",
          "fund": null
        },
        {
          "id": "22GdQOkEXrUpNXVSXMLimh",
          "type": "smart_contract",
          "url": "https://github.com/flare-foundation/fassets/commit/03304ecf8110fd32f94620f111e2593f6969d573",
          "description": "Fix of Report - 45514",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-09-18T10:00:00.000Z",
          "fund": null
        },
        {
          "id": "aqhqDUgfU7ql8f3viPbqx",
          "type": "smart_contract",
          "url": "https://github.com/flare-foundation/fassets/commit/01190b0e4386714d4c2b968597fce5f35cf58047",
          "description": "Fix of Report - 46265",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-09-18T10:00:00.000Z",
          "fund": null
        },
        {
          "id": "6ntq9fZvD1worIw8qTIFQn",
          "type": "smart_contract",
          "url": "https://github.com/flare-foundation/fassets/commit/7dd1ddd574989c44b3057ce426ff188bc69743d1",
          "description": "Fix of Report - 46520",
          "isPrimacyOfImpact": null,
          "isSafeHarbor": null,
          "addedAt": "2025-09-18T10:00:00.000Z",
          "fund": null
        }
      ],
      "impacts": [
        {
          "id": 14,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Manipulation of governance voting result deviating from voted outcome and resulting in a direct change from intended effect of original results"
        },
        {
          "id": 22,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Protocol insolvency"
        },
        {
          "id": 29,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Smart contract unable to operate due to lack of token funds"
        },
        {
          "id": 34,
          "type": "smart_contract",
          "severity": "low",
          "title": "Contract fails to deliver promised returns, but doesn't lose value"
        },
        {
          "id": 15,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield"
        },
        {
          "id": 17,
          "type": "smart_contract",
          "severity": "critical",
          "title": "Permanent freezing of funds"
        },
        {
          "id": 23,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed yield"
        },
        {
          "id": 24,
          "type": "smart_contract",
          "severity": "high",
          "title": "Theft of unclaimed royalties"
        },
        {
          "id": 25,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed yield"
        },
        {
          "id": 26,
          "type": "smart_contract",
          "severity": "high",
          "title": "Permanent freezing of unclaimed royalties"
        },
        {
          "id": 27,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of funds"
        },
        {
          "id": 30,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Block stuffing"
        },
        {
          "id": 31,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)"
        },
        {
          "id": 32,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Theft of gas"
        },
        {
          "id": 33,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Unbounded gas consumption"
        },
        {
          "id": 5721,
          "type": "smart_contract",
          "severity": "high",
          "title": "Temporary freezing of funds for at least 24 hour"
        },
        {
          "id": 5722,
          "type": "smart_contract",
          "severity": "medium",
          "title": "Temporary freezing of funds for at least 1 hour"
        }
      ],
      "programOverview": "Flare is the blockchain for data. It is a layer-1, EVM smart contract platform designed to expand the utility of blockchain by delivering data certainty for dApp builders.\n\nFAssets is a trustless, over-collateralized bridge built on Flare that connects non smart contract networks to Flare/Songbird. It enables the creation of wrapped tokens (FAssets) for assets like BTC, DOGE and XRP. The original assets are deposited to the address of an agent and can later be redeemed.  \n\nAt the core of FAssets v1.1 is a new architecture component called the **Core Vault**, designed to improve system liquidity, scalability, and capital efficiency. It serves as a liquidity hub where Agents can deposit native assets (e.g., XRP) and unlock their FLR or SGB collateral. The minted FAssets are secured by collateral, which is in the form of ERC20 tokens on Flare/Songbird chain and native tokens (FLR on Flare, SGB on Songbird). These tokens can participate in Flare's DeFi ecosystem. \n\nThe FAsset system maintains security by ensuring every minted Fasset is backed by more value than it represents, creating a safeguard against volatility and protecting users from potential losses. \nTwo protocols, available on Flare and Songbird blockchains, enable the FAsset system to operate:\n- **FTSO** contracts which provide decentralised price feeds for multiple tokens.\n- Flare’s **Flare data connector**, which bridges payment data from any connected chain.\nFlare provides rewards in USDC, denominated in USD. For more details about the payment process, please view the Rewards by Threat Level section further below.\n\nFor more information about Flare, please visit [https://flare.network](https://flare.network)\n\nThis is the **Mitigation Audit** following the [Flare FAssets Mainnet Audit Competition](https://immunefi.com/audit-competition/audit-comp-flare-fassets/information) and the project may fix bugs mid-competition.",
      "prioritizedVulnerabilities": "_blank_",
      "rewardsBody": "Rewards are distributed among SRs according to [Immunefi’s Standardized Competition Reward Terms](https://immunefisupport.zendesk.com/hc/en-us/articles/31657285001873-Standardized-Competition-Reward-Terms).\n\nRewards are denominated in USD and distributed in **USDC** on **Ethereum**.\n\n### Flat Rewards\n\n**Mitigation Audit Rewards**: The reward pool is **$25,000 USD** if any bug is found.\n\nIf not a single bug is found (Insights do not count as bugs) the reward pool is **$3,750 USD**",
      "outOfScopeAndRules": "To be determined",
      "assetsBodyV2": "**Proof of Concept (PoC) Requirements**: A runnable PoC, demonstrating the bug's impact, is required for this program and has to comply with the [Immunefi PoC Guidelines and Rules.](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n\n__Asset Accuracy Assurance__\n\n- Bugs found on assets incorrectly listed in-scope will be considered valid and be rewarded.\n\n__Private Known Issues Reward Policy__\n\n- Private known issues, meaning known issues that were not publicly disclosed, are valid for a reward.\n\n__Primacy of Impact vs Primacy of Rules__\n\n- Flare adheres to the Primacy of Rules, which means that the whole Audit Competition & Mitigation Audit program is run strictly under the terms and conditions stated within this page.\n\n__KYC Requirement__\n\n- No KYC is required for the Flare FAssets Audit Competition & Mitigation Audit\n\n__Eligibility Criteria__\n\n- Security researchers who wish to participate must adhere to the rules of engagement set forth in this program and cannot be:\n   - On OFACs SDN list \n   - Official contributor, both past or present\n   - Employees and/or individuals closely associated with the project \n   - Security auditors that directly or indirectly participated in the audit review\n\n__Responsible Publication__\n\n- Whitehats may publish their bug reports after they have been fixed & paid, or closed as invalid, with the following exceptions:\n   - Bug reports in mediation may not be published until mediation has concluded and the bug report is resolved.\n\n- Immunefi may publish bug reports submitted to this Audit Competition and a leaderboard of the participants and their earnings.\n\n__Feasibility Limitations__\n\n- When there is uncertainty about how feasible an attack is Immunefi will use our feasibility limitation standards to determine the severity of the report.\n\n__Immunefi Standard Badge__\n\n- By adhering to Immunefi’s best practice recommendations, Flare Network has satisfied the requirements for the [Immunefi Standard Badge](https://immunefisupport.zendesk.com/hc/en-us/articles/15006865432209-The-Immunefi-Standard-Badge).",
      "impactsBody": "**Build Commands, Test Commands, and How to Run Them**\n- Instructions on how to start the project: https://github.com/flare-foundation/fassets?tab=readme-ov-file#getting-started\n- The easiest way is to add code in unit tests because the functionality on which the project relates is mocked.\n- You can look at https://github.com/flare-foundation/fassets/blob/main/test/integration/fasset-simulation/AttackScenarios.ts where researchers have submitted their reports.\n- Information and some guides you can also find on Flare Dev Hub: https://dev.flare.network/fassets/overview\n\n**Where might Security Researchers confuse out-of-scope code to be in-scope?**\n\nThe FAssets system is able to support wrapped tokens for XRP, BTC and DOGE. However, the initial v1.1 deployment will only have XRP (FXRP) enabled and that will be the sole scope of this audit competition. Any attacks related to FBTC, FDOGE, or UTXO-based logic in general, are out of scope.\n\n**Is this an upgrade of an existing system? If so, which? And what are the main differences?**\n\nAs a result of the Main Audit Competition, here are the changes: \n\n- Removed trailing fees\n- Removed handshake\n- Removed collateral pool topup functionality\n- Simplified enter/exit logic in collateral pool, so that FAsset fees are transfered separately by payFAssetFeeDebt and withdrawPoolFees\n- Each main operation in collateral pool now emits own event\n- Removed special support for WNat as vault collateral\n- All NAT transfers from asset manager (e.g. paying executor) are WNat deposits to avoid reenetrancy and DOS issues (the exception is returning overpaid fee to msg.sender, but that is strictly done at the end of methods)\n- Removed token tracking in agent vault; instead tokens can be withdrawn from agent vault after destroy\n- Bulk of the external code has been moved to the facets (previously the facets just delegated to the library methods). The libraries now only contain internal reusable code.\n- Removed FTSOv1 support.\n- Removed minUnderlyingBackingBIPS, now the backing must always be 100%.\n- Removed waiting time for underlying withdrawal confirmation (it was supposed to solve an issue that was better solved with withdrawal id randomization)\n- Instead of deleting storage structures at the end of lifetime, just mark them as deleted (for agents, collateral reservations, redemption requests)\n- Removed EOA ownership proofs - they were obsoleted by EIP-7702 and we officially don't support smart contract chains now.\n- Removed terminate and agent buyback functionality - replaced by allowing agents to transfer all their backing to the core vault when the FAsset is winding down.\n- Refactored Agents library into several libraries.\n- To keep the storage compatible with the deployed contracts on Songbird (to enable upgrade by diamond cut), the variables not needed anymore have remained, but we have prefixed them with __.\n- ##Code organization\n- Use custom errors in reverts instead of error strings.\n- Major contracts grouped with related files in their own directories.\n- No more '*' imports.\n\n**Where do you suspect there may be bugs and/or what attack vectors are you most concerned about?**\n\nThose interacting with new Core Vault features.\n\n**What ERC20 / ERC721 / ERC777 / ERC1155 token standards are supported?**\n\nWe use only ERC20 for our FAsset implementation\n\n**What addresses would you consider any bug report requiring their involvement to be out of scope, as long as they operate within the privileges attributed to them?**\n\ngovernance, core vault multisig\n\n**What addresses would you consider any bug report requiring their involvement be out of scope, even if they exceed the privileges attributed to them?**\n\ngovernance (hard to exceed the privileges, as they can update the contracts)\n\n**Which chains and/or networks will the code in scope be deployed to?**\n\nCoston (testnet), Coston2 (testnet), Songbird, Flare\n\n**What external dependencies are there?**\n\nFDC (Flare Data Connector), FTSO-V2 (Flare Time Series Oracle)\n\n**What are the most valuable educational resources already available? (Ie. Documentation, Explainer videos or articles, etc)**\n\n- For concept-level understanding, visit the Flare Developer Hub https://dev.flare.network/fassets/overview \n- For technical details:\n    - Refer to the inline code documentation directly in the repository.\n    - As an example, you can explore the Redemption function implementation in RedemptionRequestsFacet.sol https://github.com/flare-labs-ltd/fassets/blob/main/contracts/assetManager/facets/RedemptionRequestsFacet.sol#L33\n\n**Previous Audits**\n- Flare Network’s completed audit reports can be found at https://dev.flare.network/support/audits/. Unfixed vulnerabilities  mentioned in these reports are not eligible for a reward.\n- Flare FAssets Mainnet Audit Competition Reports are available at https://reports.immunefi.com/flare-fassets",
      "immunefiStandard": true,
      "tags": {
        "general": [
          "Immunefi Standard",
          "KYC Not Required",
          "PoC Not Required",
          "Step-by-step PoC Required"
        ],
        "productType": [],
        "projectType": [],
        "ecosystem": [],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ],
        "featured": [
          "Launched Recently"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Portion of Reward Pool"
          },
          {
            "level": "High",
            "payout": "Portion of Reward Pool"
          },
          {
            "level": "Medium",
            "payout": "Portion of Reward Pool"
          },
          {
            "level": "Low",
            "payout": "Portion of Reward Pool"
          }
        ],
        "web_rewards": []
      },
      "evaluationEndDate": "2025-10-24T16:10:00.000Z",
      "boostedIntroStartingIn": "**$25,000 USD** in rewards available for finding bugs in the fixes from the <a href=\"https://immunefi.com/audit-competition/audit-comp-flare-fassets/information\" target=\"_blank\" rel=\"noopener noreferrer\">Flare Fassets Mainnet Audit Competition</a>\n\nFor more information, please visit [Flare Network](https://flare.network/)\n\n- KYC is not required.\n\n- Flat Reward Pool \n\n- Any technical questions and support requests can be asked directly to Flare Network or Immunefi in the [Flare Network Audit Competition Discord channel](https://discord.com/channels/787092485969150012/1369326485659189259).\n\n- When the Audit Competition has ended, Immunefi will publish an event-specific leaderboard and bug reports from the event.\n\n- **Runnable POCs are required**. Read our [Proof-of-Concept Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n\n- Insight reports can be submitted. Read our [Insight validity rules](https://immunefisupport.zendesk.com/hc/en-us/articles/34179768760337-Insight-Severity-Level)",
      "boostedIntroLive": "**$25,000 USD** in rewards available for finding bugs in the fixes from the [Flare Fassets Mainnet Audit Competition](https://immunefi.com/audit-competition/audit-comp-flare-fassets/leaderboard/#top)\n\nFor more information, please visit [Flare Network](https://flare.network/)\n\n- KYC is not required.\n\n- Flat Reward Pool \n\n- Any technical questions and support requests can be asked directly to Flare Network or Immunefi in the [Flare Network Audit Competition Discord channel](https://discord.com/channels/787092485969150012/1369326485659189259).\n\n- When the Audit Competition has ended, Immunefi will publish an event-specific leaderboard and bug reports from the event.\n\n- **Runnable POCs are required**. Read our [Proof-of-Concept Rules](https://immunefisupport.zendesk.com/hc/en-us/articles/9946217628561-Proof-of-Concept-PoC-Guidelines-and-Rules)\n\n- Insight reports can be submitted. Read our [Insight validity rules](https://immunefisupport.zendesk.com/hc/en-us/articles/34179768760337-Insight-Severity-Level)",
      "boostedIntroEvaluating": "**Thank You to All Participating Security Researchers!**\n\nThe audit competition has now concluded and is currently in the evaluation phase. During this period, all submitted reports are being carefully reviewed by the Immunefi triage team and the project team.",
      "boostedIntroFinished": "### Thank You to All Participating Security Researchers!\n\nYour valuable contributions played a crucial role in identifying and resolving critical vulnerabilities, helping to strengthen and secure the platform for all users.",
      "rewardsToken": "USDC",
      "rewardsPool": 25000,
      "primaryPool": 17500,
      "allStarsPool": 5000,
      "podiumPool": 2500,
      "sourceLinesOfCode": 50,
      "boostedSummaryReport": null,
      "inviteOnly": false,
      "hideAssetsInScope": null,
      "boostedLeaderboard": [],
      "features": [
        "Boost",
        "Vault",
        "Managed Triage: Signal Booster"
      ],
      "academyStartDate": null,
      "websiteUrl": "https://flare.network/",
      "description": "Flare is the blockchain for data. It is a layer-1, EVM smart contract platform designed to expand the utility of blockchain by delivering data certainty for dApp builders. \n\nFAssets is a trustless, over-collateralized bridge built on Flare that connects non smart contract networks to Flare/Songbird. It enables the creation of wrapped tokens (FAssets) for assets like BTC, DOGE and XRP. \n\n\nAt the core of FAssets v1.1 is a new architecture component called the **Core Vault**, designed to improve system liquidity, scalability, and capital efficiency.",
      "githubUrl": "https://github.com/flare-foundation/fassets",
      "feasibilityLimitations": null,
      "prohibitedActivites": null,
      "responsiblePublicationCategory": null,
      "knownIssues": [
        {
          "id": 76,
          "description": "Triggering instructions might run out of gas: the size of the allowed destination addresses will be low (5-10).",
          "link": "https://reports.immunefi.com/flare-fassets/",
          "lastUpdatedAt": "2025-09-16T00:00:00.000Z",
          "relatedImpactInScope": "smart_contract"
        },
        {
          "id": 75,
          "description": "Array of escrows always grows: the number of escrows created will be low (if it is more than one or two, we will increase the daily escrow amount). So the total number of escrows will not be huge, perhaps a few hundred.",
          "link": "https://reports.immunefi.com/flare-fassets/",
          "lastUpdatedAt": "2025-09-16T00:00:00.000Z",
          "relatedImpactInScope": "smart_contract"
        },
        {
          "id": 74,
          "description": "Escrows finalized close to expiry time decouple the Core Vault internal accountancy: before escrows are released, the triggering bots will be shut down, and they will only be enabled after setEscrowsFinished is called. So there will be no instructions triggered between escrow finalization and the corresponding update on the core vault manager.",
          "link": "https://reports.immunefi.com/flare-fassets/",
          "lastUpdatedAt": "2025-09-16T00:00:00.000Z",
          "relatedImpactInScope": "smart_contract"
        },
        {
          "id": 73,
          "description": "Users are unprotected against missing or malformed vault redemption payments: in that case, we assume the core vault has full trust, and its redemptions don't have a time limit. Also, core-vault redeemers are special entities.",
          "link": "https://reports.immunefi.com/flare-fassets/",
          "lastUpdatedAt": "2025-09-16T00:00:00.000Z",
          "relatedImpactInScope": "smart_contract"
        }
      ],
      "knownIssueAssurance": false,
      "defaultOutOfScopeBlockchain": null,
      "defaultOutOfScopeSmartContract": "- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Impacts requiring basic economic and governance attacks (e.g. 51% attack)\n- Lack of liquidity impacts\n- Impacts from Sybil attacks\n- Impacts involving centralization risks",
      "defaultOutOfScopeGeneral": "- Impacts requiring attacks that the reporter has already exploited themselves, leading to damage\n- Impacts caused by attacks requiring access to leaked keys/credentials\n- Impacts caused by attacks requiring access to privileged addresses (including, but not limited to: governance and strategist contracts) without additional modifications to the privileges attributed\n- Impacts relying on attacks involving the depegging of an external stablecoin where the attacker does not directly cause the depegging due to a bug in code\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github will be considered out of scope without proof that they are in-use in production\n- Best practice recommendations\n- Feature requests\n- Impacts on test files and configuration files unless stated otherwise in the bug bounty program\n- Impacts requiring phishing or other social engineering attacks against project's employees and/or customers",
      "defaultOutOfScopeWebAndApplications": null,
      "defaultProhibitedActivities": "- Any testing on mainnet or public testnet deployed code; all testing should be done on local-forks of either public testnet or mainnet\n- Any testing with pricing oracles or third-party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks that are executed against project assets\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- [Any other actions prohibited by the Immunefi Rules](https://immunefi.com/rules/)",
      "defaultFeasibilityLimitations": "The project may be receiving reports that are valid (the bug and attack vector are real) and cite assets and impacts that are in scope, but there may be obstacles or barriers to executing the attack in the real world. In other words, there is a question about how feasible the attack really is. Conversely, there may also be mitigation measures that projects can take to prevent the impact of the bug, which are not feasible or would require unconventional action and hence, should not be used as reasons for downgrading a bug's severity.\n\nTherefore, Immunefi has developed a set of feasibility limitation standards which by default states what security researchers, as well as projects, can or cannot cite when reviewing a bug report.\n- [Chain Rollbacks](https://immunefisupport.zendesk.com/hc/en-us/articles/16913153448721-Chain-Rollbacks)\n- [Pre-Impact Bug Monitoring](https://immunefisupport.zendesk.com/hc/en-us/articles/19430444320401-Pre-Impact-Bug-Monitoring)\n- [Attack Investment Amount](https://immunefisupport.zendesk.com/hc/en-us/articles/17243068885265-Attack-Investment-Amount)\n- [Attacks With A Financial Risk To The Attacker](https://immunefisupport.zendesk.com/hc/en-us/articles/17454897136401-Attacks-With-A-Financial-Risk-To-The-Attacker)\n- [When Is An Impactful Attack Downgraded To Griefing?](https://immunefisupport.zendesk.com/hc/en-us/articles/17455102268305-When-Is-An-Impactful-Attack-Downgraded-To-Griefing)",
      "customOutOfScopeInformation": null,
      "customProhibitedActivities": [],
      "rewardsTokenNetwork": "Ethereum",
      "eligibilityCriteria": [],
      "eligibilityCriteriaAdditionalInformation": null,
      "programCodebases": [],
      "programDocumentations": [
        {
          "id": 297,
          "title": "Flare Developer Hub",
          "description": "Flare Developer Hub",
          "url": "https://dev.flare.network/fassets/overview"
        }
      ],
      "primacy": "primacy_of_rules",
      "newProgramRewardsEnabled": false,
      "findingsUrl": null,
      "premiumTriaging": true
    },
    "layoutProps": {
      "headerMarginBottom": "mb-12 lg:mb-16"
    },
    "metaData": {
      "title": "Mitigation Audit | Flare | FAssets Bug Bounties",
      "description": "Find bugs and vulnerabilities on Mitigation Audit | Flare | FAssets and get paid up to $25,000.",
      "url": "https://immunefi.com/audit-competition/flare-fassets--mitigation-audit/",
      "ogImg": "/api/bounty/og-image/?project=Mitigation+Audit+%7C+Flare+%7C+FAssets&slug=flare-fassets--mitigation-audit"
    }
  },
  "__N_SSG": true
}
