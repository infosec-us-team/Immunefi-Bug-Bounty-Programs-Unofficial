{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "tenderize",
      "slug": "tenderize",
      "project": "Tenderize",
      "maxBounty": 40000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5D9KLgszbiJ7lNQQkdh4sj/982ec4ca8341050c3d00bff61a932087/Screenshot_2023-01-16_at_9.05.16_AM_copy.jpg",
      "launchDate": "2023-01-16T09:00-05:00",
      "updatedDate": "2023-02-16T17:07:36.107Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $40,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $15,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "kJDeVcTVVm9EExgKXPiER",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5542b58080FEE48dBE6f38ec0135cE9011519d96",
          "description": "Tenderize Governance Multisig"
        },
        {
          "id": "2LMFxR0bCYAGsI8OZlbf9k",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2c2f492FAe8BD9fA1F68A3278Db767BF75A7D221",
          "description": "Registry"
        },
        {
          "id": "10pBaJOG8RE4uIY5LRAEHg",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x64Cc4DaE4972Ce88d6d9722c25C67f8f85acDa6d",
          "description": "TenderFarmFactory"
        },
        {
          "id": "5oYYlQVReLS29qs6BN6Y3n",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x98DAf5786d8bFD524620CBeeBa25C9B4b5015F52",
          "description": "TenderSwapFactoryV1"
        },
        {
          "id": "7bDeNeYFt80y275mX5sMpO",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x76B4D068BE84B58172904736430B76d50383d4CC",
          "description": "TenderToken"
        },
        {
          "id": "5WIAswvibjKGDatPLih3Lz",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3d53d5b6e0e9f2A7e3D9Cf229E32D1642F1B1933",
          "description": "TenderFarm"
        },
        {
          "id": "2p4OjyypxTVwacIwSAwdJo",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x30454F34392369428100d4CBd899bc1fcc9e6cF7",
          "description": "TenderSwap"
        },
        {
          "id": "3EYUqj1Kly2FUXXmzbgzD2",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xD5F830AAeDdB1505f26E907b7953e505C97Aa837",
          "description": "SwapUtils"
        },
        {
          "id": "dTn534833R0N1yfs3xdG1",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x365bF54B92441D5D9834C8951e9B6B6b56751398",
          "description": "LiquidityPoolToken"
        },
        {
          "id": "1zZEMYx7kLLoMLsRxIzGul",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc944e90c64b2c07662a292be6244bdf05cda44a7",
          "description": "Graph Token (GRT)"
        },
        {
          "id": "2ZIPWKpGHu8H26pScx3r5H",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe66F3ab2f5621FE12ebf37754E1Af6d05b329A07",
          "description": "Tenderizer (Proxy)"
        },
        {
          "id": "63C8kNaFVJYecDeV5u570b",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xF56F61F8181d118c010Ca9c5f1e9e447e37B207e",
          "description": "TenderSwap"
        },
        {
          "id": "4tw2Uokpx0KOUXwS8PVLBh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xC29f5611DCd89bC5d3a19762783D3006BC2aD2Ac",
          "description": "TenderToken"
        },
        {
          "id": "4b80KtJsU9AxCuqIevkuZr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xAd93b1beF320fbbB9D1645dFAFc7550FC254F272",
          "description": "tGRT-GRT-SWAP Token"
        },
        {
          "id": "5F5x4D5K3JexqYt7z3KI1C",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xb27DC46D1aF96c998cFF05B99c081b54b19d4b6F",
          "description": "TenderFarm"
        },
        {
          "id": "2exvbTDOgSCGzAALKzXVhG",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0",
          "description": "Matic Token (MATIC)"
        },
        {
          "id": "3w00QtvSzmHt7Jepc5OQBw",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe07c344cB6a2Af8Fdf1d64c67D4C33a133fE7289",
          "description": "Tenderizer (Proxy)"
        },
        {
          "id": "3huPp1XSR48ZchqLRjd8Qu",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2336C10a1D3100343fA9911a2c57b77c333599A3",
          "description": "TenderToken"
        },
        {
          "id": "zZf8KQ6hXbCLyWRzuD2b2",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x23c24c1253C602106255B357cd3EFE260A3A469E",
          "description": "TenderSwap"
        },
        {
          "id": "60m5aUVgCMpaaQyFxLU9ig",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa4B13F5cd779A3DA03a346A315b544255C862041",
          "description": "tMATIC-MATIC-SWAP Token"
        },
        {
          "id": "3bbi9zVllbAHGnUDST0c17",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x128CF6729975D8aD2B9Dc0ac0a093066687acDfD",
          "description": "TenderFarm"
        },
        {
          "id": "5Ke3AozMoPt38dDEvinZGX",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x18aaa7115705e8be94bffebde57af9bfc265b998",
          "description": "Audius Token (AUDIO)"
        },
        {
          "id": "73sshxuVPLoKLaTEQV5Jk9",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x50DCE4ca01C15188105971339c39DA49C2A0c249",
          "description": "Tenderizer (Proxy)"
        },
        {
          "id": "7568QBnae6Bac1UhuzBn3o",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xc83bAdBF764F957aCc23Bc9E9aAC71c298B07243",
          "description": "TenderToken"
        },
        {
          "id": "2b6FIoyupXXev0fPwovOkv",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7de47d1C5b9415877FE6863263F97180117fDaaa",
          "description": "TenderSwap"
        },
        {
          "id": "5ms9k9g3SPpiGJAfd7hrAv",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x531725C57f266743C06E1935a52D6FF84e547DB0",
          "description": "tAUDIO-AUDIO-SWAP Token"
        },
        {
          "id": "2jrjGKlit7bvDaCxZAnJQh",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x82Dd465436196D8637bDD0Aa4eb6D074325935f2",
          "description": "TenderFarm"
        },
        {
          "id": "7BcbikM69nPc2hWkDDUoM3",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xc1cFab553835D74717c4499793EEa6Ef198A3031",
          "description": "Tenderize Governance Multisig"
        },
        {
          "id": "6KJHvMKmTGRue1ehFeBRSP",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x87998e0aC7a75f7bac1d5738C997700b0842a42e",
          "description": "Registry"
        },
        {
          "id": "2sKzvSrJEj68dm0VLo35zk",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xDA76172b5c46060b80650324168d67028A2136C3",
          "description": "TenderFarmFactory"
        },
        {
          "id": "0zLuf7fuLqUd5frpJuHdH",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x20B817eBe4520d9E65814b835BAb55BFDFb4C46c",
          "description": "TenderSwapFactoryV1"
        },
        {
          "id": "dT05JMGmvWgD0MQgGuMRD",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x810D161B5f80f493C920FC81d3dE6e340cCAd6ac",
          "description": "TenderToken"
        },
        {
          "id": "nWQTXIg24SkKGQK7f9gM9",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xB96652CFbeF04a0da12d03D58e69839B0faAe02D",
          "description": "TenderFarm"
        },
        {
          "id": "6SbDKlzI2ItsmIvzK8eiSG",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x64978587732A670A76a656ef2EAcb681EaE90C71",
          "description": "TenderSwap"
        },
        {
          "id": "tge8JWwHfICzKQzDccVyi",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x8d885fD705517AFC4E7C03FF66b5621de02AEbc5",
          "description": "SwapUtils"
        },
        {
          "id": "4qBP6NCTsmyPjUu8kgsn1z",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xb6e666aFCc6A75acadAfAF09c5669019E97cc15F",
          "description": "LiquidityPoolToken"
        },
        {
          "id": "l1GjcXirXtRxAFnKWgQxE",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x289ba1701C2F088cf0faf8B3705246331cB8A839",
          "description": "Livepeer Token (LPT)"
        },
        {
          "id": "39ciLTOLAPJPslti0OEwNE",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x339efC059C6D4Aa50a41F8246a017B57Aa477b60",
          "description": "Tenderizer (Proxy)"
        },
        {
          "id": "539m39dA7kYRT9mPpkNm93",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xfaC38532829fDD744373fdcd4708Ab90fA0c4078",
          "description": "TenderToken"
        },
        {
          "id": "Ug4TPIov1zKwpRqzyd2xu",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x2429fC7082eb517C14946b392b195B181D0b9781",
          "description": "TenderSwap"
        },
        {
          "id": "Nzj1pVftBgZu99wfcLgGx",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x6cAbc6e78c1D632b6210EaB71c19889b92376931",
          "description": "tLPT-LPT-SWAP Token"
        },
        {
          "id": "62TPvjorROd76SSVRoKAg6",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x3FE01e8b62a8E17F296Eb3832504C3D3A49f2209",
          "description": "TenderFarm"
        }
      ],
      "impacts": [
        {
          "id": "55gI4mklANKcCdWr3vJJxa",
          "title": "Direct theft of any user funds, whether at rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1cdxC2GsWY6s3k3YgJ4DmK",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "668icoDCO3cYqWm75VnXPh",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5123EK8hwBkgp4JWdaXgPt",
          "title": "Unexpected calls to functions that should only be callable by authorized parties",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "33ggQ2clRuHLjM1cselvNr",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "1GOX5oYKGD7fPUlA37hoNI",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6bPHDlCv0GjNqqHdg9OThu",
          "title": "Temporary freezing of funds for at least 24 hours",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3w0StkoDCiQmcZ2gJtQv1U",
          "title": "Temporary freezing of unclaimed yield for at least 24 hours",
          "type": "smart_contract",
          "severity": "high"
        }
      ],
      "programOverview": "Tenderize is a liquid staking protocol that connects web3 infrastructure protocols and their economics with DeFi. Easily earn rewards on your staked assets without lockups and use them across the DeFi ecosystem.\n\nFor more information about Tenderize, please visit [https://www.tenderize.me](https://www.tenderize.me/)/.  \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the  [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nKnown issues highlighted in the following audit reports are considered out of scope: \n- [https://hacken.io/wp-content/uploads/2022/04/Tenderize_22042022_SCAudit_Report2.pdf](https://hacken.io/wp-content/uploads/2022/04/Tenderize_22042022_SCAudit_Report2.pdf) \n\nTenderize requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward.The information required is a National ID scan, a selfie and a scan of a utility bill for proof of residency. \n\nPayouts are handled by the __Tenderize__ team directly and are denominated in USD. However, payouts are done in __ETH, USDC, LPT, GRT, AUDIO__ or __MATIC__, at the discretion of the team.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n   - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target.\n\nAll smart contracts of Tenderize can be found at [https://github.com/Tenderize/tender-core](https://github.com/Tenderize/tender-core). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Staking"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $40,000"
          },
          {
            "level": "High",
            "payout": "USD $15,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Tenderize is a liquid staking protocol that connects web3 infrastructure protocols and their economics with DeFi. Easily earn rewards on your staked assets without lockups and use them across the DeFi ecosystem.\"), mdx(\"p\", null, \"For more information about Tenderize, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.tenderize.me/\"\n  }, \"https://www.tenderize.me\"), \"/.  \"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Tenderize is a liquid staking protocol that connects web3 infrastructure protocols and their economics with DeFi. Easily earn rewards on your staked assets without lockups and use them across the DeFi ecosystem.</p><p>For more information about Tenderize, please visit <a href=\"https://www.tenderize.me/\">https://www.tenderize.me</a>/.  </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.</p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \"), mdx(\"p\", null, \"All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"Known issues highlighted in the following audit reports are considered out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://hacken.io/wp-content/uploads/2022/04/Tenderize_22042022_SCAudit_Report2.pdf\"\n  }, \"https://hacken.io/wp-content/uploads/2022/04/Tenderize_22042022_SCAudit_Report2.pdf\"), \" \")), mdx(\"p\", null, \"Tenderize requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward.The information required is a National ID scan, a selfie and a scan of a utility bill for proof of residency. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tenderize\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ETH, USDC, LPT, GRT, AUDIO\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MATIC\"), \", at the discretion of the team.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the  <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. </p><p>All bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>Known issues highlighted in the following audit reports are considered out of scope: </p><ul><li><a href=\"https://hacken.io/wp-content/uploads/2022/04/Tenderize_22042022_SCAudit_Report2.pdf\">https://hacken.io/wp-content/uploads/2022/04/Tenderize_22042022_SCAudit_Report2.pdf</a> </li></ul><p>Tenderize requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward.The information required is a National ID scan, a selfie and a scan of a utility bill for proof of residency. </p><p>Payouts are handled by the <strong>Tenderize</strong> team directly and are denominated in USD. However, payouts are done in <strong>ETH, USDC, LPT, GRT, AUDIO</strong> or <strong>MATIC</strong>, at the discretion of the team.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target.\"), mdx(\"p\", null, \"All smart contracts of Tenderize can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Tenderize/tender-core\"\n  }, \"https://github.com/Tenderize/tender-core\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target.</p><p>All smart contracts of Tenderize can be found at <a href=\"https://github.com/Tenderize/tender-core\">https://github.com/Tenderize/tender-core</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
