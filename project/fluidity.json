{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "fluidity",
      "slug": "fluidity",
      "project": "Fluidity",
      "maxBounty": 50000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7dmZhUgUcWaLwOwJ3PB2JG/84b21a875473fc7dd3375136a8c600e3/Fluidity_logo.jpeg",
      "launchDate": "2022-12-23T10:30-05:00",
      "updatedDate": "2023-06-08T15:52:45.041Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $50,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "Up to USD $15,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "Up to USD $10,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "Up to USD $5,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "4mHloonxMzUQN6ooMZWW1B",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9d1089802eE608BA84C5c98211afE5f37F96B36C",
          "description": "Token https://github.com/fluidity-money/fluidity-app/blob/production/contracts/ethereum/contracts/Token.sol"
        },
        {
          "id": "7fbTiVwwiBQiRydpBiO1TD",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xE87Adc9D382Eee54C1eDE017D6E5C1324D59F457",
          "description": "CompoundLiquidityProvider https://github.com/fluidity-money/fluidity-app/blob/production/contracts/ethereum/contracts/CompoundLiquidityProvider.sol"
        },
        {
          "id": "3jkPFECDrz4cPLLypqgiVL",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x28EE3aCA2DAA47a7585C5c579dBb0998C08f845d",
          "description": "Registry https://github.com/fluidity-money/fluidity-app/blob/production/contracts/ethereum/contracts/Registry.sol"
        },
        {
          "id": "2yFC2Z3B5y13QNMA0bo4O1",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xBdC05dE358bA65720f5cc74BBc615C029220C67D",
          "description": "Executor https://github.com/fluidity-money/fluidity-app/blob/production/contracts/ethereum/contracts/Executor.sol"
        },
        {
          "id": "24BUMnt3R9SyT2bAipN09I",
          "type": "smart_contract",
          "url": "https://github.com/fluidity-money/fluidity-app/blob/production/contracts/ethereum/contracts/ConvertorEthToToken.sol",
          "description": "ConvertorEthToToken.sol "
        },
        {
          "id": "4xZB8MD4cvV6FZMySRCkR",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0xEB6057AE11BE83fFE0a3C191a41D67728938886B",
          "description": "DefaultWorkerOverrideUtilityClient.sol https://github.com/fluidity-money/fluidity-app/blob/production/contracts/ethereum/contracts/DefaultWorkerOverrideUtilityClient.sol"
        },
        {
          "id": "6f4zjbGAb05cWKsTUyeiI9",
          "type": "smart_contract",
          "url": "https://github.com/fluidity-money/fluidity-app/blob/production/contracts/ethereum/contracts/GovToken.sol",
          "description": "GovToken.sol "
        },
        {
          "id": "685NmvdOBECFDAJ4v039F8",
          "type": "smart_contract",
          "url": "https://github.com/fluidity-money/fluidity-app/blob/production/contracts/ethereum/contracts/LootboxConfirmAddressOwnership.sol",
          "description": "LootboxConfirmAddressOwnership.sol "
        },
        {
          "id": "2TsQF6brf8MnEXN0V1jBtd",
          "type": "smart_contract",
          "url": "https://github.com/fluidity-money/fluidity-app/blob/production/contracts/ethereum/contracts/UtilityGauges.sol",
          "description": "UtilityGauges.sol "
        }
      ],
      "impacts": [
        {
          "id": "4o42UOIMo22DhgN166iY7c",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4PVaPSCsBvrxokT4bayHyi",
          "title": "Predictable or manipulable RNG that results in winnings won incorrectly relative to fees paid",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "IlQIIku98xBtHUmfomhgI",
          "title": "Protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "2WdV9eBbCvOqfkwkhlqhEe",
          "title": "Unauthorized access/generation of spooled/batched rewards",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "S7m9wKiHZB1FjwlaDAAXx",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2zQUE8dlinqkor447WBZKN",
          "title": "Abuse of block-building mechanics/mempool to unfairly increase payouts",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "6n5wea3OjJU2vBBXjhdkao",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "2YljfmMDI2uYQi7Cum6TpB",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "42HjjuAEUBe69Fs0w04N0A",
          "title": "Freezing of rewards",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5RjKQLtstmn62amMjfJ0mx",
          "title": "Smart contract fails to deliver promised returns, but doesnâ€™t lose value",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Fluidity Money is a composable defi primitive that rewards users for deriving utility from their assets. Fluid Assets are a 1-to-1 wrapped asset that exposes holders to randomly paid rewards when they use their cryptocurrencies. Rewards are paid out according to a drawing mechanism held on each transaction of their Fluid Assets. These rewards are generated by the cumulative yield generated by the underlying asset, which is deposited and lent on money markets.\n\nFor more information about Fluidity, please visit [https://fluidity.money/](https://fluidity.money/).  \n",
      "prioritizedVulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. ",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the  [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\n  - __Critical Smart contract reward is up to__ 10% of total funds at risk or $50,000 USD (whatever is lower).\n  - __High Smart Contract reward is up to__ 5% of total funds at risk or $15,000 USD (whatever is lower).\n  - __Medium Smart Contract reward is up to__ 2.5% of total funds at risk or $10,000 USD (whatever is lower)\n  - __Low Smart Contract reward is up to__ 1% of total funds at risk or $5,000 USD (whatever is lower)\n\nAll Smart Contracts bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nThe following vulnerabilities are not eligible for a reward:\n- [Bramah systems security review](https://drive.google.com/file/d/1SVdyt2Ig9K9QjbixM1aVFEcZ8w-xdjGl/view?usp=share_link)\n- [Hashlock security review](https://drive.google.com/file/d/1-6hw3AZqJ_8LjpGKI1KydVuvKlEaKYyr/view?usp=share_link)\n- [Verilog security review](https://drive.google.com/file/d/1ha-uVt45T5TICdFD2a_UkYqTWpjaDU7b/view?usp=share_link)\n\n__KYC__\nThe following identifying information will be required to satisfy KYC requirement:\n  - Passport to verify nationality\n  - IP address\n  - Name\n  - Address\n\nPayouts are handled by the __Fluidity__ team directly and are denominated in USD. However, payouts are done in __USDC__. Rewards in the high and critical tier are paid in installments, 20% paid immediately upfront. The remaining of the high and critical payments are paid monthly until paid fully.\n",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n",
      "assetsBodyV2": "All smart contracts of Fluidity can be found at [https://github.com/fluidity-money/fluidity-app](https://github.com/fluidity-money/fluidity-app). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. â€‹â€‹\n\nThough only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. \n\nIf an impact can be caused to any other asset managed by Fluidity that isnâ€™t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to issues with their yield providers (Compound/AAVE/Solend) that affect Fluidity. \n",
      "impactsBody": "Any impacts in scope that are smart contract-centric may include issues found in our infrastructure (worker) codebase.",
      "immunefiStandard": true,
      "tags": {
        "productType": null,
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": null
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $50,000"
          },
          {
            "level": "High",
            "payout": "Up to USD $15,000"
          },
          {
            "level": "Medium",
            "payout": "Up to USD $10,000"
          },
          {
            "level": "Low",
            "payout": "Up to USD $5,000"
          }
        ],
        "web_rewards": []
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Fluidity Money is a composable defi primitive that rewards users for deriving utility from their assets. Fluid Assets are a 1-to-1 wrapped asset that exposes holders to randomly paid rewards when they use their cryptocurrencies. Rewards are paid out according to a drawing mechanism held on each transaction of their Fluid Assets. These rewards are generated by the cumulative yield generated by the underlying asset, which is deposited and lent on money markets.\"), mdx(\"p\", null, \"For more information about Fluidity, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fluidity.money/\"\n  }, \"https://fluidity.money/\"), \".  \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Fluidity Money is a composable defi primitive that rewards users for deriving utility from their assets. Fluid Assets are a 1-to-1 wrapped asset that exposes holders to randomly paid rewards when they use their cryptocurrencies. Rewards are paid out according to a drawing mechanism held on each transaction of their Fluid Assets. These rewards are generated by the cumulative yield generated by the underlying asset, which is deposited and lent on money markets.</p><p>For more information about Fluidity, please visit <a href=\"https://fluidity.money/\">https://fluidity.money/</a>.  </p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table. </p>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Critical Smart contract reward is up to\"), \" 10% of total funds at risk or $50,000 USD (whatever is lower).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"High Smart Contract reward is up to\"), \" 5% of total funds at risk or $15,000 USD (whatever is lower).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Medium Smart Contract reward is up to\"), \" 2.5% of total funds at risk or $10,000 USD (whatever is lower)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Low Smart Contract reward is up to\"), \" 1% of total funds at risk or $5,000 USD (whatever is lower)\")), mdx(\"p\", null, \"All Smart Contracts bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\"), mdx(\"p\", null, \"The following vulnerabilities are not eligible for a reward:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/1SVdyt2Ig9K9QjbixM1aVFEcZ8w-xdjGl/view?usp=share_link\"\n  }, \"Bramah systems security review\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/1-6hw3AZqJ_8LjpGKI1KydVuvKlEaKYyr/view?usp=share_link\"\n  }, \"Hashlock security review\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/1ha-uVt45T5TICdFD2a_UkYqTWpjaDU7b/view?usp=share_link\"\n  }, \"Verilog security review\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"KYC\"), \"\\nThe following identifying information will be required to satisfy KYC requirement:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Passport to verify nationality\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"IP address\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Name\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Address\")), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Fluidity\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USDC\"), \". Rewards in the high and critical tier are paid in installments, 20% paid immediately upfront. The remaining of the high and critical payments are paid monthly until paid fully.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the  <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. </p><ul><li><strong>Critical Smart contract reward is up to</strong> 10% of total funds at risk or $50,000 USD (whatever is lower).</li><li><strong>High Smart Contract reward is up to</strong> 5% of total funds at risk or $15,000 USD (whatever is lower).</li><li><strong>Medium Smart Contract reward is up to</strong> 2.5% of total funds at risk or $10,000 USD (whatever is lower)</li><li><strong>Low Smart Contract reward is up to</strong> 1% of total funds at risk or $5,000 USD (whatever is lower)</li></ul><p>All Smart Contracts bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.</p><p>The following vulnerabilities are not eligible for a reward:</p><ul><li><a href=\"https://drive.google.com/file/d/1SVdyt2Ig9K9QjbixM1aVFEcZ8w-xdjGl/view?usp=share_link\">Bramah systems security review</a></li><li><a href=\"https://drive.google.com/file/d/1-6hw3AZqJ_8LjpGKI1KydVuvKlEaKYyr/view?usp=share_link\">Hashlock security review</a></li><li><a href=\"https://drive.google.com/file/d/1ha-uVt45T5TICdFD2a_UkYqTWpjaDU7b/view?usp=share_link\">Verilog security review</a></li></ul><p><strong>KYC</strong>\nThe following identifying information will be required to satisfy KYC requirement:</p><ul><li>Passport to verify nationality</li><li>IP address</li><li>Name</li><li>Address</li></ul><p>Payouts are handled by the <strong>Fluidity</strong> team directly and are denominated in USD. However, payouts are done in <strong>USDC</strong>. Rewards in the high and critical tier are paid in installments, 20% paid immediately upfront. The remaining of the high and critical payments are paid monthly until paid fully.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Centralization risks\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li><li>Centralization risks</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All smart contracts of Fluidity can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/fluidity-money/fluidity-app\"\n  }, \"https://github.com/fluidity-money/fluidity-app\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \\u200B\\u200B\"), mdx(\"p\", null, \"Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. \"), mdx(\"p\", null, \"If an impact can be caused to any other asset managed by Fluidity that isn\\u2019t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to issues with their yield providers (Compound/AAVE/Solend) that affect Fluidity. \"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>All smart contracts of Fluidity can be found at <a href=\"https://github.com/fluidity-money/fluidity-app\">https://github.com/fluidity-money/fluidity-app</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. â€‹â€‹</p><p>Though only the proxy contracts are listed as in-scope, current implementation and any further updates to the implementation contracts are considered in scope. When reporting a bug, please make sure to select the relevant proxy smart contract as the target. </p><p>If an impact can be caused to any other asset managed by Fluidity that isnâ€™t on this table but for which the impact is in the Impacts in Scope section below, you are encouraged to submit it for the consideration by the project. This only applies to issues with their yield providers (Compound/AAVE/Solend) that affect Fluidity. </p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Any impacts in scope that are smart contract-centric may include issues found in our infrastructure (worker) codebase.\"));\n}\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Any impacts in scope that are smart contract-centric may include issues found in our infrastructure (worker) codebase.</p>",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
