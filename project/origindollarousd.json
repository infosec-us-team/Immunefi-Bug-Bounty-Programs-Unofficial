{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "origindollarousd",
      "slug": "origindollarousd",
      "project": "Origin Dollar (OUSD)",
      "maxBounty": 250000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/vnibB6fbR7hfXGN73S247/1f539c58b51eb6aedfb6cab8b17b8c82/Origin_Dollar_Logo__1_.jpeg",
      "launchDate": "2021-11-22T01:15-06:00",
      "updatedDate": "2023-05-09T15:45:12.776Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $250,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $25,000",
          "pocRequired": true
        },
        {
          "assetType": "websites_and_applications",
          "level": "critical",
          "payout": "USD $25,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "ox38hMUV4qMzBkGNsNs7F",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x2A8e1E676Ec238d8A992307B495b45B3fEAa5e86",
          "description": "OUSD"
        },
        {
          "id": "3E5FfMOmZpS4Wc3mJdnV9n",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xe75d77b1865ae93c7eaa3040b038d7aa7bc02f70",
          "description": "Vault"
        },
        {
          "id": "3YHzJCLbbYQQwnu7eCZHF4",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xa7695eED05094E28AA575CB0cCa3CF17848a7981",
          "description": "Oracle Router"
        },
        {
          "id": "RTcE363oMeSHOudPI9cQr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5e3646A1Db86993f73E6b74A57D8640B69F7e259",
          "description": "Aave Strategy"
        },
        {
          "id": "5abd8HMQpbPINqSvePosP4",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9c459eeb3FA179a40329b81C1635525e9A0Ef094",
          "description": "Compound Strategy"
        },
        {
          "id": "1ukSUUBOEM57jjtaK4LDYL",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xea2ef2e2e5a749d4a66b41db9ad85a38aa264cb3",
          "description": "Convex Strategy"
        },
        {
          "id": "HCsqI6bpUhndviXBNvYBF",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x89eb88fedc50fc77ae8a18aad1ca0ac27f777a90#code",
          "description": "Convex OUSD Metastrategy"
        },
        {
          "id": "62grkFnHgGFqiu3q7jg0Hb",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x5A4eEe58744D1430876d5cA93cAB5CcB763C037D",
          "description": "Morpho Strategy"
        },
        {
          "id": "7JTDxKivDN7R5OMlFJNPBk",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x9c354503c38481a7a7a51629142963f98ecc12d0",
          "description": "OGV"
        },
        {
          "id": "4n1vGh7jcZIfbtKpNJJyPj",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x0c4576ca1c365868e162554af8e385dc3e7c66d9",
          "description": "veOGV"
        },
        {
          "id": "6CB91aQWlskpwFnpgGNEQW",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x7d82e86cf1496f9485a8ea04012afeb3c7489397",
          "description": "OGV Inflation Controller"
        },
        {
          "id": "6sbeXi5HZhiyh6jMzmgexr",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x72426BA137DEC62657306b12B1E869d43FeC6eC7",
          "description": "Governor / Timelock"
        },
        {
          "id": "6Oqh9hZaeK2PiFHmzol7KC",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x77314EB392b2be47C014cde0706908b3307Ad6a9",
          "description": "OGN Buyback"
        },
        {
          "id": "4L7FpJeSR5va1IkzmCtAPK",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x501804B374EF06fa9C427476147ac09F1551B9A0",
          "description": "OGN Staking"
        },
        {
          "id": "5NTOzubKjCuk8dsnQ9FZS6",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xcecaD69d7D4Ed6D52eFcFA028aF8732F27e08F70",
          "description": "OUSD Swap"
        },
        {
          "id": "6raEdX4tNnOa6HN07ZniUd",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x21fb5812d70b3396880d30e90d9e5c1202266c89",
          "description": "Harvester"
        },
        {
          "id": "5ki5pKomHAvufed4W9RXRk",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x80c898ae5e56f888365e235ceb8cea3eb726cb58",
          "description": "Dripper"
        },
        {
          "id": "2UH4y4SDWYdI9TaE6ku9kI",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x856c4Efb76C1D1AE02e20CEB03A2A6a08b0b8dC3",
          "description": "OETH Token"
        },
        {
          "id": "5xvdatsC4cqGtVXyTh7n5K",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0xDcEe70654261AF21C44c093C300eD3Bb97b78192",
          "description": "wOETH Token"
        },
        {
          "id": "BjCXQnbwKSuyj84STj99U",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x39254033945AA2E4809Cc2977E7087BEE48bd7Ab",
          "description": "OETH Vault"
        },
        {
          "id": "PojWKrOrFbR2DHRMPciku",
          "type": "smart_contract",
          "url": "https://etherscan.io/address/0x3fF8654D633D4Ea0faE24c52Aec73B4A20D0d0e5",
          "description": "OETH Frax Staking Strategy"
        },
        {
          "id": "YohPfAcEEMQAVhmAuLqOS",
          "type": "websites_and_applications",
          "url": "https://www.ousd.com/",
          "description": null
        }
      ],
      "impacts": [
        {
          "id": "698vQ4twUCO638KBqs9NT8",
          "title": "Any governance voting result manipulation",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1j5MtWszQsAPVRAHQ0fXci",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6ogiKZLv3hicRocEMQipSB",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "7rYVVLeYkjhXvalnytL7k4",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "6Jvt8QTwjSA7wSlMOIpXBV",
          "title": "Ability to execute system commands",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "1VhZBr2WMcU8AeZb0BnrEo",
          "title": "Stealing User Cookies",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "7Aq9h2h2ipfFMTqv8IMEyM",
          "title": "Signing transactions for other users",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5OiAU2Dxp1PjSndtAcoZwy",
          "title": "Redirection of user deposits and withdrawals",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "39g5JJZ5mDFLGGJUoUnZmz",
          "title": "Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5S9gF4AIbc5aGmUMllYD9M",
          "title": "Wallet interaction modification resulting in financial loss",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5vVJonEmE812LMqYSK36QB",
          "title": "Direct theft of user funds",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "6S3P6RPiyBUan2kGqdrhSu",
          "title": "Tampering with transactions submitted to the user’s wallet",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "2Qa1Vk7MeRBvNHPxwcXNso",
          "title": "Submitting malicious transactions to an already-connected wallet",
          "type": "websites_and_applications",
          "severity": "critical"
        },
        {
          "id": "5zoLas2QoQYVoILTISTxRz",
          "title": "Spoofing content on the target application (Persistent)",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "3SAIZ2aNIsnREP3jlGOTUB",
          "title": "Users Confidential information disclosure such as Email",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "2QkRZJ3mpyLuusGdU6MyPn",
          "title": "Privilege escalation to access unauthorized functionalities",
          "type": "websites_and_applications",
          "severity": "high"
        },
        {
          "id": "5WmzMvieQ6WsVKS1WNBXJz",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "4EC2hcemEJyHyZoWZTQw7P",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3h1wFMU4yrsRWUmmCfg3GU",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        }
      ],
      "programOverview": "Created by cryptocurrency and fintech veterans, the Origin Dollar is brought to you by the team at Origin Protocol that includes serial entrepreneurs, early cryptocurrency investors, early employees at YouTube, engineering managers at Google/Dropbox, and one of the Paypal co-founders, Yu Pan.\n\nOrigin Dollar (OUSD) is a new, fully backed stablecoin that was initially launched in September 2020 on the Ethereum network. Its design is superior to existing stablecoins because OUSD captures competitive yields while being passively held in wallets.\n\nFor more information about Origin Dollar, please visit [https://www.ousd.com/](https://www.ousd.com/).  \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Loss of funds\n  - Loss of more than 10% of yield\n  - Freezing of funds that cannot be undone by admin actions\n  - Ability for an unauthorized user to use admin actions\n  - Governance process failures\n  - Redirected funds by address modification\n  - Shell access on server\n  - Injection of text\n  - Ability to have other users run arbitrary code on the site\n\n__Primacy of Impact vs Primacy of Rules__\n\nOrigin Dollar adheres to the Primacy of Impact for the following severity levels:\n  - Smart Contract: Critical\n\nIf a category’s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\n\nNon-deployed contracts on Github are not covered under the Primacy of Impact. \n\nAll other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\n",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n   - including flash loan attacks\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Smart Contract and Web/app bug reports must come with a PoC in order to be considered for a reward.\n\nThe known issues listed below are considered out of scope: \n\n  - All issues found in their past audits here: [https://docs.ousd.com/security-and-risks/audits](https://docs.ousd.com/security-and-risks/audits)\n\n  - OUSD does not guarantee which stablecoins will make up the backing stablecoins nor the value of those backing stable coins. Attacks which only change the mix of stablecoins, but do not reduce the total number of stablecoins held are excluded.\n\n  - Reductions in the number of backing stablecoins due to governance or strategist actions that move coins into or out of strategies, where the reduction comes from the normal fees of the underlying strategy or the price difference of stablecoins being moved in or out are excluded.\n\n  - Rounding in the flipper contract is intentional.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports on smart contracts. \n\nPayouts are handled by the __Origin Protocol__ team directly and are denominated in USD. However, payouts are done in __OUSD__.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "In addition, the current implementation contracts of all the listed proxy contracts are in scope. \n\nAll smart contracts of Origin Dollar can be found at [https://github.com/OriginProtocol/origin-dollar/tree/master/contracts/contracts](https://github.com/OriginProtocol/origin-dollar/tree/master/contracts/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Stablecoin"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract",
          "Websites and Applications"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $250,000"
          },
          {
            "level": "High",
            "payout": "USD $25,000"
          }
        ],
        "web_rewards": [
          {
            "level": "Critical",
            "payout": "USD $25,000"
          }
        ]
      }
    },
    "mdx": {
      "programOverview": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Created by cryptocurrency and fintech veterans, the Origin Dollar is brought to you by the team at Origin Protocol that includes serial entrepreneurs, early cryptocurrency investors, early employees at YouTube, engineering managers at Google/Dropbox, and one of the Paypal co-founders, Yu Pan.\"), mdx(\"p\", null, \"Origin Dollar (OUSD) is a new, fully backed stablecoin that was initially launched in September 2020 on the Ethereum network. Its design is superior to existing stablecoins because OUSD captures competitive yields while being passively held in wallets.\"), mdx(\"p\", null, \"For more information about Origin Dollar, please visit \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.ousd.com/\"\n  }, \"https://www.ousd.com/\"), \".  \"), mdx(\"p\", null, \"This bug bounty program is focused on their smart contracts and app and is focused on preventing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Loss of more than 10% of yield\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Freezing of funds that cannot be undone by admin actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability for an unauthorized user to use admin actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Governance process failures\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redirected funds by address modification\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Shell access on server\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Injection of text\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ability to have other users run arbitrary code on the site\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Primacy of Impact vs Primacy of Rules\")), mdx(\"p\", null, \"Origin Dollar adheres to the Primacy of Impact for the following severity levels:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Smart Contract: Critical\")), mdx(\"p\", null, \"If a category\\u2019s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.\"), mdx(\"p\", null, \"Non-deployed contracts on Github are not covered under the Primacy of Impact. \"), mdx(\"p\", null, \"All other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Created by cryptocurrency and fintech veterans, the Origin Dollar is brought to you by the team at Origin Protocol that includes serial entrepreneurs, early cryptocurrency investors, early employees at YouTube, engineering managers at Google/Dropbox, and one of the Paypal co-founders, Yu Pan.</p><p>Origin Dollar (OUSD) is a new, fully backed stablecoin that was initially launched in September 2020 on the Ethereum network. Its design is superior to existing stablecoins because OUSD captures competitive yields while being passively held in wallets.</p><p>For more information about Origin Dollar, please visit <a href=\"https://www.ousd.com/\">https://www.ousd.com/</a>.  </p><p>This bug bounty program is focused on their smart contracts and app and is focused on preventing:</p><ul><li>Loss of funds</li><li>Loss of more than 10% of yield</li><li>Freezing of funds that cannot be undone by admin actions</li><li>Ability for an unauthorized user to use admin actions</li><li>Governance process failures</li><li>Redirected funds by address modification</li><li>Shell access on server</li><li>Injection of text</li><li>Ability to have other users run arbitrary code on the site</li></ul><p><strong>Primacy of Impact vs Primacy of Rules</strong></p><p>Origin Dollar adheres to the Primacy of Impact for the following severity levels:</p><ul><li>Smart Contract: Critical</li></ul><p>If a category’s severity level is covered within the Primacy of Impact, it means that even if the impacted asset is not in-scope but is owned by the project, then it would be considered as in-scope of the bug bounty program as long as it involves an impact under that respective severity level. When submitting a report, just select the Primacy of Impact asset placeholder. If the team behind this project has multiple projects, those other projects are not covered under the Primacy of Impact of this program. Instead, check if those other projects have a bug bounty program on Immunefi.</p><p>Non-deployed contracts on Github are not covered under the Primacy of Impact. </p><p>All other severity levels not listed here are considered under the Primacy of Rules, which means that they are bound by the terms of the bug bounty program.</p>",
        "scope": {}
      },
      "prioritizedVulnerabilities": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are especially interested in receiving and rewarding vulnerabilities of the following types:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Re-entrancy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Logic errors\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including user authentication errors\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Solidity/EVM details not considered\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including integer over-/under-flow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including unhandled exceptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including composability vulnerabilities\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Oracle failure/manipulation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novel governance attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Economic/financial attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"including flash loan attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cryptography problems\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Signature malleability\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Susceptibility to replay attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak randomness\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weak encryption\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing access controls / unprotected internal or debugging interfaces\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remote Code Execution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusting trust/dependency vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vertical Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML External Entities Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SQL Injection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LFI/RFI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Horizontal Privilege Escalation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stored XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reflective XSS with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with impact\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Direct object reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Internal SSRF\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Session fixation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Insecure Deserialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DOM XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL misconfigurations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SSL/TLS issues (weak crypto, improper setup)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL redirect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clickjacking (must be accompanied with PoC)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Misleading Unicode text (e.g. using right to left override characters)\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>We are especially interested in receiving and rewarding vulnerabilities of the following types:</p><p><strong>Smart Contracts and Blockchain</strong> </p><ul><li>Re-entrancy</li><li>Logic errors<ul><li>including user authentication errors</li></ul></li><li>Solidity/EVM details not considered<ul><li>including integer over-/under-flow</li><li>including unhandled exceptions</li></ul></li><li>Trusting trust/dependency vulnerabilities<ul><li>including composability vulnerabilities</li></ul></li><li>Oracle failure/manipulation</li><li>Novel governance attacks</li><li>Economic/financial attacks</li><li>including flash loan attacks</li><li>Cryptography problems<ul><li>Signature malleability</li><li>Susceptibility to replay attacks</li><li>Weak randomness</li><li>Weak encryption</li></ul></li><li>Missing access controls / unprotected internal or debugging interfaces</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Remote Code Execution</li><li>Trusting trust/dependency vulnerabilities</li><li>Vertical Privilege Escalation</li><li>XML External Entities Injection</li><li>SQL Injection</li><li>LFI/RFI</li><li>Horizontal Privilege Escalation</li><li>Stored XSS</li><li>Reflective XSS with impact</li><li>CSRF with impact</li><li>Direct object reference</li><li>Internal SSRF</li><li>Session fixation</li><li>Insecure Deserialization</li><li>DOM XSS</li><li>SSL misconfigurations</li><li>SSL/TLS issues (weak crypto, improper setup)</li><li>URL redirect</li><li>Clickjacking (must be accompanied with PoC)</li><li>Misleading Unicode text (e.g. using right to left override characters)</li></ul>",
        "scope": {}
      },
      "rewardsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Rewards are distributed according to the impact of the vulnerability based on the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\"\n  }, \"Immunefi Vulnerability Severity Classification System V2.2\"), \". This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \"), mdx(\"p\", null, \"All Smart Contract and Web/app bug reports must come with a PoC in order to be considered for a reward.\"), mdx(\"p\", null, \"The known issues listed below are considered out of scope: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"All issues found in their past audits here: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.ousd.com/security-and-risks/audits\"\n  }, \"https://docs.ousd.com/security-and-risks/audits\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"OUSD does not guarantee which stablecoins will make up the backing stablecoins nor the value of those backing stable coins. Attacks which only change the mix of stablecoins, but do not reduce the total number of stablecoins held are excluded.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Reductions in the number of backing stablecoins due to governance or strategist actions that move coins into or out of strategies, where the reduction comes from the normal fees of the underlying strategy or the price difference of stablecoins being moved in or out are excluded.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Rounding in the flipper contract is intentional.\"))), mdx(\"p\", null, \"Critical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"USD 50 000\"), \" for Critical bug reports on smart contracts. \"), mdx(\"p\", null, \"Payouts are handled by the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Origin Protocol\"), \" team directly and are denominated in USD. However, payouts are done in \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OUSD\"), \".\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>Rewards are distributed according to the impact of the vulnerability based on the <a href=\"https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2\">Immunefi Vulnerability Severity Classification System V2.2</a>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. </p><p>All Smart Contract and Web/app bug reports must come with a PoC in order to be considered for a reward.</p><p>The known issues listed below are considered out of scope: </p><ul><li><p>All issues found in their past audits here: <a href=\"https://docs.ousd.com/security-and-risks/audits\">https://docs.ousd.com/security-and-risks/audits</a></p></li><li><p>OUSD does not guarantee which stablecoins will make up the backing stablecoins nor the value of those backing stable coins. Attacks which only change the mix of stablecoins, but do not reduce the total number of stablecoins held are excluded.</p></li><li><p>Reductions in the number of backing stablecoins due to governance or strategist actions that move coins into or out of strategies, where the reduction comes from the normal fees of the underlying strategy or the price difference of stablecoins being moved in or out are excluded.</p></li><li><p>Rounding in the flipper contract is intentional.</p></li></ul><p>Critical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of <strong>USD 50 000</strong> for Critical bug reports on smart contracts. </p><p>Payouts are handled by the <strong>Origin Protocol</strong> team directly and are denominated in USD. However, payouts are done in <strong>OUSD</strong>.</p>",
        "scope": {}
      },
      "outOfScopeAndRules": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following vulnerabilities are excluded from the rewards for this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks that the reporter has already exploited themselves, leading to damage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to leaked keys/credentials\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring access to privileged addresses (governance, strategist)\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Smart Contracts and Blockchain\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Incorrect data supplied by third party oracles\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not to exclude oracle manipulation/flash loan attacks\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basic economic governance attacks (e.g. 51% attack)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of liquidity\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practice critiques\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sybil attacks\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Websites and Apps\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Theoretical vulnerabilities without any proof or demonstration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content spoofing / Text injection issues\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Self-XSS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Captcha bypass using OCR\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CSRF with no security impact (logout CSRF, change language, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as \\u201Chttponly\\u201D)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server-side information disclosure such as IPs, server names, and most stack traces\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities used to enumerate or confirm the existence of users or tenants\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vulnerabilities requiring unlikely user actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lack of SSL/TLS best practices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDoS vulnerabilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attacks requiring privileged access from within the organization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Feature requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best practices\")), mdx(\"p\", null, \"The following activities are prohibited by this bug bounty program:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with pricing oracles or third party smart contracts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attempting phishing or other social engineering attacks against our employees and/or customers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any denial of service attacks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated testing of services that generates significant amounts of traffic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Public disclosure of an unpatched vulnerability in an embargoed bounty\")));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>The following vulnerabilities are excluded from the rewards for this bug bounty program:</p><ul><li>Attacks that the reporter has already exploited themselves, leading to damage</li><li>Attacks requiring access to leaked keys/credentials</li><li>Attacks requiring access to privileged addresses (governance, strategist)</li></ul><p><strong>Smart Contracts and Blockchain</strong></p><ul><li>Incorrect data supplied by third party oracles<ul><li>Not to exclude oracle manipulation/flash loan attacks</li></ul></li><li>Basic economic governance attacks (e.g. 51% attack)</li><li>Lack of liquidity</li><li>Best practice critiques</li><li>Sybil attacks</li></ul><p><strong>Websites and Apps</strong></p><ul><li>Theoretical vulnerabilities without any proof or demonstration</li><li>Content spoofing / Text injection issues</li><li>Self-XSS</li><li>Captcha bypass using OCR</li><li>CSRF with no security impact (logout CSRF, change language, etc.)</li><li>Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)</li><li>Server-side information disclosure such as IPs, server names, and most stack traces</li><li>Vulnerabilities used to enumerate or confirm the existence of users or tenants</li><li>Vulnerabilities requiring unlikely user actions</li><li>URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)</li><li>Lack of SSL/TLS best practices</li><li>DDoS vulnerabilities</li><li>Attacks requiring privileged access from within the organization</li><li>Feature requests</li><li>Best practices</li></ul><p>The following activities are prohibited by this bug bounty program:</p><ul><li>Any testing with mainnet or public testnet contracts; all testing should be done on private testnets</li><li>Any testing with pricing oracles or third party smart contracts</li><li>Attempting phishing or other social engineering attacks against our employees and/or customers</li><li>Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)</li><li>Any denial of service attacks</li><li>Automated testing of services that generates significant amounts of traffic</li><li>Public disclosure of an unpatched vulnerability in an embargoed bounty</li></ul>",
        "scope": {}
      },
      "assetsBodyV2": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In addition, the current implementation contracts of all the listed proxy contracts are in scope. \"), mdx(\"p\", null, \"All smart contracts of Origin Dollar can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/OriginProtocol/origin-dollar/tree/master/contracts/contracts\"\n  }, \"https://github.com/OriginProtocol/origin-dollar/tree/master/contracts/contracts\"), \". However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\"));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "<p>In addition, the current implementation contracts of all the listed proxy contracts are in scope. </p><p>All smart contracts of Origin Dollar can be found at <a href=\"https://github.com/OriginProtocol/origin-dollar/tree/master/contracts/contracts\">https://github.com/OriginProtocol/origin-dollar/tree/master/contracts/contracts</a>. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.</p>",
        "scope": {}
      },
      "impactsBody": {
        "compiledSource": "\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n\n;\nMDXContent.isMDXComponent = true;",
        "renderedOutput": "",
        "scope": {}
      }
    },
    "project": null
  },
  "__N_SSG": true
}
