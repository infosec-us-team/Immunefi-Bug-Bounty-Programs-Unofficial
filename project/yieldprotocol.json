{
  "pageProps": {
    "type": "bounty",
    "bounty": {
      "id": "yieldprotocol",
      "slug": "yieldprotocol",
      "project": "Yield Protocol",
      "maxBounty": 250000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2kWvHa5ZhMGP6OVynxoCwG/16d81ac8323e0ec125ad7486c8ea9e28/Yield_Protocol_logo_update_01_2022.jpg",
      "launchDate": "2021-03-01T00:00-07:00",
      "endDate": null,
      "updatedDate": "2023-08-04T16:39:56.435Z",
      "kyc": true,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "Up to USD $250,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $15,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $5,000",
          "pocRequired": false
        },
        {
          "assetType": "smart_contract",
          "level": "low",
          "payout": "USD $1,000",
          "pocRequired": false
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "73qkvzHSFa5E6jBIBKQ00O",
          "type": "smart_contract",
          "url": "https://github.com/yieldprotocol/vault-v2",
          "description": "Yield Protocol core contracts",
          "isPrimacyOfImpact": null
        },
        {
          "id": "1XZ1Qpi9pJxVZwm7slyUwS",
          "type": "smart_contract",
          "url": "https://github.com/yieldprotocol/yieldspace-tv",
          "description": "YieldSpace AMM",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7l4khtmSJsw1mUtyoTvLVA",
          "type": "smart_contract",
          "url": "https://github.com/yieldprotocol/yield-utils-v2",
          "description": "Utils",
          "isPrimacyOfImpact": null
        },
        {
          "id": "vYdPgNmRc2O9iueXyTcdb",
          "type": "smart_contract",
          "url": "https://github.com/yieldprotocol/strategy-v2",
          "description": "Liquidity Providing strategies",
          "isPrimacyOfImpact": null
        }
      ],
      "impacts": [
        {
          "id": "7AeijPSPvsz7FHPcddEVh2",
          "title": "Direct theft of any funds belonging to specific users, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1UQwxltFrErXmVJG1cd6tz",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4CuB6VkWkjavdYwgGh3Ko6",
          "title": "Direct theft of any funds not belonging to specific users leading to protocol insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1ZvpWvI2nG49I5P2rUItxF",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7kG2DPK5qlAF210CJgKali",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "32JX2QjZznGjPersHEcIZi",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3r510hYIJftvd4r1VnUrd7",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "3A0HiVmQL3B57P4nChSsdJ",
          "title": "Direct theft of any funds not belonging to specific users but not leading to protocol insolvency.",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "5qbVM6thCvFb1tzgnWwbzq",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "JwOqn5S8jnhoTuQ9m8BjL",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "7cP74OI66PSC3TOKFeq53k",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "5TKn13VnVl4hh05lThK3Mh",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3AnmbQ2XipO9rbjBs8v7zH",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "0XOByrjKTOFMGmNa5HjHM",
          "title": "Contract fails to deliver promised returns, but doesn't lose value",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "77aisoa9AGO7rG3PXbW13l",
          "title": "Function incorrect as to specification",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "1DVzvUWBYAlor2UyZRPd1Q",
          "title": "Unexpected but harmless behaviour",
          "type": "smart_contract",
          "severity": "low"
        },
        {
          "id": "3DL30BElXAIrFeOmMu8388",
          "title": "Temporary freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "low"
        }
      ],
      "programOverview": "Yield Protocol brings collateralized fixed-rate, fixed-term borrowing and\nlending and interest rate markets to decentralized finance.\n\nThis solves a major pain point around today's DeFi lending protocols:\npredictable interest rates. Existing DeFi protocols offer only variable\ninterest rates. These protocols may experience interest rate volatility that\ncan make it difficult for you to plan for the future, make investment\ndecisions, and properly hedge risk when borrowing and lending.\n\nYield Protocol allows you to have a \"set and forget\" experience, instead of\nconstantly rebalancing your assets across DeFi in an effort to minimize your\nborrow rates or maximize your lending yields. We accomplish that with a new\nprimitive, fixed yield tokens, or fyTokens for short. fyTokens are\nEthereum-based tokens (ERC20) that may be redeemed one-for-one for a target\nasset after a predetermined maturity date.\n\nThe bug bounty program is focused around its smart contracts and the prevention\nof loss of user funds.",
      "prioritizedVulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports.  \n\nPayouts are handled by the __Yield Protocol__ founding team directly and are denominated in USD. Payouts are done in __USDC__ or __Dai__. ",
      "outOfScopeAndRules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Issues included in the [protocol issue registry](https://github.com/yieldprotocol/bugs/issues)\n- Any impact derived from entering incorrect parameters in permissioned functions\n- Financial losses to the user executing a transaction derived from incorrect use of non-permissioned functions in that same transaction\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n\n__Resources__\n  - Website: [https://yieldprotocol.com/](https://yieldprotocol.com/)\n  - Application: [https://app.yieldprotocol.com/](https://app.yieldprotocol.com/)\n  - Documentation: [https://docs.yieldprotocol.com/](https://docs.yieldprotocol.com/)\n  - Addresses: [https://docs.yieldprotocol.com/#/developers/addresses](https://docs.yieldprotocol.com/#/developers/addresses)\n  - Batch operation: [https://docs.yieldprotocol.com/#/developers/feature_building](https://docs.yieldprotocol.com/#/developers/feature_building)\n  - Known governance attack vectors: [https://docs.yieldprotocol.com/#/operations/how_to_hack](https://docs.yieldprotocol.com/#/operations/how_to_hack)",
      "assetsBodyV2": "Any contracts inside directories named “test”, \"mocks\", “draft” or “deprecated” are out of scope.\n",
      "impactsBody": "Any vulnerabilities involving documentation errors, Natspec errors, and code clarity are considered informational and not rewarded. \n\nThese accepted impacts are then based on the severity classification system of this bug bounty program. When submitting a bug report, please select the severity level you feel best corresponds to the severity classification system as long as the impact itself is one of the listed items.\n\nFor each precondition for a vulnerability, please downgrade the severity by one degree. For example, a critical vulnerability that requires governance permissions would be downgraded to a high vulnerability.\n\nFor vulnerabilities with a financial impact (to users or to the protocol), please downgrade the severity by one degree if the aggregated loss is below $10K USD.\n\n__On protocol insolvency:__  Protocol insolvency is when the value of the protocol assets in USD is below the value of the protocol liabilities in USD. The protocol assets are the assets kept in Join contracts, the protocol liabilities are the total supply of all fyToken contracts.\n\nDue to the Euler hack, a number of March, June and September 2023 fyToken were replaced and are not counted as liabilities. Contact the team if you need more information.\n\n__On permanent and temporary freezing of funds:__ Freezing of funds will be considered permanent if it can’t be resolved by any conceivable process, such as a governance action which might include deployment of new or specialized contracts and the execution of permissioned functions.\n\n__On user errors:__  The Yield Protocol targets an unusual level of user protection, in which we accept users can suffer losses if they interact with the protocol in unexpected ways. \n\nMore specifically, the Yield Protocol uses the [Forward Trust Pattern](https://hackernoon.com/using-the-forward-trust-design-pattern-to-make-scaling-easier) and interacting with the contracts directly is not recommended except for developers that know how to thoroughly test their interactions before executing them on the network.\n\n__On MEV and token skimming:__ Any unaccounted tokens in any Yield Protocol contract can be extracted by anyone, and this is by design. This includes tokens sent to Ladle, Joins, FYToken and Pools if they are not used by the end of the transaction.\n\nMore specifically:\n  - Any registered tokens sent to the Ladle, by using a number of functions. The Ladle doesn’t hold tokens between transactions. Any registered tokens sent to the Ladle should be sent elsewhere by one of the many functions before the end of the transaction.\n  - Any fyToken sent to their own contract. Unaccounted tokens in that situation should be used by calling `redeem` before the end of the transaction.\n  - Any `asset` sent to the Join. Unaccounted tokens in that situation should be used by calling `join` before the end of the transaction.\n  - Any non `asset` sent to the Join. Such tokens shouldn’t be sent to the Join.\n  - Any known token sent to the Pools. Such tokens should be used by one of the buy or sell functions, or retrieved, before the end of the transaction. Pools are called repeatedly in the same transaction by the Ladle to enable this\n",
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "Lending"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "ETH"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Rust",
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "Up to USD $250,000"
          },
          {
            "level": "High",
            "payout": "USD $15,000"
          },
          {
            "level": "Medium",
            "payout": "USD $5,000"
          },
          {
            "level": "Low",
            "payout": "USD $1,000"
          }
        ],
        "web_rewards": []
      }
    },
    "project": null,
    "layoutProps": {
      "headerMarginBottom": null
    }
  },
  "__N_SSG": true
}
