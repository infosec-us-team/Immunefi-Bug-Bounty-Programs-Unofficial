{
  "pageProps": {
    "bounty": {
      "contentfulId": "77cE1zzAB8uHgo0tAqiGFa",
      "id": "duetfinance",
      "slug": "duetfinance",
      "project": "Duet Finance",
      "maxBounty": 10000,
      "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5vXimJyIxov2NZPVOHsVQY/fecd254c57b0ee292780cd6ae32f8f90/Duet_Finance_logo.jpeg",
      "launchDate": "2022-02-14T21:00-07:00",
      "endDate": null,
      "updatedDate": "2024-04-08T18:55:32.629Z",
      "kyc": false,
      "rewards": [
        {
          "assetType": "smart_contract",
          "level": "critical",
          "payout": "USD $10,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "high",
          "payout": "USD $3,000",
          "pocRequired": true
        },
        {
          "assetType": "smart_contract",
          "level": "medium",
          "payout": "USD $2,000",
          "pocRequired": true
        }
      ],
      "audits": null,
      "assets": [
        {
          "id": "6awny9f6wBkyIV0fMANCOJ",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x0af9161CBEe79e05E5ed8624747998Bbe01cb6F9",
          "description": "Duet Pro Staking",
          "isPrimacyOfImpact": null
        },
        {
          "id": "7jViqyhY58wxrlrxeviWBi",
          "type": "smart_contract",
          "url": "https://arbiscan.io/address/0x82d41ea61ea85f546eced32c908649a47e05d32d",
          "description": "Token Oracle",
          "isPrimacyOfImpact": null
        }
      ],
      "impacts": [
        {
          "id": "ClwHKs8ZcQWWDHbmUbd9N",
          "title": "Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "A7Gcc4Oe1nk1WK3q1WviL",
          "title": "Permanent freezing of funds",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "5dxY3jaOue8bz3nS8QTPpv",
          "title": "Miner-extractable value (MEV)",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "1ijr6b7mgpz6JfV5gfvAjA",
          "title": "Protocol Insolvency",
          "type": "smart_contract",
          "severity": "critical"
        },
        {
          "id": "4Zj2cyjXHwN8qBV1YSOxML",
          "title": "Theft of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "7x5yUwpyswulavhNoJpzak",
          "title": "Permanent freezing of unclaimed yield",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2A4JQrRQfqumJNpjRWzTVA",
          "title": "Temporary freezing of funds",
          "type": "smart_contract",
          "severity": "high"
        },
        {
          "id": "2GrpehqDO1qTtv87MCVjPs",
          "title": "Smart contract unable to operate due to lack of token funds",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "4IpSqkZZubxyWUecoQaSxT",
          "title": "Block stuffing for profit",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "3jFaQY8MgTWCR5HGDOJNkj",
          "title": "Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6IHu4QfQrmKn83pLFBfZKQ",
          "title": "Theft of gas",
          "type": "smart_contract",
          "severity": "medium"
        },
        {
          "id": "6QpGYGWJBNDpyCSrtW8yIC",
          "title": "Unbounded gas consumption",
          "type": "smart_contract",
          "severity": "medium"
        }
      ],
      "programOverview": "Duet protocol (Duet) is a Multi-chain synthetic asset protocol that sharpens all assets for use in the blockchain world. A duet in music refers to a piece of music where two people play different parts or melodies. Similarly, Duet protocol allows traders to replicate the real-world tradable assets in a decentralised finance ecosystem.\n\nFor more information about Duet Finance, please visit [https://duet.finance/](https://duet.finance/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - Incorrect polling actions\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
      "prioritizedVulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - Governance vote manipulation\n",
      "rewardsBody": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2.2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2-2). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nThe following vulnerabilities are not eligible for a reward:\n\nIn contract 0x014127E127C6788BaDaE75Ba213a58Ac22944c82 , a potential sandwith attack may occur when swap because we ignore slippage control.\nSome tokens may be left on contract 0x014127E127C6788BaDaE75Ba213a58Ac22944c82 when transferring tokens to Liquidity Pool or BNB to Liquidity Pool.\n\nAll vulnerabilities marked in the [BlockSec security review](https://drive.google.com/file/d/1vPRgBm1G61UP8Iwbllo2_LC_W9btWA2W/view?usp=sharing) and [Peckshield security review 1st report](https://drive.google.com/file/d/17kcOPfov05cky5uAbNW9bMsEENuMEXCc/view?usp=sharing) , [Peckshield security review 2nd report](https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Duet-Bond-v1.0.pdf) are not eligible for a reward.\n\nPayouts are handled by the __Duet Finance__ team directly and are denominated in USD. However, payouts are done in __USDT and bDUET (which is abbreviation for bonded DUET or you can simply understand unvested DUET, and the sessions here that will mature in less than half a year, specific terms to be negotiable case by case)__, with the choice of the ratio at the discretion of the team.",
      "outOfScopeAndRules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty",
      "assetsBodyV2": "All smart contracts of Duet Finance can be found at [https://github.com/duet-protocol/duet-contracts ](https://github.com/duet-protocol/duet-contracts).\n\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\nam.",
      "impactsBody": null,
      "immunefiStandard": true,
      "tags": {
        "productType": [
          "AMM",
          "DAO",
          "Synthetic Assets",
          "Yield Aggregator"
        ],
        "projectType": [
          "Defi"
        ],
        "ecosystem": [
          "Arbitrum",
          "BSC"
        ],
        "programType": [
          "Smart Contract"
        ],
        "language": [
          "Solidity"
        ]
      },
      "legacy": {
        "technologies": [
          "Smart Contract"
        ],
        "blockchain_rewards": [],
        "smartcontract_rewards": [
          {
            "level": "Critical",
            "payout": "USD $10,000"
          },
          {
            "level": "High",
            "payout": "USD $3,000"
          },
          {
            "level": "Medium",
            "payout": "USD $2,000"
          }
        ],
        "web_rewards": []
      },
      "premiumTriaging": false
    },
    "project": {
      "premiumTriaging": false
    },
    "metaData": {
      "title": "Duet Finance Bug Bounties | Immunefi",
      "description": "Find bugs and vulnerabilities on Duet Finance and get paid up to $10,000.",
      "url": "https://immunefi.com/bug-bounty/duetfinance",
      "ogImg": "/api/bounty/og-image?project=Duet+Finance"
    }
  },
  "__N_SSP": true
}
